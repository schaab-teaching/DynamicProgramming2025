%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Acr466432897254952-9528.tmp.pdf
%%Creator: Adobe Acrobat 10.1.4
%%For: moll
%%CreationDate: 9/30/12, 9/30/12 8:57 AM
%%BoundingBox: 0 0 450 350
%%HiResBoundingBox: 0 0 449.8621 349.7161
%%CropBox: 0 0 449.8621 349.7161
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 791 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2012-09-30T08:57:24-04:00"
   xmp:CreateDate="2012-09-30T08:57:24-04:00"
   xmp:MetadataDate="2012-09-30T08:57:24-04:00"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:abf4dfca-6547-3d4e-8a36-97250f5a251f"
   xmpMM:InstanceID="uuid:bb480c97-7283-8949-af1b-4150b478cbea"
   pdf:Producer="Mac OS X 10.8.2 Quartz PDFContext"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -349.716 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 349.716 li
449.862 349.716 li
449.862 0 li
cp
clp
gsave
-174.063 505.496 mo
617.937 505.496 li
617.937 -106.504 li
-174.063 -106.504 li
cp
clp
-101.271 -35.3325 mo
-90.4713 -35.3325 li
-90.4713 -46.9725 li
-101.271 -46.9725 li
cp
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[10.8 0 0 11.64 -275.335 385.048 ]ct
<<
/T 1
/W 90 
/H 97 
/M[90 0 0 -97 0 97 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
pAb3rs7ZKo"98)q!<`Ar!!*3%pAb3ps7ZKo!WVlo&cr%4rVup/s8W&u!!3-"rVup/rr38n!!3-"rVup/
rr3?'!!3-"rVup/s8NE*rr<*"s8Duu&,lM5^]FK8rVup/rVm,\!WW3!!!!Q.rs/#ns8W&u!"]&.#P\<!
s8Duu&,lM5quHcsrVup/rVm-#!<<)u!!!Q.rs/N's8W&u!"]&.#Q=`'s8Duu&,cG3!<<)u!!!Q-rrW9$
s8E'"!"]#-#(ZaRrVup/r;QtOJ,fKJ!"]#-#(V4'rVup/r;QtOJ,fKJ!"]#-#/G`grVup/r;Qu:J,fKJ
!"]#-0#2u:rVup/s8RWLs1j-arVup/s8RWLs1j-arVup/s8RWLs1j-arVup/s8RWL0)sios8Duu&-)Z[
s8V"As8Duu&-)Z[s8V"As8Duu&-)Z[s8V"As8Duu&-)Z[r;R!#!!!Q0rrDus#6"T&&-)Y0r;R!#!!!Q0
rrDus#6"T&&-)V/r;R!#!!!Q0rW)lr#6"T&&-)P-r;Qit!!!*3s7cTlrs&H&!"]+f!;uj$rVup/rr<&s
rrE&q!;uisrqc]nrrE&q!;uisrqc]nrrE&q!;uisrqc]nrrE&q!;uj$rVup/rr<&urs8Z)rVup/s53nT
rs&H&!"],)!;uj$rVup/s82lprs&H&!"],/!;uj$rVup/s8E#rrs&H&!"],0!;uj$rVup/s8N)srs&H&
!"],0!;uj$rVup/s8RWIrs&H&!"],0JGfEMrVup/rrN.Mr;R!#!!!Q0s+(%I#6"T&&-)Z[r;R!#!!!Q0
s+(%I#6"T&&-)Z[r;R!#!!!Q0s+(%I"9&9#&,H5-rVup/q>UQr!!!Q*rr`6#!"\o*"9&9#&,H5-rVup/
q>UQr!!!Q*rr`6#!"\o*"9&9#&,H5-rVup/q>UQr!!!Q*rr`6#!"\o*"9&9#&,H5-rVup/q>UQr!!!Q*
rr`6#!"])/r;Qlu!!!Q*rr`6#!"\o*"9&9#&,H5-rVup/q>UQr!!!Q+s8)cr!W;up!!!&ts8)cr!W;up
!!!&ts8)cr!W;us!<)ru!W;up!!!&ts*t~>

%%EndBinary
grestore
np
f
-88.7913 -35.3325 mo
-84.5913 -35.3325 li
-84.5913 -47.4525 li
-88.7913 -47.4525 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[4.2 0 0 12.12 -262.855 385.048 ]ct
<<
/T 1
/W 35 
/H 101 
/M[35 0 0 -101 0 101 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
!rr$+rr3#W"9/<$J,oTK<WE,Ls8Duu5QC]_!'gM]!!",@qu?^=s7cQo&-)D)!"],)!!!Q0p](:)s7cQo
&-)D)!"],)!!!Q0qu?^=s82is+92<?!'gM_!!#7`rr<%Ks8RTLrr3#W"9/<$p^curbPt-.!'gL6!!#7`
J,fR6s*t(L5Q?66!'gL6!!#7`J,fR6s*t(L5QC``!'gM`J,hh6s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!
IfKG`!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!
!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`
=MOo$s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!
s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCZ^!$D.>!$D.>!$D.>!$D.>!$D.>!$D.>!$?^~>

%%EndBinary
grestore
np
f
-83.3913 -35.3325 mo
-73.4313 -35.3325 li
-73.4313 -43.1324 li
-83.3913 -43.1324 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[9.96 0 0 7.8 -257.455 385.048 ]ct
<<
/T 1
/W 83 
/H 65 
/M[83 0 0 -65 0 65 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
#QOQ!J,f9D5Q:]^!!IfOJ,f]Ns8E!!J,]EIrr;rt!IsnD!!5Cbs8E!!J)L;+![%IBrW!1Q^^&ct&-)\/
!!duRJ+s!Ks8W&u"b$LPqu?iurs&N(HjB]L!!3*!#Clf!&-)P-!WN*(^]8<qs8Duurr3,:!,t1&!r`0"
rr35=!+:<VrVurtrrTt95lUf`!<3!"^]6\"rs&N(J,fPa!!3*!#64aRs8Tk7"9/<*!!%NKs1eU:rr33'
!.Y%K^]4W=rs&N(J,fPa!!iN'#64aRs8Tk7&,uS6!!%NKs1eUFrr33'!.Y%K^]4oErr`<%J,fNM^]5JU
rs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7
+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K
^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aR
s8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7+9)9D!!%NKs1eX8+9)9F
!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JU
rs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?!!!'#J,fHI
!=/Q$!!",>!!*?&r;Zg>r;Zj'r;?Tq+8l0?#Q4N#!$D.>!=/Q$!!",>!!*?&r;Zg>r;Zj'r;?Tq++O~>

%%EndBinary
grestore
np
f
-72.3513 -35.3325 mo
-68.1513 -35.3325 li
-68.1513 -47.4525 li
-72.3513 -47.4525 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[4.2 0 0 12.12 -246.415 385.048 ]ct
<<
/T 1
/W 35 
/H 101 
/M[35 0 0 -101 0 101 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
!rr$+rr3#W"9/<$J,oTK<WE,Ls8Duu5QC]_!'gM]!!",@qu?^=s7cQo&-)D)!"],)!!!Q0p](:)s7cQo
&-)D)!"],)!!!Q0qu?^=s82is+92<?!'gM_!!#7`rr<%Ks8RTLrr3#W"9/<$p^curbPt-.!'gL6!!#7`
J,fR6s*t(L5Q?66!'gL6!!#7`J,fR6s*t(L5QC``!'gM`J,hh6s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!
IfKG`!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!
!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`
=MOo$s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!
s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCZ^!$D.>!$D.>!$D.>!$D.>!$D.>!$D.>!$?^~>

%%EndBinary
grestore
np
f
-67.3113 -35.2125 mo
-61.1913 -35.2125 li
-61.1913 -46.2524 li
-67.3113 -46.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.12 0 0 11.04 -241.375 384.928 ]ct
<<
/T 1
/W 51 
/H 92 
/M[51 0 0 -92 0 92 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
"98Dr&,cG.p^d<&!Vd3'rrMm*r;Qfm&,cG.p^d<&!UpWtrrMU"r;Qfe&,cG.n.5Hs!UpWtrrM$gr;QfU
&,cG.i",bc!Pf6DrrKnGr;QeJ&,cG.J.MVY!ri62r;Qct&,lM0rW!K-rrW)u&,lM0qu@9+rrVrq&,lM0
n,O!trrTt9&,lM0J,g,ZrrE&r!!3,hqu?`sqZ$WrqZ$WrqZ$WrqZ$WrqZ$d!s53kfrVlrW!"]&.!8mkX
&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0
huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrM$X!"]&.!oO%hrVlrW!"]&.!oO%h
rVlrW!"]&.!oO%hrVlrW!"]&.!oO%hrVlrW!"]&.!oO%hrVlrW!"]&.!oO%hrVnG,!"],!+917!&-),@
s53kfs6q-1huF;fn/q\g!"],!+917!&-),@s53kf>lX:8s53kfs6q-1huF;fn/q\g!"],!+917!&-),@
s53kfs6q-1huF;fi#i!g!!iP^5QC3Q#QN^Hs6p!ns1gl!p](Er^jlCZ!!3+MJ,fEH!WN0"s8DuuHia6H
rVup!rr3(N!!!-#rr_0Z!"])/"7Q9j+9)9ArVuouJ,TBLhuWlXJ,~>

%%EndBinary
grestore
np
f
-59.3912 -35.2125 mo
-51.5912 -35.2125 li
-51.5912 -43.2524 li
-59.3912 -43.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.8 0 0 8.04 -233.454 384.928 ]ct
<<
/T 1
/W 65 
/H 67 
/M[65 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
rr3&h!'gD]"9&9#"8r0!nGWCfJ,TBI_#=<6+8u6<!!!9'rrr<#!W2p"rr3/s!"]*[!WN*&huFl!huNcV
0#.I:s6p#<s8RTLs8Vio5QC``!<<)s!$D7?!!3-"rW!K/rW!'#s8E!/s82j!rr3'##QOQ"!!iN'"TSf-
p](QurriB)s6p!nrr3.P"97ij&,uS4J-#].!"])/"b6XRhuF;errp1=s1eUFrr3/;!<9h7&,uS4^]=Cb
!$D4?"i(-<J,g\jrrp1<s*t(krr3/;!.TM!+9)9DhuJ7W!$D4?"lKB1!!",?rrh6[IfKHK+9)9DhuJ6,
!$D4?!oO'.q#CDEq#CDEq#CDEq#CDEq#CNs!!",<rrN0#+8c'>!!",<rrN0#+8c'>!!",<rrR]N+8c'>
J,g\grrR]N+8c'>J,g,WrrTt9&,ZA.^]4oBrrTt9&,ZA.huF;drrh9[huF#\rrg,en,N^lrrg,en,N^l
rrdk%p](EprrdlPqu?itrr`?%qu?crrr`B&rVurtrt#)0s8N'!J,fQH"98CO!'_t5s7c]rs1eUVs8V!^
s8V!W#QOgS&-)\!!!3-!!$D7@qu?^]huH"As8MorrVlkJrVup!rVllUrVup'rVllqrVup?r;QhK!!)or
!r)a+rr7K~>

%%EndBinary
grestore
np
f
-50.6312 -38.3325 mo
-45.4712 -38.3325 li
-45.4712 -40.0125 li
-50.6312 -40.0125 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.16 0 0 1.68 -224.694 388.048 ]ct
<<
/T 1
/W 43 
/H 14 
/M[43 0 0 -14 0 14 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
qu?^=qu?^=qu?^=qu?^=qu?^=qu?^=qu?^=qu?^=qu?^=qu?^=qu?^=qu?^=qu?^=qu?^=J,~>

%%EndBinary
grestore
np
f
-43.5512 -35.3325 mo
-30.2312 -35.3325 li
-30.2312 -47.0925 li
-43.5512 -47.0925 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[13.32 0 0 11.76 -217.614 385.048 ]ct
<<
/T 1
/W 111 
/H 98 
/M[111 0 0 -98 0 98 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
q#CC"r;ZNl!$D1>p](9rrVuTl!.Y"JpAb1(rr;]m!!E6#p&P'k#6"T&+92B=rVup_rr3*"!!",?rr_0Z
!$D4?"9&9#+9)9Bqu?^-rr3*"!!",>rrR]N"9/<&rVup?rVlrW!!3*!"9&9#+8u3@n,NIfrr`6#!$D1>
$2ac'J,fQJ!!",>rsAZ)!'gM`rVup?r;R$&!$D7@rVup?r;R%Q!"],0rVup?r;Qr9!!iQ(rW3'"+8l-E
huElZs8Duu+8l-En,NRjs8Duu+8l-En,NLhs8Duu+8l-Ep](<os8Duu+8l-Ep](<os8Duu+8l-Equ?_H
s8Duu+8l-Equ?_Hs8Duu+8l-ErVup_s8Duu+8l-CrVup_s8E!!!$D.=#lXf(+92<?!$D+<#64`Gs8Duu
+8c'C!!",@rVup?qu6m$!"],/!!",<rs&N(&-)V/!$D+<#Cldbs8Duu+8c'CJ,fiSrVup?qu6nO!!iQ'
!!",<rs!uR#QOc'!!",<rs+&S"98?#!$D+<#CldVs8Duu+8c'CJ,f]OrVup?qu6o:!!E9#!!",<rs-=>
"98?#!$D+<#J^<As8Duu+8c'C^]4E8rVup?qu6o:!!3-!!!",<rs-=>!WW-!!$D+<#J^<?s8Duu+8c'C
^]4E8rVup?qu6o:!!3-!!!",<rs-=>!WW-!!$D+<#J^<?s8Duu+8c'C^]4E8rVup?qu6o:!!3-!!!",<
rs-=>!WW-!!$D+<#f$E@s8Duu+929=#J^<?s8Duu+8c'C^]4E8rVup?qu6o:!!3-!!!",<rs-=>!WW-!
!$D+<#J^<As8Duu+8c'C^]4K:rVup?qu6nO!!E9#!!",<rs+&S"98?#!$D+<$%N!Xs8Duu+92B>rs+&S
#QOc'!$D+<#CldZs8Duu+8c'CJ,fiSrVup?qu6nO!!iQ'!!",<rs&N(&-)V/!$D+<#64`7s8Duu+8c'C
!!",@rVup?qu6m$!$D7?!!",=rs8T(!$D7?!!",?rsJf+rVup_s8Duu+8l-ErVup_s8Duu+8l-Equ?_H
s8Duu+8l-Equ?_Hs8Duu+8l-Ep](<os8Duu+8l-Ep](?ps8Duu+8l-En,NLhs8Duu+8l-EhuElZs8Duu
+8l-E^]4W>s8Duu+8u3Gs1eUFs8W&u!$D.=#_2mcs8W&u!$D1>$2so)+92B?!!",>rsAT'!'gM`rVup?
rVm3!!!%NKs8Duu+8u3@huEcVrr`6#!$D1>!e:7Qrr3*"!!",?rr`6#!!iN'"9&9#+9)9Bn,NG!rr39'
!!",@s8Duu!rtRcs7QHls7ZKn"9/>p!!!Q/s7ZKn5Q:]X!!!&us7cQo+8u68!!!9%s*t~>

%%EndBinary
grestore
np
f
-28.3112 -35.3325 mo
-24.1112 -35.3325 li
-24.1112 -47.4525 li
-28.3112 -47.4525 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[4.2 0 0 12.12 -202.374 385.048 ]ct
<<
/T 1
/W 35 
/H 101 
/M[35 0 0 -101 0 101 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
!rr$+rr3#W"9/<$J,oTK<WE,Ls8Duu5QC]_!'gM]!!",@qu?^=s7cQo&-)D)!"],)!!!Q0p](:)s7cQo
&-)D)!"],)!!!Q0qu?^=s82is+92<?!'gM_!!#7`rr<%Ks8RTLrr3#W"9/<$p^curbPt-.!'gL6!!#7`
J,fR6s*t(L5Q?66!'gL6!!#7`J,fR6s*t(L5QC``!'gM`J,hh6s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!
IfKG`!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!
!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`
=MOo$s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!
s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCZ^!$D.>!$D.>!$D.>!$D.>!$D.>!$D.>!$?^~>

%%EndBinary
grestore
np
f
-23.1512 -35.3325 mo
-10.7912 -35.3325 li
-10.7912 -47.4525 li
-23.1512 -47.4525 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[12.36 0 0 12.12 -197.214 385.048 ]ct
<<
/T 1
/W 103 
/H 101 
/M[103 0 0 -101 0 101 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
r;Qs$!<<)u!"]#-#CldS&-'EF!WE#ur;HZs"9/9"!.Y"J!9!eU!;QNn!'gJ_qu?^>rW!0Fs8Vus!$D.<
!&Hii#QOi!!!E9$J,fWL!!iQ(huF;frr<$(qu?j!s1eV!s8Duu&,ZD0s8N'!s8Vus!$?[b!!3-!!!3-"
qu?^]p](?prW!'#s7cQo5PP3Zs82j%s8Vio!.XbD!WVop#QOi!!!%ND!!3,h!"],0p](<op](?pn,O"!
s7cQos7cQps6p"1s8Vio!<;fo!WV'X+92B9!!3,t!!E8Z!'gM`qu?ctrW!3'huH"As83W4!WW0"&-(Pf
5QCc_!!3-"J04gL!'gJ_#lk#+s7$'ghuH"@rrE*#r;QiV!'gJ_!<</urrV*Y5Q:Z`!!3#t!oO&Crr3!!
!W;s!huH"@rrE*#r;QiV!'gJ_!<</urrV*Y5Q:Z`!!3#t!oO&Crr3!!!W;s!huH"@rrE*#r;QiV!'gJ_
!<</urrV*Y5Q:Z`!!3#t!oO&Crr3!!!W;s!huH"@rrE*#r;QiV!'gJ_!<</urrV*Y5Q:Z`!!3&up&P-m
p&G0orrDcns8Vcms8Vcms8Vcms8Vcmrr3&X!$D4?rrDus!oO&#rr;uur;QiV!$D4?rrDus!oO&#rr;uu
r;QiV!$D4?rrE*!rr3&X!$D4?rrDus!oO&#rr;uur;QiV!$D4?rrDus!oO&#rr;uur;QiV!$D4?rrDus
!oO&#rr;uur;QiV!$D4?rrDus!oO&#rr;uur;QiV!$D4?rrDus!oO&#rr2ru!!)rs!oO&#rr;uur;QiV
!$D4?rrDus!oO&#rr;uur;QiV!$D4?rrDus!oO&#rr;uur;QiV!$D4?rrDus!oO&#rr;uur;QiV!$D4?
rrDus!oO&#rr;uur;QlW!$D7@s8N)srrV*Y+9)<?!;uiuhuFkus8N)srrV*Y+9)<?!;uiuhuFkus8N)s
rrV*Y+9)<?!;uiuhuFkus8N)srrV*Y+9)<?!;uiuhuFkus8N)srrV*Y+9)<?!;uishuNg"rr;uur;QiV
!$D4?rrDus!oO&#rr;uur;QiV!$D4?rrDus!oO&#rr;uur;QiV!$D4?rrDus!oO&#rr;uur;QiV!$D4?
rrDus!oO&#rr;uur;QiV!$D4?rrE&u"TSM[!$D4?rrDus!oO&#rr;uur;QiV!$D4?rrDus!oO&#rr;uu
r;QiV!$D4?rrDus!oO&#rr;uurVlkJrVus(r;?Tt&-)Z[rVus(r;?Tt&-)Z[rVus(r;?Tt&-)Z[rVus(
r;H[!!"],0JGoNL#Q4N#!tYG3JGoNL#Q4N#!tYG3JGoNL#Q4N#!Y>>2J,~>

%%EndBinary
grestore
np
f
-11.5112 -35.2125 mo
-3.71123 -35.2125 li
-3.71123 -43.2524 li
-11.5112 -43.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.8 0 0 8.04 -185.574 384.928 ]ct
<<
/T 1
/W 65 
/H 67 
/M[65 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
rr3&h!'gD]"9&9#"8r0!nGWCfJ,TBI_#=<6+8u6<!!!9'rrr<#!W2p"rr3/s!"]*[!WN*&huFl!huNcV
0#.I:s6p#<s8RTLs8Vio5QC``!<<)s!$D7?!!3-"rW!K/rW!'#s8E!/s82j!rr3'##QOQ"!!iN'"TSf-
p](QurriB)s6p!nrr3.P"97ij&,uS4J-#].!"])/"b6XRhuF;errp1=s1eUFrr3/;!<9h7&,uS4^]=Cb
!$D4?"i(-<J,g\jrrp1<s*t(krr3/;!.TM!+9)9DhuJ7W!$D4?"lKB1!!",?rrh6[IfKHK+9)9DhuJ6,
!$D4?!oO'.q#CDEq#CDEq#CDEq#CDEq#CNs!!",<rrN0#+8c'>!!",<rrN0#+8c'>!!",<rrR]N+8c'>
J,g\grrR]N+8c'>J,g,WrrTt9&,ZA.^]4oBrrTt9&,ZA.huF;drrh9[huF#\rrg,en,N^lrrg,en,N^l
rrdk%p](EprrdlPqu?itrr`?%qu?crrr`B&rVurtrt#)0s8N'!J,fQH"98CO!'_t5s7c]rs1eUVs8V!^
s8V!W#QOgS&-)\!!!3-!!$D7@qu?^]huH"As8MorrVlkJrVup!rVllUrVup'rVllqrVup?r;QhK!!)or
!r)a+rr7K~>

%%EndBinary
grestore
np
f
-2.39124 -35.3325 mo
4.56877 -35.3325 li
4.56877 -43.1324 li
-2.39124 -43.1324 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.96 0 0 7.8 -176.454 385.048 ]ct
<<
/T 1
/W 58 
/H 65 
/M[58 0 0 -65 0 65 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
#QOQ!J+s'Es8E!$J)C;ks8E!$It.M0s8E!$IfKHRs8E!$HiO-Is8E!$GQZk(s8E!$GRo<)J,TF8E'JjQ
J,]KK@"/.V5Q?66@"/.V5QAM!5lUfa5QAM!62pob5QAM!!WN-"5QAM!"9/?$5QAM!"9/?$5QAM!#QFc(
/3j0M!!iOS!.Y$a!"]*[!.Y$a!"]+F!<<)7!"],!"98D:!"],-&-)[F!$D.=!l+dXr;Qi6!$D.=!l+dX
r;Qi6!$D.=!l+e#r;Qi6!'gD]!l+e#r;Qi6!'gD]!l+e#r;Qo8!'gM`rr3&8!'gD]!l+e#r;Qi6!'gD]
!l+e#r;Qi6!'gD]!l+e#r;Qi6!'gD]!l+e#r;Qi6!'gD]!l+e#r;Qi6!'gD]!l+e#r;Qi6!'gD]!l+e#
r;Qi6!'gD]"2Fn$s8Ds!^]6UsrrTt95Q(N_^]6UsrrTt95Q(N_^]6UsrrTt95Q(N_^]6UsrrTt95Q(N_
^]6UsrrTt95Q1W\!!!-#s8;ot"9/?!!!!-#s8;ot"9/?!!!!-#s8;ot"9/?!!!!-#s*t~>

%%EndBinary
grestore
np
f
5.76877 -35.2125 mo
13.5688 -35.2125 li
13.5688 -43.2524 li
5.76877 -43.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.8 0 0 8.04 -168.294 384.928 ]ct
<<
/T 1
/W 65 
/H 67 
/M[65 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
rr3&h!'gD]"9&9#"8r0!nGWCfJ,TBI_#=<6+8u6<!!!9'rrr<#!W2p"rr3/s!"]*[!WN*&huFl!huNcV
0#.I:s6p#<s8RTLs8Vio5QC``!<<)s!$D7?!!3-"rW!K/rW!'#s8E!/s82j!rr3'##QOQ"!!iN'"TSf-
p](QurriB)s6p!nrr3.P"97ij&,uS4J-#].!"])/"b6XRhuF;errp1=s1eUFrr3/;!<9h7&,uS4^]=Cb
!$D4?"i(-<J,g\jrrp1<s*t(krr3/;!.TM!+9)9DhuJ7W!$D4?"lKB1!!",?rrh6[IfKHK+9)9DhuJ6,
!$D4?!oO'.q#CDEq#CDEq#CDEq#CDEq#CNs!!",<rrN0#+8c'>!!",<rrN0#+8c'>!!",<rrR]N+8c'>
J,g\grrR]N+8c'>J,g,WrrTt9&,ZA.^]4oBrrTt9&,ZA.huF;drrh9[huF#\rrg,en,N^lrrg,en,N^l
rrdk%p](EprrdlPqu?itrr`?%qu?crrr`B&rVurtrt#)0s8N'!J,fQH"98CO!'_t5s7c]rs1eUVs8V!^
s8V!W#QOgS&-)\!!!3-!!$D7@qu?^]huH"As8MorrVlkJrVup!rVllUrVup'rVllqrVup?r;QhK!!)or
!r)a+rr7K~>

%%EndBinary
grestore
np
f
15.0089 -35.3325 mo
24.9689 -35.3325 li
24.9689 -43.1324 li
15.0089 -43.1324 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[9.96 0 0 7.8 -159.054 385.048 ]ct
<<
/T 1
/W 83 
/H 65 
/M[83 0 0 -65 0 65 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
#QOQ!J,f9D5Q:]^!!IfOJ,f]Ns8E!!J,]EIrr;rt!IsnD!!5Cbs8E!!J)L;+![%IBrW!1Q^^&ct&-)\/
!!duRJ+s!Ks8W&u"b$LPqu?iurs&N(HjB]L!!3*!#Clf!&-)P-!WN*(^]8<qs8Duurr3,:!,t1&!r`0"
rr35=!+:<VrVurtrrTt95lUf`!<3!"^]6\"rs&N(J,fPa!!3*!#64aRs8Tk7"9/<*!!%NKs1eU:rr33'
!.Y%K^]4W=rs&N(J,fPa!!iN'#64aRs8Tk7&,uS6!!%NKs1eUFrr33'!.Y%K^]4oErr`<%J,fNM^]5JU
rs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7
+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K
^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aR
s8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7+9)9D!!%NKs1eX8+9)9F
!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JU
rs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?!!!'#J,fHI
!=/Q$!!",>!!*?&r;Zg>r;Zj'r;?Tq+8l0?#Q4N#!$D.>!=/Q$!!",>!!*?&r;Zg>r;Zj'r;?Tq++O~>

%%EndBinary
grestore
np
f
25.9289 -35.2125 mo
33.3689 -35.2125 li
33.3689 -43.2524 li
25.9289 -43.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.44 0 0 8.04 -148.134 384.928 ]ct
<<
/T 1
/W 62 
/H 67 
/M[62 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
rr3&h!"]#-rVuqJrr2unrVup/rr2u6rVup#rr;lr!rr<"quBNBs7cQos53lAs6p!ns82j=s53l!s6p"!
s*t)6s6p"!rr<%Ks53k^rVurus53k^rW!!!s53k^qu?cts53k^p](Ers53k^p](Ers53l5#Oh]us8V!W
#N,Res8V!W#N,Res8VQg&)[Eus8VQg&&8/Us8Vio+2@jes8W&uIt.M0rr3+Ps*t([r;QhK!$D.=!e:7m
r;QhK!$D.=!WW3Br;Qfu!$D.=!WW3Br;Qfu!$D.=!WW3Brr3-$rr<$@r;Qfu!$D.=!WW3Br;Qfu!$D.=
!WW3Br;Qfu!$D.=!WW3Br;Qfu!$D.=!WW3Br;QhK!$D.=!e:7]r;QhK!"]#-!e:7]r;Qi6!"]#-!l+dH
r;Qo8!!iQ(rr3&X!!iK&!sd`a#QF`+rWDWi"9/<'qucEg"9/<'quc]o!WN*%p]p]s!<3!$p]p]s!<3!S
n.5Ku!.Y%Ki",hf!'gM`i#huL!$D7@J3X(L!!iQ(!'gMA!!3,t!.Y%D!!#7A!WW2tr;Zg"rr;os!!iN'
!Pe[:!!",?rrDQf!!%NJrr`6#!!E0!"RlCUs8RT~>

%%EndBinary
grestore
np
f
34.6889 -35.2125 mo
42.4889 -35.2125 li
42.4889 -43.2524 li
34.6889 -43.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.8 0 0 8.04 -139.374 384.928 ]ct
<<
/T 1
/W 65 
/H 67 
/M[65 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
rr3&h!'gD]"9&9#"8r0!nGWCfJ,TBI_#=<6+8u6<!!!9'rrr<#!W2p"rr3/s!"]*[!WN*&huFl!huNcV
0#.I:s6p#<s8RTLs8Vio5QC``!<<)s!$D7?!!3-"rW!K/rW!'#s8E!/s82j!rr3'##QOQ"!!iN'"TSf-
p](QurriB)s6p!nrr3.P"97ij&,uS4J-#].!"])/"b6XRhuF;errp1=s1eUFrr3/;!<9h7&,uS4^]=Cb
!$D4?"i(-<J,g\jrrp1<s*t(krr3/;!.TM!+9)9DhuJ7W!$D4?"lKB1!!",?rrh6[IfKHK+9)9DhuJ6,
!$D4?!oO'.q#CDEq#CDEq#CDEq#CDEq#CNs!!",<rrN0#+8c'>!!",<rrN0#+8c'>!!",<rrR]N+8c'>
J,g\grrR]N+8c'>J,g,WrrTt9&,ZA.^]4oBrrTt9&,ZA.huF;drrh9[huF#\rrg,en,N^lrrg,en,N^l
rrdk%p](EprrdlPqu?itrr`?%qu?crrr`B&rVurtrt#)0s8N'!J,fQH"98CO!'_t5s7c]rs1eUVs8V!^
s8V!W#QOgS&-)\!!!3-!!$D7@qu?^]huH"As8MorrVlkJrVup!rVllUrVup'rVllqrVup?r;QhK!!)or
!r)a+rr7K~>

%%EndBinary
grestore
np
f
49.6888 -35.3325 mo
63.1288 -35.3325 li
63.1288 -47.3325 li
49.6888 -47.3325 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[13.44 0 0 12 -124.374 385.049 ]ct
<<
/T 1
/W 112 
/H 100 
/M[112 0 0 -100 0 100 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
qu6]d&,#r'i!8rT!T44UrrKn;p&>'."82ZpJ-#?C!It4DrrIWNp&G$lqZ$KnrrDcm"9&9#J+rsFrVuqJ
p\t?p!!%NCrr`0!!'g5X"8i-!5PP0[p](:9p\t?j!!",8rr`#r!$D(;rr3)i!!!Q(rr_`j!"\i("5j.Z
#P\6#huE`^p\t?2!!!,qrr^%:!!Duq"2Fm:"8DftJ,fQMp\t>G!!!&qrrrH&!'gMap\t<q5QCfYrrW8Z
!!)fo"o\M[!!%NErrrB&huEb,q>UWr!Up'h5Pb<_quQ9e!'g;Z"oJJt!!#7Zrrr0"p](:9q>UWn#P\9!
+8Pp?n-Ajk!"\o*"n2cp!!!Q*rrqm&rVup/q>UWV&,lP/#PnB'i#hpu!!i?""i)5[!!!,srrp1[rr<$$
q>UW65Q?66"8VrsJ-8+:J,fWGrrmq&s*t(Mq>UTuJ,d:a!;ZWu!.Y$a!!)lq#Q=`'s53kWJ,B6NrW)uu
huEb,qu6p#!WW2h!!%NGrs/H&s8VQg!'gA\#Q+](s6p!g5PtH^p]LO!s7cQo+8c'Cp]LQrp](:9qu6or
#QOi%!!",<rs/#us8Vus!"\u,#Oi9(s82is&,ZA3i",kfrVup'qu6oZ&-)\/!!!9$rrM%"rr3$"!!iE$
!PffVrrN0#"8i*#^d%l!"9/?$"8i*!J3X&5!e:7Oqu6\I5Q:ZaJ,fWIrr@TH!!!&ss7lZls7lZmrrE&o
!!%NIrrE&o!!%NIrrDum!!#7^rrDup!<)ru5Q1T_qucot"8Dir5Q1T_p]LKp"8Dir+8u3?p]pct"8Dir
+8u3?n-Apl"8i-!&,lM/n-Apl"8i-!&,lM/n.5Kt"9&9#&,lM/i",ed"9&9##Q=Z'i#hpt"9&9##Q=Z'
^`WLS!WW3&rVlo6+8l-?!!!-"rrKo"r;QhK!!E3"!J!E4rrR]N!WE$!J:ILs!e:7OrVlluJ,K<J^]4B5
rrE+Lr;Qi6!!)ut!!)or!oO%Yrr3#u!;ld$huEb,s8W'!qu6ZS"onXQs8Vutqu6rk!!#7`s6p"Qr;Qoh
!!#7`r;Zp1s8W)m!!<c3s8M`m!tYG3rq?Bp&-)\/pAb:+s8W)m!!<c3s8M`m!tYG3rr)os!.Y~>

%%EndBinary
grestore
np
f
64.5687 -31.9725 mo
74.2887 -31.9725 li
74.2887 -43.1324 li
64.5687 -43.1324 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[9.72 0 0 11.16 -109.495 381.689 ]ct
<<
/T 1
/W 81 
/H 93 
/M[81 0 0 -93 0 93 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
#64Gu5Q?69rVuis"@)Y]!$D4?rW!'c^]4?>rr;rt!'gD^rr;rt!'L2[!^H_brVupPr;Zm@s8W&u#9X"r
!!!9(s8;p##QN]^"9/?"!!FDDp](?ors+&S!.Y%H!!*#u&&8/Gs8W&u!.Y%K^]4K:rs8W)!'gM`^]4W=
rs+&S+92AV!"])/#Cldbs8Tk7+9)9F^]4oFs1eUVrr35=!!iQ(^]5JUrs.H^#QOh>!$D4?#N,Ras8Tk7
+9)9Fn,NRjs1eUVrr35m!!3-"^]5JUrs/#n!WW28!$D4?#P\9"s8Tk7+9)9Cp](<orrTt9+9)9Fp](<o
s1eUVrr35u!!*'!^]5JUrs/<!!<<)7!$D4?#Q+Q%J,d:a+9)9Fqu?_Hs1eUVrr36$!!%NK^]5JUrs/H%
!.Y$a!$D4?#Q+Q%J,d:a+9)9Fqu?_Hs1eUVrr36$!!%NK^]5JUrs/H%!.Y$a!$D4?#Q+Q%J,d:a+9)9F
qu?_Hs1eUVrr36$!!%NK^]5JUrs/H%!.Y$a!$D4?#Q+Q%J,d:a+9)9Fqu?_Hs1eUVrr35u!!*'!^]5JU
rs/<!!<<)7!$D4?#P\9!s8Tk7+9)9Fp](<os1eUVrr35u!!3-"^]5JUrrqll!WW28!<=5@rs/#n!WW28
!$D4?#Oh]qs8Tk7+9)9FhuElZs1eUVrr35]!!iQ(^]5JUrs-=>#QOh>!$D4?#J^<Ms8Tk7&,uS6J,g\k
s1eU>rr34R!'gM`^]4W=rtbY85QCc!!!E9$rVuqJs8Tk7!WW2t!!*#u#/C3=J,f9D!!E6##J^<>5QC3Q
#QF`.^]4?Fs1eUFrr35=!"]21!!#7_rrTt9)#XI5rrTt9*rZ->"9&6(^]5I,!!!Q.rs$7=+5d,!J,TBN
^]5JU!"]#-!l+dXq>UN3!$D%:!l+dXq>UK2!!",:rrTt9+8Pp<^]5JPrrTt9+8Pp<^]5JPrrTt9+8Pp<
^]5JPrrTt9+8Pp<^]5JPrrTt9+8Pp<^]5JPrrTt9+8l0<rrTt9+8Pp<^]5JPrrTt9+8Pp<^]5JPrrTt9
+8Z$9!!!9$s8;ot#Q+Q"!!!9$s8;ot#Q+Q"!!!9$s8;ot#Q+Q"!!!9$s*t~>

%%EndBinary
grestore
np
f
75.6087 -31.9725 mo
85.3287 -31.9725 li
85.3287 -43.1324 li
75.6087 -43.1324 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[9.72 0 0 11.16 -98.4546 381.689 ]ct
<<
/T 1
/W 81 
/H 93 
/M[81 0 0 -93 0 93 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
#64Gu5Q?69rVuis"@)Y]!$D4?rW!'c^]4?>rr;rt!'gD^rr;rt!'L2[!^H_brVupPr;Zm@s8W&u#9X"r
!!!9(s8;p##QN]^"9/?"!!FDDp](?ors+&S!.Y%H!!*#u&&8/Gs8W&u!.Y%K^]4K:rs8W)!'gM`^]4W=
rs+&S+92AV!"])/#Cldbs8Tk7+9)9F^]4oFs1eUVrr35=!!iQ(^]5JUrs.H^#QOh>!$D4?#N,Ras8Tk7
+9)9Fn,NRjs1eUVrr35m!!3-"^]5JUrs/#n!WW28!$D4?#P\9"s8Tk7+9)9Cp](<orrTt9+9)9Fp](<o
s1eUVrr35u!!*'!^]5JUrs/<!!<<)7!$D4?#Q+Q%J,d:a+9)9Fqu?_Hs1eUVrr36$!!%NK^]5JUrs/H%
!.Y$a!$D4?#Q+Q%J,d:a+9)9Fqu?_Hs1eUVrr36$!!%NK^]5JUrs/H%!.Y$a!$D4?#Q+Q%J,d:a+9)9F
qu?_Hs1eUVrr36$!!%NK^]5JUrs/H%!.Y$a!$D4?#Q+Q%J,d:a+9)9Fqu?_Hs1eUVrr35u!!*'!^]5JU
rs/<!!<<)7!$D4?#P\9!s8Tk7+9)9Fp](<os1eUVrr35u!!3-"^]5JUrrqll!WW28!<=5@rs/#n!WW28
!$D4?#Oh]qs8Tk7+9)9FhuElZs1eUVrr35]!!iQ(^]5JUrs-=>#QOh>!$D4?#J^<Ms8Tk7&,uS6J,g\k
s1eU>rr34R!'gM`^]4W=rtbY85QCc!!!E9$rVuqJs8Tk7!WW2t!!*#u#/C3=J,f9D!!E6##J^<>5QC3Q
#QF`.^]4?Fs1eUFrr35=!"]21!!#7_rrTt9)#XI5rrTt9*rZ->"9&6(^]5I,!!!Q.rs$7=+5d,!J,TBN
^]5JU!"]#-!l+dXq>UN3!$D%:!l+dXq>UK2!!",:rrTt9+8Pp<^]5JPrrTt9+8Pp<^]5JPrrTt9+8Pp<
^]5JPrrTt9+8Pp<^]5JPrrTt9+8Pp<^]5JPrrTt9+8l0<rrTt9+8Pp<^]5JPrrTt9+8Pp<^]5JPrrTt9
+8Z$9!!!9$s8;ot#Q+Q"!!!9$s8;ot#Q+Q"!!!9$s8;ot#Q+Q"!!!9$s*t~>

%%EndBinary
grestore
np
f
86.6487 -35.3325 mo
93.6087 -35.3325 li
93.6087 -43.1324 li
86.6487 -43.1324 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.96 0 0 7.8 -87.4146 385.048 ]ct
<<
/T 1
/W 58 
/H 65 
/M[58 0 0 -65 0 65 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
#QOQ!J+s'Es8E!$J)C;ks8E!$It.M0s8E!$IfKHRs8E!$HiO-Is8E!$GQZk(s8E!$GRo<)J,TF8E'JjQ
J,]KK@"/.V5Q?66@"/.V5QAM!5lUfa5QAM!62pob5QAM!!WN-"5QAM!"9/?$5QAM!"9/?$5QAM!#QFc(
/3j0M!!iOS!.Y$a!"]*[!.Y$a!"]+F!<<)7!"],!"98D:!"],-&-)[F!$D.=!l+dXr;Qi6!$D.=!l+dX
r;Qi6!$D.=!l+e#r;Qi6!'gD]!l+e#r;Qi6!'gD]!l+e#r;Qo8!'gM`rr3&8!'gD]!l+e#r;Qi6!'gD]
!l+e#r;Qi6!'gD]!l+e#r;Qi6!'gD]!l+e#r;Qi6!'gD]!l+e#r;Qi6!'gD]!l+e#r;Qi6!'gD]!l+e#
r;Qi6!'gD]"2Fn$s8Ds!^]6UsrrTt95Q(N_^]6UsrrTt95Q(N_^]6UsrrTt95Q(N_^]6UsrrTt95Q(N_
^]6UsrrTt95Q1W\!!!-#s8;ot"9/?!!!!-#s8;ot"9/?!!!!-#s8;ot"9/?!!!!-#s*t~>

%%EndBinary
grestore
np
f
94.8087 -35.2125 mo
103.329 -35.2125 li
103.329 -43.2524 li
94.8087 -43.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 8.04 -79.2546 384.928 ]ct
<<
/T 1
/W 71 
/H 67 
/M[71 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
rr3&p!'gA\!WW3$r;QclrVup_rVll5rVup'rVufr!!3*!"o\K&rr<&us!@F?&-(Pf5QCcQ!'gMY!$D7@
huJ9,qu@9-s1eX7s8E!'s8RTMrr3-%"98B$"9/<(J-#]L!!E6#"b6UQqu@!$rr^%:J,B<I#QF`,^]8lZ
!"])/"lKAFn,O!urrq<\+7K7@rr3/[!$C,!&,uS4huF;G!"])/"lK@k^]5JUrrqll#J^<]rr3/k!!g:>
+9)9Dn,N^/!$D4?"n2KsJ,g\jrrqll"+U@nrr3/k!!@`O+9)9Dn,NQ@!$D4?"RlBn!!!!@rr3/k!!*'"
+9)9Dn,NIh!$D4?"n2Km!!",?rrqll!<<*Arr3/k!!*'"+9)9Dn,NIh!$D4?"n2Km!!",?rrqll!<<*A
rr3/k!!*'"+9)9Dn,NIh!$D4?"n2Km!!",?rrqll!<<*Arr3/k!!.TM+9)9Dn,NQ@!$D4?"n2KoJ,g\j
rrqll"+U@nrr3/k!!C":+9)9Dn,N^/!"])/"lK@c^]4oErrq<\#N,Rmrr3/[!"[uf&,uS4huF;W!"])/
"lKA&n,N^mrrp1<+8>g@rr3/;!'gA]"9/<(J,k)s!!E6#"b6T&rVuuurrrH's8N'!s!n'J!!3-"J,k*!
qu?j!s1eV!s7cR!s8V!W&-(Pf&-)\)!!3*"!'gM`r;6NpJ,]KH!!!&urrBk6!!!9&rrDQf!!",>rrE&t
!;lctn,OR0s*t~>

%%EndBinary
grestore
np
f
103.809 -35.3325 mo
113.409 -35.3325 li
113.409 -43.0125 li
103.809 -43.0125 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[9.6 0 0 7.68 -70.2545 385.048 ]ct
<<
/T 1
/W 80 
/H 64 
/M[80 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
!.b%K#!`-<!!!7SrW!-es*t(L#CudR#!`-<!!!7SrW!-es*t(L#CudR#!`-<!!!7SrW!-es*t(L#CudR
(I.qM!!!9(huF#^s7cR9s8VQg"98E!!<3!&p](?ps82osrs&B$!<<)o"9/<)rVuqJs6p9lrr`<%J,eF,
&,lM3!!#7`^`WOT"b6Rps*u3irrp1<&,uVorVm&Z!!iN(J,TBMn,N^m!;uj"n,NRg!W;s#p](?i"8r0%
qu?`d#Q4T)rVuq+&,ZD+!!!Q,rr[cO!$D+<"+U@O5PtH\^]FK9J,B6IhuEcRrrVZi!W)ftp](?krrVrq
!W)ftqu?`nrr`6#!.XkF!WW3bqYpVI!$D(;!WW3Bqu6ct!!!Q,rr`0!!!iE$"8Dir"9&6's8VQg!!2us
"5j:^!;lcui!]Scqu6f7*WQ1ir;QnM56([Jr;Qm"It.M@rVm'#!<9h7&,lM3quHcT!"]&."o&,uhuF#\
rrqlos6p!jrVm&j#QOQ!!WE$%i",kc!!)ut"i)5[rVuouJ,]HPJ3X)6!!%NJrtGH_s8N'!5QCc_!.Y%K
J,g\ks82lrrs$7=&-)\)!WN*'huF#^s53nVrr_`j#QOc'!Y>>1q>^R-s8Mip!Y>>1q>^R-s8Mip!Y>>1
q>^R-s8Mip!>#21rquhI~>

%%EndBinary
grestore
np
f
114.609 -35.3325 mo
118.809 -35.3325 li
118.809 -47.4525 li
114.609 -47.4525 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[4.2 0 0 12.12 -59.4545 385.048 ]ct
<<
/T 1
/W 35 
/H 101 
/M[35 0 0 -101 0 101 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
!rr$+rr3#W"9/<$J,oTK<WE,Ls8Duu5QC]_!'gM]!!",@qu?^=s7cQo&-)D)!"],)!!!Q0p](:)s7cQo
&-)D)!"],)!!!Q0qu?^=s82is+92<?!'gM_!!#7`rr<%Ks8RTLrr3#W"9/<$p^curbPt-.!'gL6!!#7`
J,fR6s*t(L5Q?66!'gL6!!#7`J,fR6s*t(L5QC``!'gM`J,hh6s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!
IfKG`!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!
!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`
=MOo$s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!
s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCZ^!$D.>!$D.>!$D.>!$D.>!$D.>!$D.>!$?^~>

%%EndBinary
grestore
np
f
120.009 -35.3325 mo
135.489 -35.3325 li
135.489 -43.1324 li
120.009 -43.1324 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[15.48 0 0 7.8 -54.0545 385.048 ]ct
<<
/T 1
/W 129 
/H 65 
/M[129 0 0 -65 0 65 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
#QOQ!J,f9D5Q:Z`huN`UrW!:Ts*t(Os8W&u!"])/rVutKrr)m$s8Vio!!E6#rVutKq#16p5QB[@!<3#t
!!.T-rW!!As+((K!e:7MrW!CW^^&ct&,uVOJ,hh6s8E!-IfOun!!iE&s53l!s8W&u"F^COqu?p'p]pig
!"])/%0-BU#QO]%!Uq32n,N^mrsaJYGRsiP!!2"Bs6p!nrr3GC!,s%[rVur6J,f9D"9/<0^]8=<s8Duu
_#OH0!!E6#%DVsOJ,fKJ!.k1Mp](EqrrTt95lUcg!!!-$s82j!rr3&8!($Va#QOi0s8Vus!WN<&s1eU8
rr33'!!iQ(qu?csrrTt9"9/<*!!!Q0s82itrr3&8!!E6##64`7s8Vus!WN*#^]4W=rs&N(+92B=!!3*!
!l+d@rr33'!$D7@qu?csrrTt9&,uS6!!#7`s82itrr3&8!"])/#64`gs8Vus!WN*#^]4oErs&N(5QCc]
!!3*!!l+dXrr33'!.Y%Kqu?csrrTt9+9)9F!!%NKs82itrr3&8!$D4?#64aRs8Vus!WN*#^]5JUrs&N(
J,fQH!!3*!!l+dXrr33'!.Y%Kqu?csrrTt9+9)9F!!%NKs82itrr3&8!$D4?#64aRs8Vus!WN*#^]5JU
rs&N(J,fQH!!3*!!l+dXrr33'!.Y%Kqu?csrrTt9+9)9F!!%NKs82itrr3&8!$D4?#64aRs8Vus!WN*#
^]5JUrs&N(J,fQH!!3*!!l+dXrr33'!.Y%Kqu?csrrTt9+9)9F!!%NKs82itrr3,:!$D7@#lal)J,fQH
!!3*!!l+dXrr33'!.Y%Kqu?csrrTt9+9)9F!!%NKs82itrr3&8!$D4?#64aRs8Vus!WN*#^]5JUrs&N(
J,fQH!!3*!!l+dXrr33'!.Y%Kqu?csrrTt9+9)9F!!%NKs82itrr3&8!$D4?"onXQs8Vus!!3*!!l+dX
rr33'!.Y%Kqu?csrrTt9+9)9F!!%NKs82itrr3&8!$D4?#64aRs8Vus!WN*#^]5JUrs&N(J,fQH!!3*!
!l+dXrr33'!.Y%Kqu?csrrTt9+9)9F!!%NKs82itrr3&8!$D4?#64aRs8Vus!WN*$^]5JV$31#*!.Y%K
qu?csrrTt9+9)9F!!%NKs82itrr3&8!$D4?#64aRs8Vus!WN*#^]5JUrs&N(J,fQH!!3*!!l+dXrr33'
!.Y%Kqu?csrrTt9+9)9H!!%NKs82its8W#t!=/Q$!!+22r;ZhIr;Zj'r;?Ts+7K:0!!%NI!!*?&r;Zj?
nGN=eJ,K?J#Q4N#!?^h0!!%NI!!*?&r;Zj?nGN=eJ,K?J#Q4N#!?^h0!!%NI!!*?&r;Zj?nGN=eIt.~>

%%EndBinary
grestore
np
f
136.449 -35.2125 mo
145.329 -35.2125 li
145.329 -43.2524 li
136.449 -43.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.88 0 0 8.04 -37.6145 384.928 ]ct
<<
/T 1
/W 74 
/H 67 
/M[74 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
"TSN"!!2rr"+U@O&,cG-r;HZr!W;rtnGN=eJ,TBI_#465+8u3CJ,oW-!!iK&"TTYEp](Eqrs&H&&-)V/
!WN*Oqu?j!rr<%Ks8Vus"98CO!'gM`p](?ps1eV!s8Vio!WW28!$D7@p](?ps53lR&-)\)!!3-"huF;f
s7cQps8VQg#QOi!!!3-"n,N^ns7cQps8VQg#QOi!!!3-"n,NRjs82j!s8Vio"98E!!!E9$p](Ers8E!'
s8Vio"9/<)J04gkp](Eqrs%D2s8Vio"8`$!p](EmrrVrq"8i*#s7cQrqYpWl!!E)t!r)`tqu6cf!!!-!
rrDQf!!!-"rrE&s!!!-"rrD!U!!!-"s82is"9/<)qu?^%p](Eqrs%rm!.XbD"9/<)^]4W>p](Eqrt>A4
+92*9"98E#!!%NKp](Ers87<G!<<)o!!E9$p](Ers7cQrs8VQg#QOi!!!E9$huF#^s7cQrs8Tk7&-)\)
!!E9$^]5JVs7cQrs8RTL+92B9!!E9$J,hh6s7cQrs8N'!5QCcY!!E9$!!#7`s7cQrs8N'!J,fQD!!E9$
!!%NKs7cQrs8N'!J,fQ<!!?=&rr<%Ks8VQg"98B$!.Y%Kn,NRjrr<$`s8V!W"98B$!'gM`huElZs*t)6
s8Tk7"98CO!$D7@J,f]Os1eUFs8N-#!WW28!"],/!WW3bs53k^s83*#!![rB!!3,h&,lP55PtK]5CajT
!!,=`r;[%OJ,fR6s+((K*WNnT!'gMA!!!-$n,NGQs82is&-)V/!.Y%KhuJ9)s*t~>

%%EndBinary
grestore
np
f
145.809 -35.2125 mo
151.929 -35.2125 li
151.929 -46.2524 li
145.809 -46.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.12 0 0 11.04 -28.2545 384.928 ]ct
<<
/T 1
/W 51 
/H 92 
/M[51 0 0 -92 0 92 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
"98Dr&,cG.p^d<&!Vd3'rrMm*r;Qfm&,cG.p^d<&!UpWtrrMU"r;Qfe&,cG.n.5Hs!UpWtrrM$gr;QfU
&,cG.i",bc!Pf6DrrKnGr;QeJ&,cG.J.MVY!ri62r;Qct&,lM0rW!K-rrW)u&,lM0qu@9+rrVrq&,lM0
n,O!trrTt9&,lM0J,g,ZrrE&r!!3,hqu?`sqZ$WrqZ$WrqZ$WrqZ$WrqZ$d!s53kfrVlrW!"]&.!8mkX
&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0
huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrM$X!"]&.!oO%hrVlrW!"]&.!oO%h
rVlrW!"]&.!oO%hrVlrW!"]&.!oO%hrVlrW!"]&.!oO%hrVlrW!"]&.!oO%hrVnG,!"],!+917!&-),@
s53kfs6q-1huF;fn/q\g!"],!+917!&-),@s53kf>lX:8s53kfs6q-1huF;fn/q\g!"],!+917!&-),@
s53kfs6q-1huF;fi#i!g!!iP^5QC3Q#QN^Hs6p!ns1gl!p](Er^jlCZ!!3+MJ,fEH!WN0"s8DuuHia6H
rVup!rr3(N!!!-#rr_0Z!"])/"7Q9j+9)9ArVuouJ,TBLhuWlXJ,~>

%%EndBinary
grestore
np
f
153.849 -35.3325 mo
158.049 -35.3325 li
158.049 -47.4525 li
153.849 -47.4525 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[4.2 0 0 12.12 -20.2145 385.048 ]ct
<<
/T 1
/W 35 
/H 101 
/M[35 0 0 -101 0 101 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
!rr$+rr3#W"9/<$J,oTK<WE,Ls8Duu5QC]_!'gM]!!",@qu?^=s7cQo&-)D)!"],)!!!Q0p](:)s7cQo
&-)D)!"],)!!!Q0qu?^=s82is+92<?!'gM_!!#7`rr<%Ks8RTLrr3#W"9/<$p^curbPt-.!'gL6!!#7`
J,fR6s*t(L5Q?66!'gL6!!#7`J,fR6s*t(L5QC``!'gM`J,hh6s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!
IfKG`!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!
!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`
=MOo$s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCc!!'gM`^]6V!s1eV!
s8Tk75QCc!!'gM`^]6V!s1eV!s8Tk75QCZ^!$D.>!$D.>!$D.>!$D.>!$D.>!$D.>!$?^~>

%%EndBinary
grestore
np
f
159.129 -35.2125 mo
167.649 -35.2125 li
167.649 -43.2524 li
159.129 -43.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 8.04 -14.9345 384.928 ]ct
<<
/T 1
/W 71 
/H 67 
/M[71 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
rr3&p!'gA\!WW3$r;QclrVup_rVll5rVup'rVufr!!3*!"o\K&rr<&us!@F?&-(Pf5QCcQ!'gMY!$D7@
huJ9,qu@9-s1eX7s8E!'s8RTMrr3-%"98B$"9/<(J-#]L!!E6#"b6UQqu@!$rr^%:J,B<I#QF`,^]8lZ
!"])/"lKAFn,O!urrq<\+7K7@rr3/[!$C,!&,uS4huF;G!"])/"lK@k^]5JUrrqll#J^<]rr3/k!!g:>
+9)9Dn,N^/!$D4?"n2KsJ,g\jrrqll"+U@nrr3/k!!@`O+9)9Dn,NQ@!$D4?"RlBn!!!!@rr3/k!!*'"
+9)9Dn,NIh!$D4?"n2Km!!",?rrqll!<<*Arr3/k!!*'"+9)9Dn,NIh!$D4?"n2Km!!",?rrqll!<<*A
rr3/k!!*'"+9)9Dn,NIh!$D4?"n2Km!!",?rrqll!<<*Arr3/k!!.TM+9)9Dn,NQ@!$D4?"n2KoJ,g\j
rrqll"+U@nrr3/k!!C":+9)9Dn,N^/!"])/"lK@c^]4oErrq<\#N,Rmrr3/[!"[uf&,uS4huF;W!"])/
"lKA&n,N^mrrp1<+8>g@rr3/;!'gA]"9/<(J,k)s!!E6#"b6T&rVuuurrrH's8N'!s!n'J!!3-"J,k*!
qu?j!s1eV!s7cR!s8V!W&-(Pf&-)\)!!3*"!'gM`r;6NpJ,]KH!!!&urrBk6!!!9&rrDQf!!",>rrE&t
!;lctn,OR0s*t~>

%%EndBinary
grestore
np
f
169.089 -35.3325 mo
179.049 -35.3325 li
179.049 -43.1324 li
169.089 -43.1324 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[9.96 0 0 7.8 -4.97446 385.048 ]ct
<<
/T 1
/W 83 
/H 65 
/M[83 0 0 -65 0 65 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
#QOQ!J,f9D5Q:]^!!IfOJ,f]Ns8E!!J,]EIrr;rt!IsnD!!5Cbs8E!!J)L;+![%IBrW!1Q^^&ct&-)\/
!!duRJ+s!Ks8W&u"b$LPqu?iurs&N(HjB]L!!3*!#Clf!&-)P-!WN*(^]8<qs8Duurr3,:!,t1&!r`0"
rr35=!+:<VrVurtrrTt95lUf`!<3!"^]6\"rs&N(J,fPa!!3*!#64aRs8Tk7"9/<*!!%NKs1eU:rr33'
!.Y%K^]4W=rs&N(J,fPa!!iN'#64aRs8Tk7&,uS6!!%NKs1eUFrr33'!.Y%K^]4oErr`<%J,fNM^]5JU
rs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7
+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K
^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aR
s8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7+9)9D!!%NKs1eX8+9)9F
!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JU
rs&N(J,fPa!$D4?#64aRs8Tk7+9)9F!!%NKs1eUVrr33'!.Y%K^]5JUrs&N(J,fPa!$D4?!!!'#J,fHI
!=/Q$!!",>!!*?&r;Zg>r;Zj'r;?Tq+8l0?#Q4N#!$D.>!=/Q$!!",>!!*?&r;Zg>r;Zj'r;?Tq++O~>

%%EndBinary
grestore
np
f
180.009 -35.2125 mo
186.489 -35.2125 li
186.489 -43.2524 li
180.009 -43.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.48 0 0 8.04 5.94553 384.928 ]ct
<<
/T 1
/W 54 
/H 67 
/M[54 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
&-)[F!'g7.s82is"5lEDi;N]Y^d%jLr;\-.rr<T0!!#7]!<<)W!'g5\s8Vio5O\pXs82j]i",kfrW#0u
+9)9B!'e7@rr3(N5Cbutrr[d9J3X&5"2I-O5Q:Zb^cqf`rr3)956)f)rr_1D!$D4?"5lBD&,uS1i'.2A
#QF`*i'.2Drr3)iIfKKHrrN0#+8u6=!<)rs!!!9'rr@TK!!=>Cs+((K!sAT'_#467s8Tn5!!5Cbi;EWW
&-).t!!3E*q#(0o!WW)q!!3-!qu?eJs+(%J!^H_#r;Zm@s7#se![%IAr;Zp1s8Tn6!!<c3s8Mut!!iN'
"8Dir#Q=Z(^]4K8rrVrq"9&6%rW!%QrVlp!!s/B#!e:@RrVlr7!s&<"!oO.\rVlrW!s&<""5j7]J,]HM
n,iZ?rr3)i!rtRbrr_`q!'gJ_"7QNq+9)9Ci!05mrrrH&i!05mrr3)Y%fck6rr^%I!!E6#"+VHn!WN*9
J3O#6J,fKJIfKHjs7cTo!!!-$J-#ZM+T;?C"9/@GrW!$2rrN&s!"V<o"93lO!<<([s7cR9s8RT~>

%%EndBinary
grestore
np
f
193.569 -35.2125 mo
199.689 -35.2125 li
199.689 -46.2524 li
193.569 -46.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.12 0 0 11.04 19.5055 384.928 ]ct
<<
/T 1
/W 51 
/H 92 
/M[51 0 0 -92 0 92 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
"98Dr&,cG.p^d<&!Vd3'rrMm*r;Qfm&,cG.p^d<&!UpWtrrMU"r;Qfe&,cG.n.5Hs!UpWtrrM$gr;QfU
&,cG.i",bc!Pf6DrrKnGr;QeJ&,cG.J.MVY!ri62r;Qct&,lM0rW!K-rrW)u&,lM0qu@9+rrVrq&,lM0
n,O!trrTt9&,lM0J,g,ZrrE&r!!3,hqu?`sqZ$WrqZ$WrqZ$WrqZ$WrqZ$d!s53kfrVlrW!"]&.!8mkX
&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0
huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrV*Y&,lM0huF;drrM$X!"]&.!oO%hrVlrW!"]&.!oO%h
rVlrW!"]&.!oO%hrVlrW!"]&.!oO%hrVlrW!"]&.!oO%hrVlrW!"]&.!oO%hrVnG,!"],!+917!&-),@
s53kfs6q-1huF;fn/q\g!"],!+917!&-),@s53kf>lX:8s53kfs6q-1huF;fn/q\g!"],!+917!&-),@
s53kfs6q-1huF;fi#i!g!!iP^5QC3Q#QN^Hs6p!ns1gl!p](Er^jlCZ!!3+MJ,fEH!WN0"s8DuuHia6H
rVup!rr3(N!!!-#rr_0Z!"])/"7Q9j+9)9ArVuouJ,TBLhuWlXJ,~>

%%EndBinary
grestore
np
f
201.489 -35.2125 mo
210.009 -35.2125 li
210.009 -43.2524 li
201.489 -43.2524 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 8.04 27.4255 384.928 ]ct
<<
/T 1
/W 71 
/H 67 
/M[71 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
rr3&p!'gA\!WW3$r;QclrVup_rVll5rVup'rVufr!!3*!"o\K&rr<&us!@F?&-(Pf5QCcQ!'gMY!$D7@
huJ9,qu@9-s1eX7s8E!'s8RTMrr3-%"98B$"9/<(J-#]L!!E6#"b6UQqu@!$rr^%:J,B<I#QF`,^]8lZ
!"])/"lKAFn,O!urrq<\+7K7@rr3/[!$C,!&,uS4huF;G!"])/"lK@k^]5JUrrqll#J^<]rr3/k!!g:>
+9)9Dn,N^/!$D4?"n2KsJ,g\jrrqll"+U@nrr3/k!!@`O+9)9Dn,NQ@!$D4?"RlBn!!!!@rr3/k!!*'"
+9)9Dn,NIh!$D4?"n2Km!!",?rrqll!<<*Arr3/k!!*'"+9)9Dn,NIh!$D4?"n2Km!!",?rrqll!<<*A
rr3/k!!*'"+9)9Dn,NIh!$D4?"n2Km!!",?rrqll!<<*Arr3/k!!.TM+9)9Dn,NQ@!$D4?"n2KoJ,g\j
rrqll"+U@nrr3/k!!C":+9)9Dn,N^/!"])/"lK@c^]4oErrq<\#N,Rmrr3/[!"[uf&,uS4huF;W!"])/
"lKA&n,N^mrrp1<+8>g@rr3/;!'gA]"9/<(J,k)s!!E6#"b6T&rVuuurrrH's8N'!s!n'J!!3-"J,k*!
qu?j!s1eV!s7cR!s8V!W&-(Pf&-)\)!!3*"!'gM`r;6NpJ,]KH!!!&urrBk6!!!9&rrDQf!!",>rrE&t
!;lctn,OR0s*t~>

%%EndBinary
grestore
np
f
218.169 -31.0125 mo
222.129 -31.0125 li
222.129 -48.2925 li
218.169 -48.2925 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[3.96 0 0 17.28 44.1055 380.728 ]ct
<<
/T 1
/W 33 
/H 144 
/M[33 0 0 -144 0 144 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
rr3#sJ,]HKpj`;C!UtU<rrD$VrrBn6rr@]Mrr<<'rrN*0rr3#s+9)9@pcncX!Ur>QrrM&-rr2u6rVll6
rVlkKrVlj"rr3#u"9/<$rWiH&!W3K-rrN$.rr3#o+9)9@n/qZ0!Ur>QrrM%Brr3#WJ,]HJ^]8l`rrKob
rr2tKrVlkJrVliurVliurr3#u!WN*"rWE0"!WE3#rrN$"rr3#s#QF`(r!36$!Vcp!rrMm"rr3#o&,uS0
n.5Nu!UpX!rrMU"rr3#W+9)9@i#hsu!T5(!rrM%"rr3#7+9)9@^d%hu!Pgr!rr^&$s8N0#^d%hu!Pgr!
rrIX7rr3"L5Q:Z`J:IRu!J#\!rrIY"rr3"LJ,]HKJ:IRu!J#\!rrE+Lrr3!!J,]HK!.Y"J!<@WKrrE+L
rr3!!J,]HK!.Y"J!<@WKrrE+Lrr3!!J,]HK!.Y"J!<@WKrrE+Lrr3!!J,]HK!.Y"J!!!"Krr3!!J,]HK
!.Y"J!<@WKrrE+Lrr3!!J,]HK!.Y"J!J#\!rrIY"rr3"LJ,]HKJ:IRu!J#\!rrIY"rr3"L5Q:Z`J3X&5
!Pgr!rrKo"rr3#75Q:Z`^d%hu!Pgr!rrKnWrr3#W+9)9@i#hsu!T5(!rrM%"rr3&h&,ub3s6pQurrMU"
rr3#o&,uS0p]pfu!Vcp!rrN$&rr3#s#QF`(qucru!WE3#rrN*$rr3#u!WE#u!WE#u!WE#uJGoKJJGoKK
^jl@`!Pj3arrM&-rr3#W5Q:Z`n3?pP!Uq31rrMm:rr3#s&,uS0r"&f,"9&Q*rrW6""9&6""9&6"Jc5TK
_>XB6_#=96i.(b+!Ur>QrrMmZrr3#s+9)9@rX\u-!!iK&!/(7M!5\X6!9*nV!UtU<rrMnErr3#sIt.~>

%%EndBinary
grestore
np
f
224.049 -34.9725 mo
236.289 -34.9725 li
236.289 -47.0925 li
224.049 -47.0925 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[12.24 0 0 12.12 49.9855 384.689 ]ct
<<
/T 1
/W 102 
/H 101 
/M[102 0 0 -101 0 101 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
!.b%K!!E3"rVus$JGoNK!WE&t!!!-"!!!-#rrE&t!!!-"!!!-#rrE&t!!*1PrVup#rVuis":+tB!!E0!
#Oh]ns8VQg+8l-Dqu@!%s6p"Qr;R$$!$D7@p],g@rrrIQs8VioJ,B6G!<3!"p],g@rr<*!rrVrqJ,B6G
"9/<%p],gArrN*(rr3&p!'gD]!WEW/rrVrq5Q(N^r#bq<!r)a[r;Qfq+9)9AquAtZrrMmZrr3&t!'gD]
!Ur>QrrW)u5Q(N^n:1H;!rN$_rr3'"s5<kU!rN$_r;Qc4rVlrs!$D.=!5\X6!rN$?r;QbLrVlrs!$D.=
!/(7M!r`0Ar;Qa%rVlru!$D1>!WE?&rrW0"+8u3?rX\u-!r`0ArVlor+8u3@rW"&=rrMm:rVlru!"]&.
!VenXrrW0"&,lM/n:1E:!r`01rVlofJ,K<I!"]&.!9!bS!<<Z/rrBk3rrE*1rVll6qu6Zs&,lM.KDYZL
!"]&.!!E,u!<<B'rr<<$rrE*)rr3#u&,cG/rr<<'rrN*0qu6\I#QF`(r#bh9!ItFSrrMm:qu6\I#QF`(
pcnZU!ItFSrrMV=qu6\I#QF`(i.(Y(!It:OrrD!RrrIWPrr2u7qYpSH"9/<#_>=04^]XT9!/(:NrVlo6
"9/<#"8`#u^]XT9!!iB#"i(6?s8EQ*rrp1?s8W!-qYp`7!WW2t+8Z!@^]FK8pcnWT"i(0=s7ehTrrq<]
s8VS<qYp`W!WW2XJ,90KhuWlXi;`ZR"Q0=\s2"O2"Q0=\s+1"G"Q0:[s+C.I"Q0:[rs/B""Q0:[rs/B"
"RlEkrX\i)"RlEkr"&W'"RlEkr#bb7"RlEkpcnTS!q63i!Ur>LrrhfkJ+.s`rr_`jJ)L,%"7Q;?i;!<S
p],f[q#:Hk!.TRprr`#rItROr"8DkG#Pe<$p],aJq#:Hk!'Uqgrr`#r4<O@u"8DjY+8Gj<quA]@q#:Ho
!&-Y4rr`0!0Rrlt!rN$@p\t<m!!)cn!rN$!p\t<m!!Duq!rN$#qZ$Qp!r`0)p\t<o!!i8u!r`01p\t<o
!$Ct8!r`0Ap\t<o!'g5X!r`1Lp\t<o!.X_B!!)]l!!)rsqYpNrp&>!op&>!sq#>j~>

%%EndBinary
grestore
np
f
234.249 -32.5724 mo
240.129 -32.5724 li
240.129 -41.0925 li
234.249 -41.0925 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.88 0 0 8.52 60.1854 382.288 ]ct
<<
/T 1
/W 49 
/H 71 
/M[49 0 0 -71 0 71 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
!rr6"r;ZcsrVlru!!)ut!r`0"r;Zcsr;Qfq!W;rurW2rs!W2urrrN#ur;Qfq"8r0"qucls!W3&trrMls
r;Qfm#Q4T&p]p`s!VcotrrMTor;Qfe&,cG.n.5Hs!UpWtrrM$gr;QfU+8l->i#hms!T5'trrKnWr;Qf5
5Q(ON^d%ks&-)[F5QBXDs8RU6s*t.Ms+#V!"5s4ZJ:IJ=i.(cWJ+u6YJ,]LunG`K<rrE)XrW%HJ!<9t9
!.Y"Krt#)/J,TEfrZD+>s8E&s5Q1Z_rW2eDrW3&u!V$-hL]@8QiVicXqu_TMrrW*#&,lM0qu@i;rrVrq
J,TBKp](?nrr`#r!'gJ_"8E!!&,uS2n-@kRrr3)i&,62)rr_a$rW)rt([qt8!.Y%Ki",hfJ,fQ,+9-k@
s8V"!s)!:9s8V"!s+#UgJ&!0+J:I(g^d%jLJ+3KR5Q?7`nGg9gs+#UWs+!?6J:HPXJ:ITLs5F!.J,b'!
_uG7:s+(-err@QKJ:E@S!<<)7Ig>uRs8Tl`&,uY0s56!]rrN0"n,P]Q"98E!!<<(Srr3$%s8RT~>

%%EndBinary
grestore
np
f
242.649 -31.0125 mo
246.609 -31.0125 li
246.609 -48.2925 li
242.649 -48.2925 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[3.96 0 0 17.28 68.5854 380.728 ]ct
<<
/T 1
/W 33 
/H 144 
/M[33 0 0 -144 0 144 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
!2'5i!"]&.!/LOQ!5nd8!5\X6!9!hU!UtU<rrMmZrr3#s+9)9@rX]#.!WE?&rr<0"rr@WKrrBn6rrBk5
rrM&-rr3#W5Q:Z`n3?pP!Vdc9rrMm:rr3#s&,uS0r!36$!WE?'rrN*$rVlj"rVliurVliurVlkJrVlkJ
rVlo6J,]HK^jl@`!Pgr!rrM%Brr3#W5Q:Z`i#hsu!Uq31rrMU2rr3#g&,uS0n.5Nu!Vd3)rrMm"rr3#o
#QF`(p]pfu!W3'!rrN$"rr3#s"9/<$qucru!W2utrrN*"rr3#u!WN*"rW3#u!WE-!rrN*"rr3#u!<3!!
rW)os!!)ut!!)ut!!)ut!!)ut!!)ut!!)ut!<@WKrrE+Lrr3!!J,]HK!.Y"J!<@WKrrE+Lrr3!!J,]HK
!.Y"J!<@WKrrE+Lrr3!!J,]HK!.Y"J!<@WKrrE+Lrr3$"J,]WNrr@QJrrE+Lrr3!!J,]HK!.Y"J!<@WK
rrE+Lrr3!!J,]HJ!<)ot!<)ot!<)ot!<)ot!<)ot!<3!!rW)rt!WE)urrN*"rr3#u!WN*"rW3#u!WE-!
rrN*"rr3#s!WN*"qucru!W3'!rrN$"rr3#s"9/<#p](QurrMm"rr3#o#QF`(p^dB(!UpX!rrMU"rr3#g
+9)9@n/qZ0!T5(!rrM%Brr3#W5Q:Z`^d%hu!Pj3arrKobrr2tKrVlkJrVliurVliurVlj"rr3#u"9/<$
rWiH&!W33%rrN$.rr3#o+9)9@p`KM8"7SPTrrW5Y5Q:Z`i.(b+!5SR5!5\X6!.k+K!!E6#!WE?'rrN*0
rr3#s+9)9@pcncX!UtU<rrD!UrrBn6rrBt8rr@iQrr<T.rrA\is*t~>

%%EndBinary
grestore
np
f
249.009 -32.5724 mo
252.729 -32.5724 li
252.729 -40.7324 li
249.009 -40.7324 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[3.72 0 0 8.16 74.9454 382.288 ]ct
<<
/T 1
/W 31 
/H 68 
/M[31 0 0 -68 0 68 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
-NF,D5QCcQ&-)[f&-)[f&-)[F&-)[F&-)[F&-)[F+92B!5QCcQbPraT5QCc!&-)Y0"98?2!WW'^!WVqE
JH,-=JH+R-JH+U.!.OsarrE):rrE(OrW)tRrW3%SrW3$(quQg.qud!!qud!!p]LQrp]pj!n-B!nn.5R!
n.5R!i",kfi#i"!^`WUV^d%l!^d%l!J3X)6J:IV!!.Vib!<9t:!<9t9!<9t9!WRrS!WRrS!WNE("9/o2
"9'DA"8j8?"8G+[!tk$PrrM'Xs*t.Ms54.^s7d]9J,~>

%%EndBinary
grestore
np
f
259.785 -36.0524 mo
545.985 -36.0524 li
545.985 -35.3325 li
259.785 -35.3325 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[286.2 0 0 -.72 85.7215 385.768 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
%%BeginBinary: 1
sepimg
%%EndBinary
grestore
np
f
39.2988 56.2126 mo
42.1488 65.7126 li
36.4488 65.7126 li
0 0 0 1 cmyk
f
397.709 305.805 mo
388.209 308.655 li
388.209 302.955 li
f
.864 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
39.2988 63.9855 mo
39.2988 305.805 li
389.936 305.805 li
@
%ADOBeginSubsetFont: SBVPMX+Courier-Oblique Initial
ct_T42Dict begin
-0.707 -0.406 0.918 1.086
 256 array 0 1 255 {1 index exch /.notdef put} for  /SBVPMX+Courier-Oblique
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000002906670
676d000000000000034c0000008d676c79660000000000000f4c00000384
6865616400000000000003dc000000366868656100000000000004140000
0024686d747800000000000004380000001c6c6f63610000000000000454
000000106d6178700000000000000464000000206e616d65000000000000
0484000000287072657000000000000004ac00000a9d6764697200000000
00000000000000000000009800ba005a00c800cd009800a6000a021b0248
007b007d00b40098009c00ac00c5020a019600d5013f01b80093018901c1
0164018900cd009800cd00000014032f0010000c01c1040802ec009800ae
00000089008700cd01e304d900db004a008d00db039a0079033f00000079
00ae015a0342001d007104140000007900a400db00d500000439033b0096
010a01bc01d901db018b00a601c7019c00ac035800f200890089039c03b6
005a0089041900f2033303020098009600cd01a800000079000000790419
0098030201a201dd01ee00b60017016601ae010c00a802980079007701fa
007500960089012d00910091013f0060006204a000750081005800580058
00f000f20098008d01cb007d008d007d00c1034c009600ae018901cd011b
019c00cd00b4017100640308018100fc00fe01fa030e031700910091009e
0087008700930098028301460191021d00df00000089008d0000000004f6
04a204a204a204a20000001f016401ee0075008d002104ee04ee04ee050e
0075021b006204a204a2008d008d0614065601c7022d01b801c700930164
0217028d016d00c3000000190164002104ee030a008d0091024e037f008d
03d1021900bc008d00810081017b04a202a40266008d000c00f2008f0198
025a00000096023b0052007b0614040a039c039c039c039c0000008d0098
008d024805cd053d051d008d0196039c018f039c00be01060019039c007b
009e0396068501fa007701aa0079007d008900890071013f006404a004a2
006f006f0071006f007b00000058006a00f00068006f0308005e00cd016d
00c3021702170064030a018100fc01fa0071030e0321007b057100be0073
02d10073007302d1009302830179007f00df008d000000007fff00980098
008200304007060504030201002c2010b002254964b040515820c859212d
2cb002254964b040515820c859212d2c20100720b00050b00d7920b8ffff
5058041b0559b0051cb0032508b0042523e120b00050b00d7920b8ffff50
58041b0559b0051cb0032508e12d2c4b505820b80143454459212d2cb002
254560442d2c4b5358b00225b0022545445921212d2c45442d0000000001
000000010000bb6063f85f0f3cf50111080000000000a380f9f000000000
c9b116dcfa54fcbb075808b7000000060001000000000000000100000608
fe0800000696fa54f9e10758080001b30000000000000000000000000007
04cd006604cd00e004cd010b04cd00f204cd00a404cd00ad04cd00740000
00220058009000d00122016201c200010000000701910009007a00050002
001000400011000007e80aa1000300010000000100120001000000000006
0016000043454e445a5a2b436f75726965722d4f626c6971756541ff0280
0141001300030140000c0003013e00fe0003013d00fe0003013a003e0003
013900bb0003013800fe0003013700bb00030136005d0003013500960003
013400fe0003013300bb0003013200640003013000fe0003012d00fe0003
012c012400fe0005012a00fe00030129006b00030128003500030127006b
00030126000c0003012500fe0003012400fe00030123009600030120011f
00220005012000fe0003011f00220003011e000c0003011d011c00530005
011d00960003011c00530003011b004c0003011a00530003011900fe0003
0118011700fe0005011700fe0003011600c100fe0005011400fe00030113
003500030112004700030111011000fa0005011100fe0003011000fa0003
010f00fe0003010c00fe0003010b00fe0003010a0109001d00050109001d
0003010800f3000a0005010800100003010700d200470005010700440003
010600fe0003010500fe0003010400f3000a0005010400fe0003010300fe
00030102003e00030101002e000301000096000300ff00fe000e000500ff
00fe000300fe00fd0009000500fe000e000300fd0009000300fc002e0003
00fb00fe000300fa00f9007d000500fa00fe000300f9007d000300f80012
000300f700f60094000500f700fe000300f700c0000400f600f500610005
00f60094000300f60080000400f500f4002e000500f50061000300f541ff
0040000400f400f3000a000500f4002e000300f3000a000300f000150003
00ef00fe000300ee00ed000b000500ee00fe000300ed000b000300ec00e6
0017000500ec00fe000300eb00ea000b000500eb00fe000300ea000b0003
00e9001e000300e800a6000300e70039000300e600e50008000500e60017
000300e50008000300e400af000a000500e400fe000300e300fe000300e2
005d000300e100fe000300e000af000300df00fe000300de00fe000300db
00fe000300da0014000300d900d8007d000500d900fe000300d8007d0003
00d70014000300d600fe000300d500b40041000500d500fe000300d400fe
000300d300d20047000500d30096000300d20047000300d100fe000300d0
00fe000300cf001a000300ce0014000300cd001a000300cc00fe000300cb
00ca0047000500cb00fe000300ca0047000300c900c80014000500c900fe
000300c80014000300c700c60014000500c60014000300c5006b000300c4
00bb000300c300c20014000500c30025000300c3ffc0000400c200af000a
000500c20014000300c100fe000300be00bd008c000500be00fe000300be
00c0000400bd00bc0059000500bd008c000300bd0080000400bc00bb0026
000500bc0059000300bc0040000400bb0026000300ba00b40041000500ba
0032000300b9007d000300b800fe000300b700fe000300b6001a000300b5
41ff00b40041000500b500fe000300b5ffd0000400b40041000300b300b2
008c000500b300fe000300b300c0000400b200b10059000500b2008c0003
00b20080000400b100b00026000500b10059000300b10040000400b000af
000a000500b00026000300af000a000301450028000301440028000300ae
00af000300ad00fe000300ac00fe000300ab00fe000300aa0008000300a8
00fe000300a700fe000300a600fe000300a400a300fa000500a300fa0003
00a200fa000300a1004b000300a0009f0053000500a000bb0003009f0053
0003009e00fe0003009d009c007d0005009c007d0003009a009900fe0005
009900fe0003009800fe00030095007d000300940006003a00050094004b
00030093000c0003009200fe000300910090000b00050090000b0003008f
003e0003008e008d00290005008e002e0003008d00290003008c00fe0003
008b00fe0003008a00fe000300890088003e00050089007d00030088003e
0003008700fe00030086005d00030085006b00030084008300fe00050083
00fe0003008200fe00030081003a0003008000220003007f007e00460005
007f00aa0003007e004600030079005d00030078007d0003007700fe0003
00760075003a0005007600fe00030075003a0003007100fe0003006e00fe
0003006d006c000f0005006d00330003006c000f0003006b00fe0003006a
00fe41ff00030069006800100005006900af000300680010000300670037
00030066005a000a00050066004400030065007d00030064005400100005
006400fa000300630062000c0005006300fe00030062000c000300610060
000d00050061002d00030060000d0003005e005d00140005005d00140003
005b005a000a0005005b00fe0003005a000a0003005900fe000300580054
001000050058002900030057001f00090005005700fe00030056007d0003
0055005400100005005500fe0003005400100003005300fe000300520036
000b0005005200fe0003005100290003005000fe0003004e001a0003004d
007d0003004c007d0003004b00380003004a00fe00030049006400030048
00fe0003004700960003004600a60003004500fe00030043001e00030042
0036000b00050042007800030041002900030040003e000a000500400064
0003003f003e000a0005003f00960003003e000a0003003d000a0003003c
00fe0003003b00fe0003003a00fe0003003900fe00030038003700180005
003800fa000300370036000b00050037001800030036000b000300340096
0003003300fe0003003200fe0003003100fe0003003000fa0003002f002c
0003002e00fe0003002d00fe0003002c00fe0003002b00fe0003002a00fa
000300290007000300280006003a00050028007d0003002700bb00030026
00fe0003419600250096000300240018001400050024003e0003002300fe
0003002200fe0003002100fe0003002000fe0003001f00090003001e0004
00140005001e00440003001d004a0003001c000400140005001c00fe0003
001b001a00280005001b00fe0003001a0028000300190018001400050019
00fe0003001800140003001700fe0003001600fe0003001400fe00030013
0012000800050012000800030011001000290005001000290003000f000e
004c0005000f00fa0003000e004c0003000d0006003a0005000d00fe0003
000c000b00fe0005000b00fe0003000a0009001600050009001600030008
00fe000300070006003a0005000700bb00030006003a0003000500040014
00050005004b0003000400140003000300fe00030001001a000300000012
000300010118858d012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b1d00000000>
[901 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 288 3 <000100f2fff405b204a20028000001232226373e0133213216070e012b01
1301232226373e0133213216070e012b01010e012b0122273501540d3223
08082c22012f3b22090833306e9b0204852f260809313a013a221b080831
340cfdd02f2c1c39421304122127232520282523fc980368232528202523
2721fc524b256a06>SBVPMX+Courier-Oblique AddT42Char 
1 708 6 <0001007400000501051d003c000001030e012b012226373e013b01132322
26373e013b0132160703252e01373e013321321607060706070e010f0101
333216070e0123212226373e01370302013f082b1ab927210808354d30da
29562b08083127bf1b19049801541e180507322a010f2621080c63140b2a
6e3bac0123562b1f08083027fef12c2207062f29e4017ffed92830242428
1d04001f2924241613fd33f20e22171e1e22223c0a020205352c7ffe6420
2523251e211b270c01440000>SBVPMX+Courier-Oblique AddT42Char 
1 0 0 <00020066fe96046605a400030007001740090400060108050204002fccdc
cc310010d4ccd4cc301311211125211121660400fc73031bfce5fe96070e
f8f2720629000000>SBVPMX+Courier-Oblique AddT42Char 
SBVPMX+Courier-Oblique /CharStrings get begin
/g3 3 def
/g6 6 def
end
SBVPMX+Courier-Oblique /Encoding get
dup 33 /g3 put
dup 34 /g6 put
pop
end
%ADOEndSubsetFont
/DZCZBI+Courier-Oblique /SBVPMX+Courier-Oblique findfont ct_VMDictPut/DZCZBI+Courier-Oblique*1 [33{/.notdef}rp /g3 /g6 221{/.notdef}rp]DZCZBI+Courier-Oblique nfDZCZBI+Courier-Oblique*1 [15.5455 0 0 -15.5455 0 0 ]msf15.1166 88.1671 mo(!)sh384.322 329.122 mo(")sh427.936 131.174 mo
389.168 90.2046 330.473 66.3546 268.413 66.3546 cv
155.645 66.3546 64.1227 143.73 64.1227 239.066 cv
64.1227 255.114 66.7687 271.083 71.9828 286.513 cv
@
54.8438 290.259 mo
54.8438 196.986 li
101.481 196.986 li
101.481 290.259 li
cp
0 0 0 0 cmyk
f
.432 lw
[10.364 3.455 ] 0 dsh
132.572 111.486 mo
132.572 313.578 li
225.845 72.6216 mo
225.845 313.578 li
319.118 74.0845 mo
319.118 313.578 li
0 0 0 1 cmyk
@
[] 0 dsh
132.194 110.762 mo
225.531 70.4236 li
319.432 72.2445 li
cp
@
%ADOBeginSubsetFont: SBVPMX+Courier-Oblique AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Courier-Oblique gcheck setglobal} if
1 580 5 <000200ad000004660560000b00270000013e01333216070e012322260321
3216070e0123212226373e01332113232226373e013321321607030b1733
403e1e13122e41401f1e0141271e0709292ffcf828210807312a013189c3
29230707302801251b1a0404bc6c382f58562926fc0d2124291f24242322
0281252323231613>SBVPMX+Courier-Oblique AddT42Char 
1 176 2 <0001010b00000411050800210000010e01232226373e0137253e01333216
0703333216070e0123212226373e013b0113025b0e0d051f2006052a2201
3a0c150b130f07e6a0592a08082f28fdaa282108083659a6d00431020223
1d182409500303231efbc61d2824242424281d03d100>SBVPMX+Courier-Oblique AddT42Char 
1 68 1 <000100e0006604f60487001f000001213216070e012321030e0123222637
13212226373e013321133e01333216070345016b222407073423fe955007
32221e230750fe97232507073920016950083321221f0802c12c202028fe
89242c3020017728201e2e0176242c2c2400>SBVPMX+Courier-Oblique AddT42Char 
SBVPMX+Courier-Oblique /CharStrings get begin
/g5 5 def
/g2 2 def
/g1 1 def
end
SBVPMX+Courier-Oblique /Encoding get
dup 35 /g5 put
dup 36 /g2 put
dup 37 /g1 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DZCZBI+Courier-Oblique*1 [33{/.notdef}rp /g3 /g6 /g5 /g2 /g1 218{/.notdef}rp]DZCZBI+Courier-Oblique nfDZCZBI+Courier-Oblique*1 [15.5455 0 0 -15.5455 0 0 ]msf116.163 333.009 mo(#)sh%ADOBeginSubsetFont: KUDAAA+Courier-Oblique-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (KUDAAA+Courier-Oblique)%%Title: (KUDAAA+Courier-Oblique Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /KUDAAA+Courier-Oblique def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-709 -409 918 1089} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 1343 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE223F5D9796E7E2CD60A70D0> |233 <001C60D8A8C9B7C3C9E27EA0BDDD9C067D895E53111DFF7FEA5589025564B0AB36874A9A42B4E31435124BF11FADF45F0E4352D4A71284523A7AEEA41DC2671589D7C2A76EA5D656103B4C> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /KUDAAA+Courier-Oblique-Identity-H /Identity-H 0 [/KUDAAA+Courier-Oblique] ct_ComposeFont pop end end
%ADOEndSubsetFont
/DZCZBJ+Courier-Oblique /KUDAAA+Courier-Oblique-Identity-H findfont ct_VMDictPutDZCZBJ+Courier-Oblique [15.5455 0 0 -15.5455 0 0 ]msf125.49 333.009 mo(\000\351)shDZCZBI+Courier-Oblique*1 [15.5455 0 0 -15.5455 0 0 ]msf134.817 333.009 mo($##%$)[86.2761 85.4988 9.32584 9.32584 0 ]xsh220.418 57.4695 mo(!)shDZCZBI+Courier-Oblique*1 [10.3637 0 0 -10.3637 0 0 ]msf228.191 61.3554 mo(#)shDZCZBI+Courier-Oblique*1 [15.5455 0 0 -15.5455 0 0 ]msf315.231 63.0395 mo(!)shDZCZBI+Courier-Oblique*1 [10.3637 0 0 -10.3637 0 0 ]msf322.14 66.3119 mo(#%$)[6.21725 6.21722 0 ]xshDZCZBI+Courier-Oblique*1 [15.5455 0 0 -15.5455 0 0 ]msf113.533 94.4138 mo(!)shDZCZBI+Courier-Oblique*1 [10.3637 0 0 -10.3637 0 0 ]msf120.442 97.6862 mo(#)shDZCZBJ+Courier-Oblique [10.3637 0 0 -10.3637 0 0 ]msf126.66 97.6862 mo(\000\351)shDZCZBI+Courier-Oblique*1 [10.3637 0 0 -10.3637 0 0 ]msf132.878 97.6862 mo($)sh%ADOBeginSubsetFont: JXRAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /JXRAAA+Helvetica
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000036c6670
676d000000000000042800000a1d676c796600000000000013e00000278c
686561640000000000000e4800000036686865610000000000000e800000
0024686d74780000000000000ea4000000c46c6f63610000000000000f68
000000646d6178700000000000000fcc000000206e616d65000000000000
0fec00000024707265700000000000001010000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0401bb000598a8a20b003265358
2321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db8005c2c4b535845441b2121592d00000000010000
0000000078832fcc5f0f3cf500110800000000005f4d8f0000000000cb97
f49ff865fc270b9108f9000000090001000000000000000100000629fe29
00000c01f865fced0b910001000000000000000000000000000000310512
004202390000071d004202aa008e02aa0044023900aa02aa0055023900af
0239000004730040047300c4047300400473003104730034047300420473
004d0473004b0473004204730049023900e304ac005c0556009705c7005a
055600af04e300af0556009c0473009c0556006005560034047300520473
00760400003b04730038047300480239001c0473003d01c7008404000080
01c7008906aa0084047300840473003b0473007602aa0089040000420239
00170473008005c700120400000b00000034003400fc0144018601b801d6
01f6021a028802ae033a03e6043404c8055e05a8065a06f0072e075607da
086a08ae08e0095a09820a4e0aac0b760be00c620cce0d980de40e8c0eba
0f2a0f4c0fc81024109c110e11541234128412de138c13c6000100000031
00920009006b0007000200100010005d000007e80a1d0004000100000001
00120001000000000006001000004643505851512b48656c766574696361
0000b800532bb800492bb8003f2bb800352bb8002b2b4118008001a60090
01a600a001a600030069018b0079018b0089018b0099018b00040089018b
0099018b00a9018b00b9018bb2040840ba0179001a014a400b041f541419
1f180a0b1fd2b80106b49e1fd918e3bb0119000d00e10119b20d0009410a
01a0019f0064001f01a50025017a00480028019ab3296c1f60410a01a900
7001a9008001a90003008001a9000101a9b21e321fbe012c00250401001f
0126001e0401b61fe7312d1fe531b80201b21fc227b80401b21fc11eb802
01400f1fc01d9e1fbf1d671fbe1d671fab27b80401b21faa29b80401b61f
a91d6c1f931eb8019ab21f921db80101b21f911db80101b21f751db80201
b61f6d29961f6431b8019ab21f4c96b802abb21f391db80156400b1f3638
211f351de41f2f27b80801400b1f2d1d4c1f2a31cd1f241db802abb21f20
1eb8012540111f1c1d931f3a1d4c1f1e1d45273a1d4527bb01aa019b002a
019bb2254a1fba019b0025017ab349293896b8017bb348283125b8017a40
3648289629482725294c1f252946272729482756c80784075b0741073207
2b072807260721071b071408120810080e080c080a08080807b801acb23f
1f06bb01ab003f001f01abb308060805b801aeb23f1f04bb01ad003f001f
01adb70804080208000814b8ffe0b40000010014b801abb41000000100b8
01abb606100000010006b801adb300000100b801ad401f04000001000410
000001001002000001000200000001000002010802004a00b0018db80600
8516763f183f123e113946443e113946443e113946443e113946443e1139
46443e11394660443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0
324b5358b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b
5279b376706a66456523456023456560234560b08b766818b080622020b1
6a704565234520b003266062636820b003266165b070236544b06a234420
b176664565234520b003266062636820b003266165b066236544b0762344
b10066455458b166406544b27640764523614459b36242725d4565234560
23456560234560b089766818b080622020b172424565234520b003266062
636820b003266165b042236544b072234420b1625d4565234520b0032660
62636820b003266165b05d236544b0622344b1005d455458b15d406544b2
62406245236144592b2b2b2b456953427374b8019a2045694b20b02853b0
49515a58b020615944b801a620456944750000>
[10125 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 4020 22 <0002005affda057105e5001d001e00b1403b1b0597019605031f011f0482
018705891305530803861d111115063a1d030c3a15091e021e1e19033102
3b1031111a20093119191f20a1216a66182b2b4ef44ded4e10f64dedf4ed
12392f003f3fed3fed12392f10ed31304379403a001c172513260e251b26
0b160932000d1410320112110f10071c0932000500033201010204030a18
0c32000f120c3200081a06320104010632012b2b2b2b01103c103c2b2b10
3c103c2b2b2b2b2b2b815d015d080117232e012322001110123332373637
3306070621202726111037362123041e013411c221c5b2d9fef5f1efdc73
3d1ec21a92affed7ff00aee5acba01472805e5fedabb8ea6fecffec5fefe
febfa95991e89dbd9bcd01ac0145d0e20000>JXRAAA+Helvetica AddT42Char 
1 5464 29 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>JXRAAA+Helvetica AddT42Char 
1 6556 33 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>JXRAAA+Helvetica AddT42Char 
1 7764 38 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>JXRAAA+Helvetica AddT42Char 
1 8080 40 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>JXRAAA+Helvetica AddT42Char 
1 8732 43 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>JXRAAA+Helvetica AddT42Char 
1 9320 45 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>JXRAAA+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd00030007003fb800532bb800082fb800092fb800
0810b80000d0b800002fb8000910b80003dcb80004dcb8000010b80007dc
00ba0007000000562bba0002000500562b3031331121112711211142048e
b8fce205bdfa43b8044dfbb30000>JXRAAA+Helvetica AddT42Char 
JXRAAA+Helvetica /CharStrings get begin
/C 22 def
/a 29 def
/e 33 def
/l 38 def
/n 40 def
/r 43 def
/t 45 def
end
JXRAAA+Helvetica /Encoding get
dup 67 /C put
dup 97 /a put
dup 101 /e put
dup 108 /l put
dup 110 /n put
dup 114 /r put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/DZCZBK+Helvetica /JXRAAA+Helvetica findfont ct_VMDictPut/DZCZBK+Helvetica*1 [67{/.notdef}rp /C 29{/.notdef}rp /a 3{/.notdef}rp /e 6{/.notdef}rp /l /.notdef /n 3{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]DZCZBK+Helvetica nfDZCZBK+Helvetica*1 [15.5455 0 0 -15.5455 0 0 ]msf337.828 149.276 mo(Central)[11.2223 8.64175 8.64172 4.3201 5.17499 8.64172 0 ]xsh250.823 86.3705 mo
254.718 94.5025 li
249.598 95.3036 li
f
252.024 94.0495 mo
251.999 93.8846 li
253.935 100.124 li
256.689 105.943 li
260.184 111.347 li
264.345 116.339 li
269.095 120.921 li
274.359 125.098 li
280.06 128.872 li
286.122 132.248 li
292.469 135.229 li
299.025 137.818 li
305.713 140.017 li
312.458 141.833 li
319.184 143.266 li
325.814 144.32 li
332.272 145.001 li
@
%ADOBeginSubsetFont: JXRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal JXRAAA+Helvetica gcheck setglobal} if
1 3756 21 <000300970000050405bd000a00150028008240385a0d5a116a026a0d6a11
7a02772107490d4811021d081f0f041f131e000027081e17020b1e270804
311b690f31231a2a091525281619292ab8015fb3217666182b2b4ef43c4d
fd3c4e10f64dedf4ed003ffd3fed12392ffd390111123931304379401218
1a0508192506260718042b01051a082b01002b012b2b2b8181015d5d0132
373635342726232111013237363534272623211103212017161514070607
16171615140706290102c47e466e754282fe9d01adb74e318f4c7dfe75c3
027701026d404f294d7138635985fedefd93035023378f90321cfe39fd5a
6a435fa03a1ffdfb05139a5b778b592f272b3660a98e73ac>JXRAAA+Helvetica AddT42Char 
1 6080 31 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>JXRAAA+Helvetica AddT42Char 
1 6340 32 <00020038ffda03ed05c2000b001d00774032370e470e570ea704a91b0525
0814020f1d1000081d1d07130a021d170b052e132e102911121a1f0b271a
191e1f87217242182b2b4ef44ded4e10f63c4dfde4e4003fed3f3fed3f11
39113931304379401a181c090a000101180b2600091c0b26000019022600
0a1b0826012b2b012b2b818181005d121633323635342623220615001716
1711331123350e0123220035341233f692a17da1a67a88a9018a53303dad
a23fac6fb3fefaefde015fe8d7c9cbc3d0ca0237341e4b021dfa3e956358
012dfaea0157>JXRAAA+Helvetica AddT42Char 
1 7540 37 <00010080000003f805bd000b00a740645902013a08011902010706170657
056705790678078705b903c903da030a05050608080709030284029402a4
020302391209090405060504066d12070708080705040305060908050204
030a00000403060a07060a061a0d09020a29000b190c0db22162b9011600
182b2b4ef43c4dfd3c3c194e10e618003f3c3c3f3c3f1112173901121739
874d2e2b087d10c104872e182b5d057d10c010083c083c3130015d00715d
7213331101330901230107112380ad01cee6fe6601b1e6feb297ad05bdfc
ab01c7fe6ffd62021c8afe6e0000>JXRAAA+Helvetica AddT42Char 
1 9660 47 <00010012000005a1042f000c0120407e4704aa09028e09014607490b8703
8a08850aca02c403c607c908c60ac90b0b66076a08650a690b7607790876
0a790b85078a0b0a4607490b0247037700780503572816282b012b043b01
3b048f018f0406090401030b020305060c050006080a0b03070a0e17171a
0705069b080304c40a0209c40b00019b0c190d677e182b194e10f4184dfd
3939fd3939fd3939fd3939194e456544e618003f173c3f173c1217395d4b
5179400c0529120607060029120c0c0b0587102b87102b4b5279b4090a09
080ab8018b401312010102070604050529120606070908090a08b8018b40
0e120404030b0c00010029120c0c0b01874d2e2b87107dc41805872e182b
087d10c505872e182b877d10c405872e182b087d10c53130015d71717100
715d1b02331b013301230b012301d7ced1cad2dbb4fec9bbdad3bbfecb04
2ffcb4034cfcb90347fbd1033dfcc3042f00>JXRAAA+Helvetica AddT42Char 
JXRAAA+Helvetica /CharStrings get begin
/B 21 def
/c 31 def
/d 32 def
/k 37 def
/w 47 def
end
JXRAAA+Helvetica /Encoding get
dup 66 /B put
dup 99 /c put
dup 100 /d put
dup 107 /k put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DZCZBK+Helvetica*1 [66{/.notdef}rp /B /C 29{/.notdef}rp /a /.notdef /c /d /e 5{/.notdef}rp /k /l /.notdef /n 3{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]DZCZBK+Helvetica nfDZCZBK+Helvetica*1 [15.5455 0 0 -15.5455 0 0 ]msf84.2537 42.2868 mo(Backward)[10.3674 8.64172 7.77118 7.77121 11.2223 8.64175 5.17496 0 ]xsh194.61 84.7995 mo
188.662 78.0226 li
193.374 75.8676 li
f
155.733 39.0765 mo
160.167 39.7795 li
164.203 41.0266 li
167.867 42.7615 li
171.188 44.9265 li
174.192 47.4675 li
176.909 50.3275 li
179.363 53.4475 li
181.584 56.7745 li
183.599 60.2495 li
185.436 63.8185 li
187.122 67.4225 li
188.684 71.0065 li
190.151 74.5146 li
191.549 77.8896 li
192.907 81.0746 li
191.377 77.7305 li
@
%ADOBeginSubsetFont: JXRAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal JXRAAA+Helvetica gcheck setglobal} if
1 4444 24 <000100af000004aa05bd000900394018071e040409031e0100020908066b
011a0b03082500190a0bb80157b32195dc182b2b4ef44dfd3c4e10f64de4
003f3f3ced12392ffd313013211521112115211123af03fbfccc02d1fd2f
c705bdb4fe42affd6400>JXRAAA+Helvetica AddT42Char 
1 8264 41 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>JXRAAA+Helvetica AddT42Char 
JXRAAA+Helvetica /CharStrings get begin
/F 24 def
/o 41 def
end
JXRAAA+Helvetica /Encoding get
dup 70 /F put
dup 111 /o put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DZCZBK+Helvetica*1 [66{/.notdef}rp /B /C 2{/.notdef}rp /F 26{/.notdef}rp /a /.notdef /c /d /e 5{/.notdef}rp /k /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]DZCZBK+Helvetica nfDZCZBK+Helvetica*1 [15.5455 0 0 -15.5455 0 0 ]msf277.911 25.1696 mo(Forward)[9.49661 8.64175 5.17499 11.2223 8.64175 5.17496 0 ]xsh257.348 70.9675 mo
255.045 62.2495 li
260.224 62.4215 li
f
272.355 20.8875 mo
268.801 21.4785 li
265.834 22.6725 li
263.406 24.4115 li
261.464 26.6356 li
259.957 29.2875 li
258.833 32.3105 li
258.042 35.6455 li
257.531 39.2336 li
257.249 43.0186 li
257.146 46.9395 li
257.168 50.9416 li
257.266 54.9635 li
257.387 58.9485 li
257.48 62.8395 li
257.494 66.5775 li
257.606 63.1985 li
@
-82.6713 384.428 mo
-77.1513 384.428 li
-77.1513 378.908 li
-82.6713 378.908 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.52 0 0 5.52 -256.735 -34.7115 ]ct
<<
/T 1
/W 46 
/H 46 
/M[46 0 0 -46 0 46 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"98D:&,uS1rVuuurt5#+!.Y%KhuEa!s8RTL!!iQ(rW!!%s8Mut!Wi?!r;Zluq#(0nJ+3C:!C-)P!!,=B
r;Zj?i;EWV+2IgT!>!!E!!*U\r;Zj'JGfHK#CuaQ!!iE%!!E-!!!E-!!<W?#!!!-!!!!-!!!!-!!!!-!
!!!-!!!!-!!!*1Pr;Zj'JGfHK#CuaQ!=-F=!!*VGr;Zj/i;EWV+5m(t!?^h0!!,=Rr;Zj_q#(0nJ,K6F
!WW/u!!33$s8E!)"98CO!!!9(s54=d!$D7@p](;Ds8W&u!WE$#^^pJFJ,~>

%%EndBinary
grestore
np
f
-67.0712 385.148 mo
-57.1112 385.148 li
-57.1112 373.388 li
-67.0712 373.388 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[9.96 0 0 11.76 -241.134 -35.4315 ]ct
<<
/T 1
/W 83 
/H 98 
/M[83 0 0 -98 0 98 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
p](<qs7cQp!WVop!<N5q!!*-#pAb?rs6p!jrr35m!!*'!qu@9+rs!uRs8W&u&,lM4huNfWrW!K-rs&5u
s8W&u&,lM4rW)uurW!K,rs&Q(s8E!/s8W)u"b?XQrW!K,rrmq&s8E!/r;Qr9J,fKJ&,cG2i.(e+!"]#-
"lOn1rW!K,rrqnAs8E!/r;QriJ,fKJ&,cG2n:1K;!"]#-"o*TIrW!K,rrr1Is8E!/r;Qrq5QC]_&,cG/
pcnc[rW!K,rrr<bs8E!/r;Qru5QC]_&,cG2r'15\!"]#-"oLUbrW!K,rrr<bs8E!/r;SYP5QC]_&-)\/
+92<^s8E!/s8W'?s8F,?rW!K/s8F,?rZD1>!"],0rZD1>+92<?&-)\/+8u3CrW!K/s8E!?rVm*$!"],0
rZD+=#6"T5s8W'?rVm*$!"],0r#bn;#6"T5s8W!=rVm*$!"],0r#bn;#6"T5s8W!=rVm*$!"],0p`KJ7
#6"T5s8VR1rVm*$!"],0i#hpt#6"T5s8TkVrVm*$!"],-!$D1>!<2lr!$D1>!<2lr!$D1>!<2lr!$D1>
!<2lr!$D1>!<2lr!$D1>#6"T5s82j=rVm*$!"],0^`WOT#6"T5s8V"!rVm*$!"],0n/qW/#6"T5s8Vj9
rVm*$!"],0r#bn;#6"T5s8W!=rVm*$!"],0r#bn;#6"T5s8W!=rVm*$!"],0rZD+=#6"T5s8W'?rVm*$
!"],0rZD+=#6"T5s8W'?rVm*$!"],0rZD+=#6"T5s8W'?rVm*$!"],0rZD+=#6"T5s8W'?rVlru!"\o*
!WE'!&,H5,rW!K)rrW0"&,H5,rW!K)rrW0"&,H5,rW!K)rrW0"&,H5,rW!K)rrW0"&,H5,rW!K)rrW0"
&,H5,rW!K,s8N$"rW!K)rrW0"&,H5,rW!K)rrW0"&,H5,rW!K)rrW0"&,H5,rW!K)rrW0"&,H5,rW!K)
rrW0"#PnB$qu?utrrVZi!;c`n!!!-!s82is"8r2s!!!-!s82is"8r2s!!!-!s*t~>

%%EndBinary
grestore
np
f
-57.2312 385.388 mo
-49.6712 385.388 li
-49.6712 377.348 li
-57.2312 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.56 0 0 8.04 -231.294 -35.6715 ]ct
<<
/T 1
/W 63 
/H 67 
/M[63 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3#7#Q4T(qu?_HrVluh!!",>rr^%Yn-Apl!s&B#!WN*Qqud!!J:IV!p]pj!^d%l!n.5R!i#i"!i#i"!
n.5R!^d%l!p]pj!J:IV!qud!!!<3!$rW3&u!<3!$rW)ur!WE$#!.XnIrVls"J+s-Err@QN5PP?Zrr[d9
n,rXh"+VK_#Q=Z)^`VJ>rVlu8&)[]krr^%I^^'i<"2G/W&,lM1i!7%.rVluX#Cm?`rr_0]J.MVY"5j93
&,lM1hueK?rVluX!rrl1rr_0[!"]&."5j1[&,lM1huNfgrVluX!<<Z/rr_0[!"]&."5j1[&,lM1huNfg
rVluX!<<Z/rr_0[!"]&."5j1[&,lM1huNfgrVluX!It^Zrr_0]J.MVY"5j93&,lM1hueK?rVluX"2G0?
rr^%A^^'i<"2G/W#Q=Z)^^&d&rr3-$^^o?.rVlu8&+B]"rr[cnn,rXh"+VKg"9&6%J3Wf0rVls"5PtQ\
rrW7NrW)rt"TAE$rW)rt1&_1Qrr@QKs82ots+!?6s7c]rs1f`Vs6p9ns54Ffs54Ffs7cj!s1gl!s82ot
rr@QJrrW7NquQcr!Iu6mn,rXh"5j.Z&,lM1qu?_Hr;Qf5#QFaR~>

%%EndBinary
grestore
np
f
-48.5912 385.148 mo
-42.8312 385.148 li
-42.8312 377.468 li
-48.5912 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.76 0 0 7.68 -222.654 -35.4315 ]ct
<<
/T 1
/W 48 
/H 64 
/M[48 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
@fQE<rrE)o!"\i)*rl9On,Nt!!"\"8#64`7_tX<6!"XkS!<<*1&)[He!"L+/!<7QZ5MuPA^^NHc!<:sc
J)C>,i!=hj!<:s_s6p'hhuNfP"979[s83-%huWlW&-(PgrVloV!WE$!huirX!T4(YrrM$[rVloV"9&6#
huirX!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\
!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z&huF#\rrM$_rVloV#Q=Z'i!95\!T44]rrM$_
rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'^]XQ8rrE&ur;Zj?s8;ou
+929>!?_@?!!+2ArW!!"+9-i~>

%%EndBinary
grestore
np
f
-36.3512 385.388 mo
-31.0712 385.388 li
-31.0712 374.588 li
-36.3512 374.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.28 0 0 10.8 -210.414 -35.6715 ]ct
<<
/T 1
/W 44 
/H 90 
/M[44 0 0 -90 0 90 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr;<r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;QbLr;QbLr;QbLr;QbLr;QbLr;Qa!r;Qa!r;Qa!rVlot
"9&6#rWE-!!W3&urrN$"rVlon"9&6#p]LKp!Up3irrM$[rVlo6"9&6#J-5cM!<<6$rrDuq!!,=Rr;Zg^
qu?^]qu?^]qu?g`s6p-hrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof
"9&6"n,NRhrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh
!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh#Ohiqrt#/!"+L:M&-),$s8NW0n,r^j
&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-)D,
s8EQ/p]:Eo+92*:s8F,?p]:Eo+926>s83u=quHcp5QC]_s85+]rr@QDJ,fP!56gV,s8TkVi;W`Xi!4i4
rrVZi"9/<%qu@!#rrTtXs*t~>

%%EndBinary
grestore
np
f
-29.3912 385.148 mo
-20.8712 385.148 li
-20.8712 373.148 li
-29.3912 373.148 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 12 -203.454 -35.4315 ]ct
<<
/T 1
/W 71 
/H 100 
/M[71 0 0 -100 0 100 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr9*qu6`m!!iE$!WW3*qu6]t!!iE$!WW3*qu6]t!!iE$!WW3*qu6`s!!iB#!ItFOrrKn?qYpTS#Q"H$
i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y
!T44ZrrM$_qYpTS#Q"H$i!9,Y!8mh^qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44Zrrh6b
s6p'frrq<cs*t)6rr3/[#Q=]'&,uS4i!9#^huiuY"lKXT5PP9Yrrq<ci;`cVrr3#W#6VmDrW)rt2rFpr
s8N(Ks8V!^&-)Y05QCcA"s<mFJ3X)6hul:Es*u3ks54$0s8RTks8V!WJ,fP!+92B!!<3!%^`WUVhuNcV
"i(ZKs53qWrrp1Ks8V!Xrr3/;&-)[f"9/<(^^pJFhuiuY"i(ZKs54"Yrs$7Ls8V!Zrs/T(^^pJFi!98]
"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,
^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]#J^lMs54.^rs&M=&-)[f#QF`,
^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;
&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1K
s8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZK
s1ea9rsO>^s8N'!s8W&u!WW)u!<2rt!!3#u!<2rt!!3#u!<2rt!!3#u!r`0"!<<0!!!*#t!!!%M~>

%%EndBinary
grestore
np
f
-19.9112 385.148 mo
-16.1912 385.148 li
-16.1912 373.508 li
-19.9112 373.508 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[3.72 0 0 11.64 -193.974 -35.4315 ]ct
<<
/T 1
/W 31 
/H 97 
/M[31 0 0 -97 0 97 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!WV*Ws"o6js8N'@s8E!/s8E!/s82j%s82j%s82j%s82j%s82j%s8E!/s8E!/s8N'@s8RU6s8V#is8)b>
#QO]%#QK;S#QK;S#QK;S#QK;S#QK;S#QOc'#QOgS#QOh>#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^
#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^E<lODi!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^^]XW:!!3-!!!!'!!!!'!!!**#!WW3$rVup!
J,~>

%%EndBinary
grestore
np
f
-15.1112 385.388 mo
-9.59123 385.388 li
-9.59123 377.348 li
-15.1112 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.52 0 0 8.04 -189.174 -35.6715 ]ct
<<
/T 1
/W 46 
/H 67 
/M[46 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
2ZNdW&-!aOn,NIf+90+V!'DA'!.WoD+8c6@qu@i6&-)Y0+7MMps1f`7J,fQ,+5hYKs55!7rr3&h+2ImU
!r*jgrr3&p++aFk!rO,@rr3&t*s)B@!rO,@rr3&t*s)B@!ra8Arr3'!*ru<?%fROMJ,fQJ*rnP*s8F)?
"s<mFrZ?Y$rVlnK"9&6$J,k)urrTt9#QF`3^]4?Vs8V!W!!3-"nGWChJ,f<C!!48Br;HZt#QOf&!!rc-
s*t(L!WW2XrW!$"s7lQn!e:7MrW!-es8Vio!$D4?!l+dHrr3&t!"]&.!<<B'rrR]UO8f.]i!0em"TSMk
!tYD2!r)j&rr3&p!sei*!rN-*rr3&t!sei*!rN-&rr3'!!sAQ&!r`9(rr3'!!s/E$!r`9&rr3'!#6Fi(
!r`E)rr3&t#6=c'0)Q4[J,fQH%feios7dZ95QCcY*rmD_s6r5Q#QOh^IfP-$s+(+M_#OB7rr_1$'^uA-
#P\9!&-!1>!!%NK+90+Ys8RT~>

%%EndBinary
grestore
np
f
-2.51134 385.388 mo
3.96866 385.388 li
3.96866 377.348 li
-2.51134 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.48 0 0 8.04 -176.575 -35.6715 ]ct
<<
/T 1
/W 54 
/H 67 
/M[54 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3"L&,lM0p](<mrr_0Z!$D4?B7M)^&-)\/!.XtMs8Vuts8RZMs7cj!s5<qWi",kfn:1JR+92B95Q?6u
s8VRQrr>:`s1f`V!.Y%KJ04ajJ,fNK&,ZG-s8E!/p]1?orW!K(!WW3!!"\Q"s8W&u&+B]$s8E!/i!0Aa
s8E!/huiuY!rsFY#QF`*J3UgSrr3)9J%u<errIWTr;QeJ#Q4T&J-Z#P!It^YrrE*1r;Qct&,cG.!"]#-
!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrE*1r;QeJ&,cG.J.MSX!ItFQ
rrIWTr;QeJ#Q4T&^^'f;!Pes<rrM$[rVlr:huirX!lNpurVlr:n,`Lf!e^7KrVlqSp]19m!XJW'rVls1
rW%F/s8W'/rW%HJs8F,?!'gM`r#brh+92B95QAM@s8VS<s54Ffs5<qWn-B!n_>jQ5!WW0%s8W&uJ,BQN
rr[cni",he"5j.Z5Q:Zap](<lrr[c^s8RT~>

%%EndBinary
grestore
np
f
5.28867 385.388 mo
12.9687 385.388 li
12.9687 377.348 li
5.28867 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.68 0 0 8.04 -168.775 -35.6715 ]ct
<<
/T 1
/W 64 
/H 67 
/M[64 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"98Dj!W2lu!!",>rr`#r!!iK&"7QQj!WE$$^jl=`J,]HNJcGb#5Q:[W#QOh>+92B?&-)[f&-)\-+92B1
#QOi%&-)\)"98Dr"98Dr!WW2p!WW2t!WW2h!<<)s!<<)g!.Y%J!<<)g!.Y%J!.Y%<!.Y%J!.Ppen,Rt<
rW%HJn,Rt<rr>:`n,Rt<rr>:`p]1<n"9:[dquQfs"9:[drWE0"!<>@]rrE*aqu6Zs5PtH]!'gA\!<>@]
rrE*ar;Qin!'gG^"5j.Z5Q:Z_rr)lt5Q:Z_i;N]V5Q:Zb!!*$!4$WcFqu@9-!'gM`n,Rt<!'gM`^]FK8
!'gM`J-Z,S!'gM`!$D7@!'gM_!'gM`!'gM]!.Y%K!'gMY!<3!$!'gMQ!WN*%!'gMA"9/<'!'gMA"9/<'
!'gM!#QF`+!'gL6#QF`+!'ft'&,uS3!'ft'&,uS3!'frQ&,uS3!'frQ+9)9C!'frQ+9):X!'frQ+92B?
!'frQ+92B?!'frQ+92B?!'frQ+92B=!'frQ+92B=!'frQ&-)\)!'ft'&-)\)J3WOR#QOhn^`VON#QOh_
^`VOn"98D]^`VP)!WW1Pi"*a#!<<'(n,ipn!'gAln,O"!!"\!#5PtL's1eU7J,TF4s6p!hs8RWKrrIW\
rVqB~>

%%EndBinary
grestore
np
f
13.8087 385.388 mo
19.3287 385.388 li
19.3287 377.348 li
13.8087 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.52 0 0 8.04 -160.255 -35.6715 ]ct
<<
/T 1
/W 46 
/H 67 
/M[46 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
2ZNdW&-!aOn,NIf+90+V!'DA'!.WoD+8c6@qu@i6&-)Y0+7MMps1f`7J,fQ,+5hYKs55!7rr3&h+2ImU
!r*jgrr3&p++aFk!rO,@rr3&t*s)B@!rO,@rr3&t*s)B@!ra8Arr3'!*ru<?%fROMJ,fQJ*rnP*s8F)?
"s<mFrZ?Y$rVlnK"9&6$J,k)urrTt9#QF`3^]4?Vs8V!W!!3-"nGWChJ,f<C!!48Br;HZt#QOf&!!rc-
s*t(L!WW2XrW!$"s7lQn!e:7MrW!-es8Vio!$D4?!l+dHrr3&t!"]&.!<<B'rrR]UO8f.]i!0em"TSMk
!tYD2!r)j&rr3&p!sei*!rN-*rr3&t!sei*!rN-&rr3'!!sAQ&!r`9(rr3'!!s/E$!r`9&rr3'!#6Fi(
!r`E)rr3&t#6=c'0)Q4[J,fQH%feios7dZ95QCcY*rmD_s6r5Q#QOh^IfP-$s+(+M_#OB7rr_1$'^uA-
#P\9!&-!1>!!%NK+90+Ys8RT~>

%%EndBinary
grestore
np
f
20.5287 385.388 mo
27.1287 385.388 li
27.1287 377.348 li
20.5287 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 -153.535 -35.6715 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
29.1687 388.508 mo
31.2087 388.508 li
31.2087 383.348 li
29.1687 383.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[2.04 0 0 5.16 -144.895 -38.7915 ]ct
<<
/T 1
/W 17 
/H 43 
/M[17 0 0 -43 0 43 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
IdeHZi",k'#QK;Vrr<*"!!3*"!<3$!rr<'!!!%KK!.TM!J%u2:i!b,)*.S"dJ,fFrs87BHr."bEJ,f:n
s7lWoq#CBhs8Vlos7$'gnc/XJs8V-Zs5X.Z_uKbWs8RlSrt#/0+92<^s85+]r."bAJ,f$<s5F"X_uKc"
s8RT~>

%%EndBinary
grestore
np
f
38.5288 385.388 mo
43.8088 385.388 li
43.8088 374.588 li
38.5288 374.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.28 0 0 10.8 -135.534 -35.6715 ]ct
<<
/T 1
/W 44 
/H 90 
/M[44 0 0 -90 0 90 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr;<r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;QbLr;QbLr;QbLr;QbLr;QbLr;Qa!r;Qa!r;Qa!rVlot
"9&6#rWE-!!W3&urrN$"rVlon"9&6#p]LKp!Up3irrM$[rVlo6"9&6#J-5cM!<<6$rrDuq!!,=Rr;Zg^
qu?^]qu?^]qu?g`s6p-hrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof
"9&6"n,NRhrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh
!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh#Ohiqrt#/!"+L:M&-),$s8NW0n,r^j
&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-)D,
s8EQ/p]:Eo+92*:s8F,?p]:Eo+926>s83u=quHcp5QC]_s85+]rr@QDJ,fP!56gV,s8TkVi;W`Xi!4i4
rrVZi"9/<%qu@!#rrTtXs*t~>

%%EndBinary
grestore
np
f
45.4888 385.148 mo
54.0088 385.148 li
54.0088 373.148 li
45.4888 373.148 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 12 -128.574 -35.4315 ]ct
<<
/T 1
/W 71 
/H 100 
/M[71 0 0 -100 0 100 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr9*qu6`m!!iE$!WW3*qu6]t!!iE$!WW3*qu6]t!!iE$!WW3*qu6`s!!iB#!ItFOrrKn?qYpTS#Q"H$
i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y
!T44ZrrM$_qYpTS#Q"H$i!9,Y!8mh^qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44Zrrh6b
s6p'frrq<cs*t)6rr3/[#Q=]'&,uS4i!9#^huiuY"lKXT5PP9Yrrq<ci;`cVrr3#W#6VmDrW)rt2rFpr
s8N(Ks8V!^&-)Y05QCcA"s<mFJ3X)6hul:Es*u3ks54$0s8RTks8V!WJ,fP!+92B!!<3!%^`WUVhuNcV
"i(ZKs53qWrrp1Ks8V!Xrr3/;&-)[f"9/<(^^pJFhuiuY"i(ZKs54"Yrs$7Ls8V!Zrs/T(^^pJFi!98]
"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,
^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]#J^lMs54.^rs&M=&-)[f#QF`,
^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;
&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1K
s8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZK
s1ea9rsO>^s8N'!s8W&u!WW)u!<2rt!!3#u!<2rt!!3#u!<2rt!!3#u!r`0"!<<0!!!*#t!!!%M~>

%%EndBinary
grestore
np
f
54.9688 385.388 mo
61.5688 385.388 li
61.5688 377.348 li
54.9688 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 -119.094 -35.6715 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
68.4088 385.388 mo
74.8888 385.388 li
74.8888 377.348 li
68.4088 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.48 0 0 8.04 -105.654 -35.6715 ]ct
<<
/T 1
/W 54 
/H 67 
/M[54 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3"L&,lM0p](<mrr_0Z!$D4?B7M)^&-)\/!.XtMs8Vuts8RZMs7cj!s5<qWi",kfn:1JR+92B95Q?6u
s8VRQrr>:`s1f`V!.Y%KJ04ajJ,fNK&,ZG-s8E!/p]1?orW!K(!WW3!!"\Q"s8W&u&+B]$s8E!/i!0Aa
s8E!/huiuY!rsFY#QF`*J3UgSrr3)9J%u<errIWTr;QeJ#Q4T&J-Z#P!It^YrrE*1r;Qct&,cG.!"]#-
!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrE*1r;QeJ&,cG.J.MSX!ItFQ
rrIWTr;QeJ#Q4T&^^'f;!Pes<rrM$[rVlr:huirX!lNpurVlr:n,`Lf!e^7KrVlqSp]19m!XJW'rVls1
rW%F/s8W'/rW%HJs8F,?!'gM`r#brh+92B95QAM@s8VS<s54Ffs5<qWn-B!n_>jQ5!WW0%s8W&uJ,BQN
rr[cni",he"5j.Z5Q:Zap](<lrr[c^s8RT~>

%%EndBinary
grestore
np
f
75.9688 385.388 mo
82.5688 385.388 li
82.5688 377.348 li
75.9688 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 -98.0945 -35.6715 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
83.7688 385.148 mo
92.2888 385.148 li
92.2888 377.468 li
83.7688 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 7.68 -90.2945 -35.4315 ]ct
<<
/T 1
/W 71 
/H 64 
/M[71 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"onQ4s6p'gs).T3&-%.[5QC``!"]&/!"],0!!!Q)#N,^arr<$0n3?[Ks8N'!&)dKe!<<'!!"[!IrW)uu
rW!Ias8N(Ks8RT[&-)Y05QCc!%Nk`NJ3X)6i!_jMs*u3ks54<8s8RTks8V!_J,fP!+92B!#lai+^`WUV
!T3tWrrp1Ks8V!Xrr3/;&-)[f!WN*&^^pJFhuiuY"i(ZKs54"Yrrp1Ks8V!Zrr3/;&-)[f"9/<(^^pJF
i!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3,:&-)[f
!!iN'"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f
#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^
rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]
rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`-^^pJFi!98e
s8TkFs8Tk:rr3@V#QOf(!<<)u!!3,u!!*#t!!!&u!!*#t!!!&u!!*#t!!!&u!!*#t!!!&u!!*#t!!!%M
~>

%%EndBinary
grestore
np
f
92.6488 385.388 mo
97.9288 385.388 li
97.9288 374.588 li
92.6488 374.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.28 0 0 10.8 -81.4145 -35.6715 ]ct
<<
/T 1
/W 44 
/H 90 
/M[44 0 0 -90 0 90 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr;<r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;QbLr;QbLr;QbLr;QbLr;QbLr;Qa!r;Qa!r;Qa!rVlot
"9&6#rWE-!!W3&urrN$"rVlon"9&6#p]LKp!Up3irrM$[rVlo6"9&6#J-5cM!<<6$rrDuq!!,=Rr;Zg^
qu?^]qu?^]qu?g`s6p-hrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof
"9&6"n,NRhrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh
!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh#Ohiqrt#/!"+L:M&-),$s8NW0n,r^j
&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-)D,
s8EQ/p]:Eo+92*:s8F,?p]:Eo+926>s83u=quHcp5QC]_s85+]rr@QDJ,fP!56gV,s8TkVi;W`Xi!4i4
rrVZi"9/<%qu@!#rrTtXs*t~>

%%EndBinary
grestore
np
f
99.4888 385.148 mo
105.249 385.148 li
105.249 377.468 li
99.4888 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.76 0 0 7.68 -74.5745 -35.4315 ]ct
<<
/T 1
/W 48 
/H 64 
/M[48 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
@fQE<rrE)o!"\i)*rl9On,Nt!!"\"8#64`7_tX<6!"XkS!<<*1&)[He!"L+/!<7QZ5MuPA^^NHc!<:sc
J)C>,i!=hj!<:s_s6p'hhuNfP"979[s83-%huWlW&-(PgrVloV!WE$!huirX!T4(YrrM$[rVloV"9&6#
huirX!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\
!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z&huF#\rrM$_rVloV#Q=Z'i!95\!T44]rrM$_
rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'^]XQ8rrE&ur;Zj?s8;ou
+929>!?_@?!!+2ArW!!"+9-i~>

%%EndBinary
grestore
np
f
106.449 385.388 mo
114.129 385.388 li
114.129 377.348 li
106.449 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.68 0 0 8.04 -67.6145 -35.6715 ]ct
<<
/T 1
/W 64 
/H 67 
/M[64 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"98Dj!W2lu!!",>rr`#r!!iK&"7QQj!WE$$^jl=`J,]HNJcGb#5Q:[W#QOh>+92B?&-)[f&-)\-+92B1
#QOi%&-)\)"98Dr"98Dr!WW2p!WW2t!WW2h!<<)s!<<)g!.Y%J!<<)g!.Y%J!.Y%<!.Y%J!.Ppen,Rt<
rW%HJn,Rt<rr>:`n,Rt<rr>:`p]1<n"9:[dquQfs"9:[drWE0"!<>@]rrE*aqu6Zs5PtH]!'gA\!<>@]
rrE*ar;Qin!'gG^"5j.Z5Q:Z_rr)lt5Q:Z_i;N]V5Q:Zb!!*$!4$WcFqu@9-!'gM`n,Rt<!'gM`^]FK8
!'gM`J-Z,S!'gM`!$D7@!'gM_!'gM`!'gM]!.Y%K!'gMY!<3!$!'gMQ!WN*%!'gMA"9/<'!'gMA"9/<'
!'gM!#QF`+!'gL6#QF`+!'ft'&,uS3!'ft'&,uS3!'frQ&,uS3!'frQ+9)9C!'frQ+9):X!'frQ+92B?
!'frQ+92B?!'frQ+92B?!'frQ+92B=!'frQ+92B=!'frQ&-)\)!'ft'&-)\)J3WOR#QOhn^`VON#QOh_
^`VOn"98D]^`VP)!WW1Pi"*a#!<<'(n,ipn!'gAln,O"!!"\!#5PtL's1eU7J,TF4s6p!hs8RWKrrIW\
rVqB~>

%%EndBinary
grestore
np
f
114.849 385.148 mo
118.689 385.148 li
118.689 373.148 li
114.849 373.148 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[3.84 0 0 12 -59.2145 -35.4315 ]ct
<<
/T 1
/W 32 
/H 100 
/M[32 0 0 -100 0 100 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
IfKEQs7cR!rr<$(rr<$(rr<$(rr<$(rr<$(s8E!'s8RTSs8Tk>s8V!^s8V!^s8V!^s8V!^s8V!^s8V!^
s8V!^s8V!^s8V!^s8V!^s8V!^s8V!^s8V!^s8V!^s8V!^s8V!^s8V!^s8V!^s8V!^s8V!^s8V!^s8V!^
IfKH+#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^
#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^
IL#oQi!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^^]XW:!!*$!
mJqb~>

%%EndBinary
grestore
np
f
125.289 385.388 mo
133.689 385.388 li
133.689 373.148 li
125.289 373.148 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.4 0 0 12.24 -48.7745 -35.6715 ]ct
<<
/T 1
/W 70 
/H 102 
/M[70 0 0 -102 0 102 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
qu6]p+8c'>huFksrr`0!!$D.="8i-!+8l-@qu?^=r;Qls!!",=rr`0!!$D+<!r)a;qu6`s!$D(;!<=5<
rrIWlqYpSH+8Z!<J04Xf"+VKns8;ltJ04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9grrIWlqYpSH+8Z!<
J04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9ks8DruJ04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9grrIWl
qYpSH+8u3B^^'mi+9)9Dqu?`sJ04dj"n2Kl5CajTrrp1Kn.1$krr3T2J,T\'+92B=!WW1PJ04gkp]EAQ
s1s4-s8VQns8VS=+92B!+92B9!$D7@^`WUVqu@i=s+!?6s82j=s8N(Ks8W&u+92<?rVm!#+926=rVm!#
+92*:rVm"N+92*:rVm"N+91g2rVm"N+91g4rVm"N+917$rVm"N+917$rVm(P+90+]s8N<'s*u3k^^'i<
"FqTo^^'i<"FqToJ-Z&Q"FqToJ-Z&Q"FqToJ.MVY"FqToJ.MVY"FqTo!"]&."FqTo!"]&."FqTo!"]&.
"FqTo!"]&."FqTo!"]&."FqTo!"]&."FqTo!"]&."FqTo!"])/"oj)prr<T.rrdiorr<T.rrdiorr<T.
rrdiorr<T.rrdios*tXYrrdios*tXYrrdios*tXYrrdios*t@Qrrdios*t@Qrrdios1em<rrdios1em<
rrdios54.\rrdios54"Xrrdios54"Xrrdios6p-hrrdios7cWnrrdios7cWnrr`<Ds82lqrr`<Ds8E#t
s&/gr+92<?J,fQH!$D7@!.Y%Kqu@i=s+!?6s7cR)s8TkVs8VS=#QOh^&-)[gJ-#]Mn-B!nK7Eq(s82ot
rs+&S"98?#s83CX!!E9$J03\kJ.hnbs8V!W!.TM!"98Dr!!3+M!.Y"J"b7-`KE(t%~>

%%EndBinary
grestore
np
f
134.769 385.148 mo
138.489 385.148 li
138.489 373.508 li
134.769 373.508 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[3.72 0 0 11.64 -39.2945 -35.4315 ]ct
<<
/T 1
/W 31 
/H 97 
/M[31 0 0 -97 0 97 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!WV*Ws"o6js8N'@s8E!/s8E!/s82j%s82j%s82j%s82j%s82j%s8E!/s8E!/s8N'@s8RU6s8V#is8)b>
#QO]%#QK;S#QK;S#QK;S#QK;S#QK;S#QOc'#QOgS#QOh>#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^
#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^E<lODi!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^^]XW:!!3-!!!!'!!!!'!!!**#!WW3$rVup!
J,~>

%%EndBinary
grestore
np
f
139.329 385.148 mo
149.769 385.148 li
149.769 372.908 li
139.329 372.908 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[10.44 0 0 12.24 -34.7345 -35.4315 ]ct
<<
/T 1
/W 87 
/H 102 
/M[87 0 0 -102 0 102 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rVm&j!.Y%D"9&6)rVup/s*t*!rr35m!!!'!!!",?rs-=ArW)]op^dB(:B2L:i,Ar!#QOi%!.Y%D+<U@\
s8Vips8VQg5O\dTs6p9ns53lAhuWlXi",kf^]8lB!WW28+92@k!<:sXs8RU6s8RTLs53qXrr>:`rt9h_
s53qXrW%HJs*t.MhuWlU!<3!'J-#]>"989!rr34R"98-$s7cWors-=As83E-p]:Bo!T4(YrrMlqrr3#W
#Q=Z'n,`Og!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'
n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i
!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!8mh^rVlof"9/<$i!95\!Up3jrrM$_
rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!98]p](="s7cQp#QOQ!!=/Z"!!*?)p](F%s8VQjrr3#W
#Q=Z&n,NRirrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\
!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3j
rrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_
rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof
"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$
i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrV*`s8N$!n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]
rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTk
rr3#W#Q=Z'n,r[i!T44]rrVZlrr`<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!T4"XrrKn;rVm(P!.Y%K
!!*#u!.b%K!.XqI![%GmrVuqJr;Zm@s+((K!.XqI![%GmrVuqJr;Zm@s+((K!.XqI!?_>l~>

%%EndBinary
grestore
np
f
149.529 385.388 mo
156.129 385.388 li
156.129 377.348 li
149.529 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 -24.5345 -35.6715 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
157.209 385.148 mo
162.969 385.148 li
162.969 377.468 li
157.209 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.76 0 0 7.68 -16.8545 -35.4315 ]ct
<<
/T 1
/W 48 
/H 64 
/M[48 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
@fQE<rrE)o!"\i)*rl9On,Nt!!"\"8#64`7_tX<6!"XkS!<<*1&)[He!"L+/!<7QZ5MuPA^^NHc!<:sc
J)C>,i!=hj!<:s_s6p'hhuNfP"979[s83-%huWlW&-(PgrVloV!WE$!huirX!T4(YrrM$[rVloV"9&6#
huirX!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\
!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z&huF#\rrM$_rVloV#Q=Z'i!95\!T44]rrM$_
rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'^]XQ8rrE&ur;Zj?s8;ou
+929>!?_@?!!+2ArW!!"+9-i~>

%%EndBinary
grestore
np
f
163.929 385.388 mo
170.529 385.388 li
170.529 377.348 li
163.929 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 -10.1345 -35.6715 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
171.729 385.148 mo
180.249 385.148 li
180.249 377.468 li
171.729 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 7.68 -2.33447 -35.4315 ]ct
<<
/T 1
/W 71 
/H 64 
/M[71 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"onQ4s6p'gs).T3&-%.[5QC``!"]&/!"],0!!!Q)#N,^arr<$0n3?[Ks8N'!&)dKe!<<'!!"[!IrW)uu
rW!Ias8N(Ks8RT[&-)Y05QCc!%Nk`NJ3X)6i!_jMs*u3ks54<8s8RTks8V!_J,fP!+92B!#lai+^`WUV
!T3tWrrp1Ks8V!Xrr3/;&-)[f!WN*&^^pJFhuiuY"i(ZKs54"Yrrp1Ks8V!Zrr3/;&-)[f"9/<(^^pJF
i!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3,:&-)[f
!!iN'"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f
#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^
rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]
rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`-^^pJFi!98e
s8TkFs8Tk:rr3@V#QOf(!<<)u!!3,u!!*#t!!!&u!!*#t!!!&u!!*#t!!!&u!!*#t!!!&u!!*#t!!!%M
~>

%%EndBinary
grestore
np
f
181.329 385.388 mo
187.809 385.388 li
187.809 377.348 li
181.329 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.48 0 0 8.04 7.26553 -35.6715 ]ct
<<
/T 1
/W 54 
/H 67 
/M[54 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3"L&,lM0p](<mrr_0Z!$D4?B7M)^&-)\/!.XtMs8Vuts8RZMs7cj!s5<qWi",kfn:1JR+92B95Q?6u
s8VRQrr>:`s1f`V!.Y%KJ04ajJ,fNK&,ZG-s8E!/p]1?orW!K(!WW3!!"\Q"s8W&u&+B]$s8E!/i!0Aa
s8E!/huiuY!rsFY#QF`*J3UgSrr3)9J%u<errIWTr;QeJ#Q4T&J-Z#P!It^YrrE*1r;Qct&,cG.!"]#-
!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrE*1r;QeJ&,cG.J.MSX!ItFQ
rrIWTr;QeJ#Q4T&^^'f;!Pes<rrM$[rVlr:huirX!lNpurVlr:n,`Lf!e^7KrVlqSp]19m!XJW'rVls1
rW%F/s8W'/rW%HJs8F,?!'gM`r#brh+92B95QAM@s8VS<s54Ffs5<qWn-B!n_>jQ5!WW0%s8W&uJ,BQN
rr[cni",he"5j.Z5Q:Zap](<lrr[c^s8RT~>

%%EndBinary
grestore
np
f
188.889 385.388 mo
195.489 385.388 li
195.489 377.348 li
188.889 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 14.8255 -35.6715 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
202.449 385.388 mo
210.129 385.388 li
210.129 377.348 li
202.449 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.68 0 0 8.04 28.3854 -35.6715 ]ct
<<
/T 1
/W 64 
/H 67 
/M[64 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"98Dj!W2lu!!",>rr`#r!!iK&"7QQj!WE$$^jl=`J,]HNJcGb#5Q:[W#QOh>+92B?&-)[f&-)\-+92B1
#QOi%&-)\)"98Dr"98Dr!WW2p!WW2t!WW2h!<<)s!<<)g!.Y%J!<<)g!.Y%J!.Y%<!.Y%J!.Ppen,Rt<
rW%HJn,Rt<rr>:`n,Rt<rr>:`p]1<n"9:[dquQfs"9:[drWE0"!<>@]rrE*aqu6Zs5PtH]!'gA\!<>@]
rrE*ar;Qin!'gG^"5j.Z5Q:Z_rr)lt5Q:Z_i;N]V5Q:Zb!!*$!4$WcFqu@9-!'gM`n,Rt<!'gM`^]FK8
!'gM`J-Z,S!'gM`!$D7@!'gM_!'gM`!'gM]!.Y%K!'gMY!<3!$!'gMQ!WN*%!'gMA"9/<'!'gMA"9/<'
!'gM!#QF`+!'gL6#QF`+!'ft'&,uS3!'ft'&,uS3!'frQ&,uS3!'frQ+9)9C!'frQ+9):X!'frQ+92B?
!'frQ+92B?!'frQ+92B?!'frQ+92B=!'frQ+92B=!'frQ&-)\)!'ft'&-)\)J3WOR#QOhn^`VON#QOh_
^`VOn"98D]^`VP)!WW1Pi"*a#!<<'(n,ipn!'gAln,O"!!"\!#5PtL's1eU7J,TF4s6p!hs8RWKrrIW\
rVqB~>

%%EndBinary
grestore
np
f
210.849 388.508 mo
219.249 388.508 li
219.249 377.468 li
210.849 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.4 0 0 11.04 36.7854 -38.7915 ]ct
<<
/T 1
/W 70 
/H 92 
/M[70 0 0 -92 0 92 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"onT-s1em=s&8[m#Q=]'J,fNK!!i9!!$D7@!!!8^+5dD(rr<$(JH,BFs8N'!#6Y#*!<<'!!!Wu6rr>:`
rr<0Ds8RTks8Tk75QCc!&-)[f!.Y%Ki!9;^huNcV"n2Wos53qWrrqlms8V!Xrr3/s!WW2X"9/<&p]1?o
!T44^rrr<#J,eF3rr30"!.Y%,#QF`,rW#1_i!98]"o\KDs54.\rr`<Ds54.\rr`<Ds54.\rr`<4s54.\
rrdi_s54.\rrdiWs54.\rrdiWs54.\rrdiWs54.\rrdiWs54.\rrg+Bs54.\rr^%=s53k^rVm#9"979a
rVm#9"979arVm#9"979arVm#9"979arVm#9"979arVm#9"979arVm#9"979arVm#9"979arVm#9"979a
rVm#9"979arVm#9"979arVm"N#QN]erVm"N#QN]erVm"N#QN]erVm"N#QN]erVm"N&-(PmrVm!#&-(Pm
rVm!#&-(PmrVm!#+917(rr30$!$D7!#QF`,rW#1_i!98]"o\Kds54.]rrr<#J,eF/rr30"!.Y%,"9/<(
p]1?ohuWiW"n2Qms53qWrrqlos8V!Wrr32\#QOh^!.Q?qs1f0Fs53lAs8TkVs8V![+92?@5QCcA"qUb5
!.Y%Ki!0MequH`r"lKW:s6p-irrq<c^d!>[rr3/[#Oh]n5Q:Zci!9/[!<)p#i!9:4&,lM/i!9,Y!T44Z
rrM$_qYpTS#Q"H&i!9;^r;QfU#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$
i!9,Y!T44ZrrM$_qYpTS#Q"H$i!98]rVlo6"8`&t!;lfp!;ulq!;ulq!;ulq!;ulq!;ukI~>

%%EndBinary
grestore
np
f
220.449 388.508 mo
228.849 388.508 li
228.849 377.468 li
220.449 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.4 0 0 11.04 46.3854 -38.7915 ]ct
<<
/T 1
/W 70 
/H 92 
/M[70 0 0 -92 0 92 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"onT-s1em=s&8[m#Q=]'J,fNK!!i9!!$D7@!!!8^+5dD(rr<$(JH,BFs8N'!#6Y#*!<<'!!!Wu6rr>:`
rr<0Ds8RTks8Tk75QCc!&-)[f!.Y%Ki!9;^huNcV"n2Wos53qWrrqlms8V!Xrr3/s!WW2X"9/<&p]1?o
!T44^rrr<#J,eF3rr30"!.Y%,#QF`,rW#1_i!98]"o\KDs54.\rr`<Ds54.\rr`<Ds54.\rr`<4s54.\
rrdi_s54.\rrdiWs54.\rrdiWs54.\rrdiWs54.\rrdiWs54.\rrg+Bs54.\rr^%=s53k^rVm#9"979a
rVm#9"979arVm#9"979arVm#9"979arVm#9"979arVm#9"979arVm#9"979arVm#9"979arVm#9"979a
rVm#9"979arVm#9"979arVm"N#QN]erVm"N#QN]erVm"N#QN]erVm"N#QN]erVm"N&-(PmrVm!#&-(Pm
rVm!#&-(PmrVm!#+917(rr30$!$D7!#QF`,rW#1_i!98]"o\Kds54.]rrr<#J,eF/rr30"!.Y%,"9/<(
p]1?ohuWiW"n2Qms53qWrrqlos8V!Wrr32\#QOh^!.Q?qs1f0Fs53lAs8TkVs8V![+92?@5QCcA"qUb5
!.Y%Ki!0MequH`r"lKW:s6p-irrq<c^d!>[rr3/[#Oh]n5Q:Zci!9/[!<)p#i!9:4&,lM/i!9,Y!T44Z
rrM$_qYpTS#Q"H&i!9;^r;QfU#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$
i!9,Y!T44ZrrM$_qYpTS#Q"H$i!98]rVlo6"8`&t!;lfp!;ulq!;ulq!;ulq!;ulq!;ukI~>

%%EndBinary
grestore
np
f
230.049 385.148 mo
235.809 385.148 li
235.809 377.468 li
230.049 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.76 0 0 7.68 55.9854 -35.4315 ]ct
<<
/T 1
/W 48 
/H 64 
/M[48 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
@fQE<rrE)o!"\i)*rl9On,Nt!!"\"8#64`7_tX<6!"XkS!<<*1&)[He!"L+/!<7QZ5MuPA^^NHc!<:sc
J)C>,i!=hj!<:s_s6p'hhuNfP"979[s83-%huWlW&-(PgrVloV!WE$!huirX!T4(YrrM$[rVloV"9&6#
huirX!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\
!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z&huF#\rrM$_rVloV#Q=Z'i!95\!T44]rrM$_
rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'^]XQ8rrE&ur;Zj?s8;ou
+929>!?_@?!!+2ArW!!"+9-i~>

%%EndBinary
grestore
np
f
236.769 385.388 mo
244.329 385.388 li
244.329 377.348 li
236.769 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.56 0 0 8.04 62.7054 -35.6715 ]ct
<<
/T 1
/W 63 
/H 67 
/M[63 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3#7#Q4T(qu?_HrVluh!!",>rr^%Yn-Apl!s&B#!WN*Qqud!!J:IV!p]pj!^d%l!n.5R!i#i"!i#i"!
n.5R!^d%l!p]pj!J:IV!qud!!!<3!$rW3&u!<3!$rW)ur!WE$#!.XnIrVls"J+s-Err@QN5PP?Zrr[d9
n,rXh"+VK_#Q=Z)^`VJ>rVlu8&)[]krr^%I^^'i<"2G/W&,lM1i!7%.rVluX#Cm?`rr_0]J.MVY"5j93
&,lM1hueK?rVluX!rrl1rr_0[!"]&."5j1[&,lM1huNfgrVluX!<<Z/rr_0[!"]&."5j1[&,lM1huNfg
rVluX!<<Z/rr_0[!"]&."5j1[&,lM1huNfgrVluX!It^Zrr_0]J.MVY"5j93&,lM1hueK?rVluX"2G0?
rr^%A^^'i<"2G/W#Q=Z)^^&d&rr3-$^^o?.rVlu8&+B]"rr[cnn,rXh"+VKg"9&6%J3Wf0rVls"5PtQ\
rrW7NrW)rt"TAE$rW)rt1&_1Qrr@QKs82ots+!?6s7c]rs1f`Vs6p9ns54Ffs54Ffs7cj!s1gl!s82ot
rr@QJrrW7NquQcr!Iu6mn,rXh"5j.Z&,lM1qu?_Hr;Qf5#QFaR~>

%%EndBinary
grestore
np
f
244.689 385.148 mo
253.209 385.148 li
253.209 377.708 li
244.689 377.708 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 7.44 70.6254 -35.4315 ]ct
<<
/T 1
/W 71 
/H 62 
/M[71 0 0 -62 0 62 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rW!*,s53kW#Q=],#QN]^!!iK'"UG(c!!!9'!!NW-huE`^rW";Ns53kW#QK;S+92*9!<<)W!.Y%H!"],0
p],gDrW#1_s7cTos8E#trrr<#J,fKKrr30$!'gM_#Q=Z*!'gM_&,lM2J04gh+8u3BJ.M\X+9)9Ds1em>
pcn`W"Q0Obn:1E:"7QEmi;ETWn,`R*r;Qlo!<9n5rr`0!s+C7L"9&:M#Q4T(rW#+mqu6]t*"VrH!e;74
qu6`5#XA4d!l+ecqu6]T!;c]rn,W@c!rr#rqYpTk!;c]squD6DrrW0"5PtH^rW#1[rrW)u+8c'>p](j%
rrV[T#Q+N&i*ZferrV-J"8i*"_=.L&rrRiJ!;lct#Q+T!rrWN*!.XtI!<*'2rW#1]rri6Arr=/>rri*]
s*u3irrhh@s1f0Drrhh@s1em<rrh9[s54"Xrrg1<s6p-hrrduSs7cWnrr`H(s7cTns"F?Rs8VusJ,fQH
#QOi'!.Y%Kp]pj!rW#1_s54"Zs8E!?s8RTOs8W&u#QOQ!!WN<&p](?prW!+Os1eU7!WE'&J,d:a!!3'!
"b6Qf!!!'!!!RlP^]4?8rW!+Os1eU7!It~>

%%EndBinary
grestore
np
f
254.049 385.148 mo
257.769 385.148 li
257.769 373.508 li
254.049 373.508 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[3.72 0 0 11.64 79.9854 -35.4315 ]ct
<<
/T 1
/W 31 
/H 97 
/M[31 0 0 -97 0 97 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!WV*Ws"o6js8N'@s8E!/s8E!/s82j%s82j%s82j%s82j%s82j%s8E!/s8E!/s8N'@s8RU6s8V#is8)b>
#QO]%#QK;S#QK;S#QK;S#QK;S#QK;S#QOc'#QOgS#QOh>#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^
#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^E<lODi!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^^]XW:!!3-!!!!'!!!!'!!!**#!WW3$rVup!
J,~>

%%EndBinary
grestore
np
f
258.849 385.148 mo
272.289 385.148 li
272.289 377.468 li
258.849 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[13.44 0 0 7.68 84.7854 -35.4315 ]ct
<<
/T 1
/W 112 
/H 64 
/M[112 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"onQ4s6p'grrMTirr6s4!"]*[!$D7@J,g\krr<$0rVup's8Duu#QOf(!"\i0n,r^c#Ohiqrr<$0n3?gO
s6r8N!WW0"!"\#frW)uVs8E#urr<$0_uK`:J&D<d!.Y%J!"Xkbs+!=hs8RU6s8RT[&-)Z[*tSDOJ04gk
3PZ+Hs8TkU+92AV+92B!$pXdl^^NI-s1f0Fs54<8s8TkCJ,fPa&-)[f#_2mS^^,Gis1f0Fs541^rrM$`
rr3/[&-)[f!<3!!huNcV"lKXcs53qWrrM$Yrr3/[#QOh^!WN*"huWiW"lKXcs54"YrrM$[rr3,Z#QOh^
!!E6#!T4(Zrrq<cs8V!Zrr3#W"9/<(i!9;^huiuY!T4(Zrrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^
rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^
rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,
i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`-i!9;^i!98a
s8V!^rr3/[#QOh^#QF`(i!98]"lKXcs54.]rrM$_rr3/[#QOh^#QF`(i!98]"lKXcs54.]rrM$_rr3/[
#QOh^#QF`(i!98]"lKXcs54.]rrM$_rr3/[#QOh^#QF`(i!98]"lKXcs54.]rrM$_rr35]#QOh^#QOf*
s54.]rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<c
s8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W
#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,i!9;^^]XT9!Peg:rrp1?s8N'!rr;uurr3$"!<;ut
!<;ut!<;ip!<;ut!<;ip!<;ut!<;ip!<;ut!<;ip!ri6#!WW6#r;_?~>

%%EndBinary
grestore
np
f
273.489 385.388 mo
281.169 385.388 li
281.169 377.348 li
273.489 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.68 0 0 8.04 99.4254 -35.6715 ]ct
<<
/T 1
/W 64 
/H 67 
/M[64 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"98Dj!W2lu!!",>rr`#r!!iK&"7QQj!WE$$^jl=`J,]HNJcGb#5Q:[W#QOh>+92B?&-)[f&-)\-+92B1
#QOi%&-)\)"98Dr"98Dr!WW2p!WW2t!WW2h!<<)s!<<)g!.Y%J!<<)g!.Y%J!.Y%<!.Y%J!.Ppen,Rt<
rW%HJn,Rt<rr>:`n,Rt<rr>:`p]1<n"9:[dquQfs"9:[drWE0"!<>@]rrE*aqu6Zs5PtH]!'gA\!<>@]
rrE*ar;Qin!'gG^"5j.Z5Q:Z_rr)lt5Q:Z_i;N]V5Q:Zb!!*$!4$WcFqu@9-!'gM`n,Rt<!'gM`^]FK8
!'gM`J-Z,S!'gM`!$D7@!'gM_!'gM`!'gM]!.Y%K!'gMY!<3!$!'gMQ!WN*%!'gMA"9/<'!'gMA"9/<'
!'gM!#QF`+!'gL6#QF`+!'ft'&,uS3!'ft'&,uS3!'frQ&,uS3!'frQ+9)9C!'frQ+9):X!'frQ+92B?
!'frQ+92B?!'frQ+92B?!'frQ+92B=!'frQ+92B=!'frQ&-)\)!'ft'&-)\)J3WOR#QOhn^`VON#QOh_
^`VOn"98D]^`VP)!WW1Pi"*a#!<<'(n,ipn!'gAln,O"!!"\!#5PtL's1eU7J,TF4s6p!hs8RWKrrIW\
rVqB~>

%%EndBinary
grestore
np
f
281.769 385.388 mo
287.049 385.388 li
287.049 374.588 li
281.769 374.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.28 0 0 10.8 107.705 -35.6715 ]ct
<<
/T 1
/W 44 
/H 90 
/M[44 0 0 -90 0 90 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr;<r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;QbLr;QbLr;QbLr;QbLr;QbLr;Qa!r;Qa!r;Qa!rVlot
"9&6#rWE-!!W3&urrN$"rVlon"9&6#p]LKp!Up3irrM$[rVlo6"9&6#J-5cM!<<6$rrDuq!!,=Rr;Zg^
qu?^]qu?^]qu?g`s6p-hrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof
"9&6"n,NRhrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh
!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh#Ohiqrt#/!"+L:M&-),$s8NW0n,r^j
&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-)D,
s8EQ/p]:Eo+92*:s8F,?p]:Eo+926>s83u=quHcp5QC]_s85+]rr@QDJ,fP!56gV,s8TkVi;W`Xi!4i4
rrVZi"9/<%qu@!#rrTtXs*t~>

%%EndBinary
grestore
np
f
288.609 385.148 mo
292.329 385.148 li
292.329 373.508 li
288.609 373.508 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[3.72 0 0 11.64 114.545 -35.4315 ]ct
<<
/T 1
/W 31 
/H 97 
/M[31 0 0 -97 0 97 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!WV*Ws"o6js8N'@s8E!/s8E!/s82j%s82j%s82j%s82j%s82j%s8E!/s8E!/s8N'@s8RU6s8V#is8)b>
#QO]%#QK;S#QK;S#QK;S#QK;S#QK;S#QOc'#QOgS#QOh>#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^
#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^E<lODi!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^^]XW:!!3-!!!!'!!!!'!!!**#!WW3$rVup!
J,~>

%%EndBinary
grestore
np
f
293.289 385.388 mo
300.849 385.388 li
300.849 377.348 li
293.289 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.56 0 0 8.04 119.225 -35.6715 ]ct
<<
/T 1
/W 63 
/H 67 
/M[63 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3#7#Q4T(qu?_HrVluh!!",>rr^%Yn-Apl!s&B#!WN*Qqud!!J:IV!p]pj!^d%l!n.5R!i#i"!i#i"!
n.5R!^d%l!p]pj!J:IV!qud!!!<3!$rW3&u!<3!$rW)ur!WE$#!.XnIrVls"J+s-Err@QN5PP?Zrr[d9
n,rXh"+VK_#Q=Z)^`VJ>rVlu8&)[]krr^%I^^'i<"2G/W&,lM1i!7%.rVluX#Cm?`rr_0]J.MVY"5j93
&,lM1hueK?rVluX!rrl1rr_0[!"]&."5j1[&,lM1huNfgrVluX!<<Z/rr_0[!"]&."5j1[&,lM1huNfg
rVluX!<<Z/rr_0[!"]&."5j1[&,lM1huNfgrVluX!It^Zrr_0]J.MVY"5j93&,lM1hueK?rVluX"2G0?
rr^%A^^'i<"2G/W#Q=Z)^^&d&rr3-$^^o?.rVlu8&+B]"rr[cnn,rXh"+VKg"9&6%J3Wf0rVls"5PtQ\
rrW7NrW)rt"TAE$rW)rt1&_1Qrr@QKs82ots+!?6s7c]rs1f`Vs6p9ns54Ffs54Ffs7cj!s1gl!s82ot
rr@QJrrW7NquQcr!Iu6mn,rXh"5j.Z&,lM1qu?_Hr;Qf5#QFaR~>

%%EndBinary
grestore
np
f
302.049 385.148 mo
310.569 385.148 li
310.569 377.468 li
302.049 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 7.68 127.985 -35.4315 ]ct
<<
/T 1
/W 71 
/H 64 
/M[71 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"onQ4s6p'gs).T3&-%.[5QC``!"]&/!"],0!!!Q)#N,^arr<$0n3?[Ks8N'!&)dKe!<<'!!"[!IrW)uu
rW!Ias8N(Ks8RT[&-)Y05QCc!%Nk`NJ3X)6i!_jMs*u3ks54<8s8RTks8V!_J,fP!+92B!#lai+^`WUV
!T3tWrrp1Ks8V!Xrr3/;&-)[f!WN*&^^pJFhuiuY"i(ZKs54"Yrrp1Ks8V!Zrr3/;&-)[f"9/<(^^pJF
i!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3,:&-)[f
!!iN'"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f
#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^
rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]
rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`-^^pJFi!98e
s8TkFs8Tk:rr3@V#QOf(!<<)u!!3,u!!*#t!!!&u!!*#t!!!&u!!*#t!!!&u!!*#t!!!&u!!*#t!!!%M
~>

%%EndBinary
grestore
np
f
317.049 385.148 mo
320.769 385.148 li
320.769 373.508 li
317.049 373.508 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[3.72 0 0 11.64 142.985 -35.4315 ]ct
<<
/T 1
/W 31 
/H 97 
/M[31 0 0 -97 0 97 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!WV*Ws"o6js8N'@s8E!/s8E!/s82j%s82j%s82j%s82j%s82j%s8E!/s8E!/s8N'@s8RU6s8V#is8)b>
#QO]%#QK;S#QK;S#QK;S#QK;S#QK;S#QOc'#QOgS#QOh>#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^
#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^E<lODi!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^^]XW:!!3-!!!!'!!!!'!!!**#!WW3$rVup!
J,~>

%%EndBinary
grestore
np
f
321.849 385.388 mo
327.369 385.388 li
327.369 377.348 li
321.849 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.52 0 0 8.04 147.786 -35.6715 ]ct
<<
/T 1
/W 46 
/H 67 
/M[46 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
2ZNdW&-!aOn,NIf+90+V!'DA'!.WoD+8c6@qu@i6&-)Y0+7MMps1f`7J,fQ,+5hYKs55!7rr3&h+2ImU
!r*jgrr3&p++aFk!rO,@rr3&t*s)B@!rO,@rr3&t*s)B@!ra8Arr3'!*ru<?%fROMJ,fQJ*rnP*s8F)?
"s<mFrZ?Y$rVlnK"9&6$J,k)urrTt9#QF`3^]4?Vs8V!W!!3-"nGWChJ,f<C!!48Br;HZt#QOf&!!rc-
s*t(L!WW2XrW!$"s7lQn!e:7MrW!-es8Vio!$D4?!l+dHrr3&t!"]&.!<<B'rrR]UO8f.]i!0em"TSMk
!tYD2!r)j&rr3&p!sei*!rN-*rr3&t!sei*!rN-&rr3'!!sAQ&!r`9(rr3'!!s/E$!r`9&rr3'!#6Fi(
!r`E)rr3&t#6=c'0)Q4[J,fQH%feios7dZ95QCcY*rmD_s6r5Q#QOh^IfP-$s+(+M_#OB7rr_1$'^uA-
#P\9!&-!1>!!%NK+90+Ys8RT~>

%%EndBinary
grestore
np
f
334.449 385.148 mo
347.889 385.148 li
347.889 377.468 li
334.449 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[13.44 0 0 7.68 160.385 -35.4315 ]ct
<<
/T 1
/W 112 
/H 64 
/M[112 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"onQ4s6p'grrMTirr6s4!"]*[!$D7@J,g\krr<$0rVup's8Duu#QOf(!"\i0n,r^c#Ohiqrr<$0n3?gO
s6r8N!WW0"!"\#frW)uVs8E#urr<$0_uK`:J&D<d!.Y%J!"Xkbs+!=hs8RU6s8RT[&-)Z[*tSDOJ04gk
3PZ+Hs8TkU+92AV+92B!$pXdl^^NI-s1f0Fs54<8s8TkCJ,fPa&-)[f#_2mS^^,Gis1f0Fs541^rrM$`
rr3/[&-)[f!<3!!huNcV"lKXcs53qWrrM$Yrr3/[#QOh^!WN*"huWiW"lKXcs54"YrrM$[rr3,Z#QOh^
!!E6#!T4(Zrrq<cs8V!Zrr3#W"9/<(i!9;^huiuY!T4(Zrrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^
rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^
rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,
i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`-i!9;^i!98a
s8V!^rr3/[#QOh^#QF`(i!98]"lKXcs54.]rrM$_rr3/[#QOh^#QF`(i!98]"lKXcs54.]rrM$_rr3/[
#QOh^#QF`(i!98]"lKXcs54.]rrM$_rr3/[#QOh^#QF`(i!98]"lKXcs54.]rrM$_rr35]#QOh^#QOf*
s54.]rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<c
s8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W
#QF`,i!9;^i!98]!T44^rrq<cs8V!^rr3#W#QF`,i!9;^^]XT9!Peg:rrp1?s8N'!rr;uurr3$"!<;ut
!<;ut!<;ip!<;ut!<;ip!<;ut!<;ip!<;ut!<;ip!ri6#!WW6#r;_?~>

%%EndBinary
grestore
np
f
348.849 385.388 mo
356.409 385.388 li
356.409 377.348 li
348.849 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.56 0 0 8.04 174.785 -35.6715 ]ct
<<
/T 1
/W 63 
/H 67 
/M[63 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3#7#Q4T(qu?_HrVluh!!",>rr^%Yn-Apl!s&B#!WN*Qqud!!J:IV!p]pj!^d%l!n.5R!i#i"!i#i"!
n.5R!^d%l!p]pj!J:IV!qud!!!<3!$rW3&u!<3!$rW)ur!WE$#!.XnIrVls"J+s-Err@QN5PP?Zrr[d9
n,rXh"+VK_#Q=Z)^`VJ>rVlu8&)[]krr^%I^^'i<"2G/W&,lM1i!7%.rVluX#Cm?`rr_0]J.MVY"5j93
&,lM1hueK?rVluX!rrl1rr_0[!"]&."5j1[&,lM1huNfgrVluX!<<Z/rr_0[!"]&."5j1[&,lM1huNfg
rVluX!<<Z/rr_0[!"]&."5j1[&,lM1huNfgrVluX!It^Zrr_0]J.MVY"5j93&,lM1hueK?rVluX"2G0?
rr^%A^^'i<"2G/W#Q=Z)^^&d&rr3-$^^o?.rVlu8&+B]"rr[cnn,rXh"+VKg"9&6%J3Wf0rVls"5PtQ\
rrW7NrW)rt"TAE$rW)rt1&_1Qrr@QKs82ots+!?6s7c]rs1f`Vs6p9ns54Ffs54Ffs7cj!s1gl!s82ot
rr@QJrrW7NquQcr!Iu6mn,rXh"5j.Z&,lM1qu?_Hr;Qf5#QFaR~>

%%EndBinary
grestore
np
f
357.489 385.148 mo
363.249 385.148 li
363.249 377.468 li
357.489 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.76 0 0 7.68 183.426 -35.4315 ]ct
<<
/T 1
/W 48 
/H 64 
/M[48 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
@fQE<rrE)o!"\i)*rl9On,Nt!!"\"8#64`7_tX<6!"XkS!<<*1&)[He!"L+/!<7QZ5MuPA^^NHc!<:sc
J)C>,i!=hj!<:s_s6p'hhuNfP"979[s83-%huWlW&-(PgrVloV!WE$!huirX!T4(YrrM$[rVloV"9&6#
huirX!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\
!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z&huF#\rrM$_rVloV#Q=Z'i!95\!T44]rrM$_
rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'^]XQ8rrE&ur;Zj?s8;ou
+929>!?_@?!!+2ArW!!"+9-i~>

%%EndBinary
grestore
np
f
364.209 385.388 mo
370.809 385.388 li
370.809 377.348 li
364.209 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 190.146 -35.6715 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
377.649 385.388 mo
385.329 385.388 li
385.329 377.348 li
377.649 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.68 0 0 8.04 203.585 -35.6715 ]ct
<<
/T 1
/W 64 
/H 67 
/M[64 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"98Dj!W2lu!!",>rr`#r!!iK&"7QQj!WE$$^jl=`J,]HNJcGb#5Q:[W#QOh>+92B?&-)[f&-)\-+92B1
#QOi%&-)\)"98Dr"98Dr!WW2p!WW2t!WW2h!<<)s!<<)g!.Y%J!<<)g!.Y%J!.Y%<!.Y%J!.Ppen,Rt<
rW%HJn,Rt<rr>:`n,Rt<rr>:`p]1<n"9:[dquQfs"9:[drWE0"!<>@]rrE*aqu6Zs5PtH]!'gA\!<>@]
rrE*ar;Qin!'gG^"5j.Z5Q:Z_rr)lt5Q:Z_i;N]V5Q:Zb!!*$!4$WcFqu@9-!'gM`n,Rt<!'gM`^]FK8
!'gM`J-Z,S!'gM`!$D7@!'gM_!'gM`!'gM]!.Y%K!'gMY!<3!$!'gMQ!WN*%!'gMA"9/<'!'gMA"9/<'
!'gM!#QF`+!'gL6#QF`+!'ft'&,uS3!'ft'&,uS3!'frQ&,uS3!'frQ+9)9C!'frQ+9):X!'frQ+92B?
!'frQ+92B?!'frQ+92B?!'frQ+92B=!'frQ+92B=!'frQ&-)\)!'ft'&-)\)J3WOR#QOhn^`VON#QOh_
^`VOn"98D]^`VP)!WW1Pi"*a#!<<'(n,ipn!'gAln,O"!!"\!#5PtL's1eU7J,TF4s6p!hs8RWKrrIW\
rVqB~>

%%EndBinary
grestore
np
f
386.169 385.388 mo
392.649 385.388 li
392.649 377.348 li
386.169 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.48 0 0 8.04 212.105 -35.6715 ]ct
<<
/T 1
/W 54 
/H 67 
/M[54 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3"L&,lM0p](<mrr_0Z!$D4?B7M)^&-)\/!.XtMs8Vuts8RZMs7cj!s5<qWi",kfn:1JR+92B95Q?6u
s8VRQrr>:`s1f`V!.Y%KJ04ajJ,fNK&,ZG-s8E!/p]1?orW!K(!WW3!!"\Q"s8W&u&+B]$s8E!/i!0Aa
s8E!/huiuY!rsFY#QF`*J3UgSrr3)9J%u<errIWTr;QeJ#Q4T&J-Z#P!It^YrrE*1r;Qct&,cG.!"]#-
!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrE*1r;QeJ&,cG.J.MSX!ItFQ
rrIWTr;QeJ#Q4T&^^'f;!Pes<rrM$[rVlr:huirX!lNpurVlr:n,`Lf!e^7KrVlqSp]19m!XJW'rVls1
rW%F/s8W'/rW%HJs8F,?!'gM`r#brh+92B95QAM@s8VS<s54Ffs5<qWn-B!n_>jQ5!WW0%s8W&uJ,BQN
rr[cni",he"5j.Z5Q:Zap](<lrr[c^s8RT~>

%%EndBinary
grestore
np
f
393.849 385.388 mo
400.329 385.388 li
400.329 377.348 li
393.849 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.48 0 0 8.04 219.785 -35.6715 ]ct
<<
/T 1
/W 54 
/H 67 
/M[54 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3"L&,lM0p](<mrr_0Z!$D4?B7M)^&-)\/!.XtMs8Vuts8RZMs7cj!s5<qWi",kfn:1JR+92B95Q?6u
s8VRQrr>:`s1f`V!.Y%KJ04ajJ,fNK&,ZG-s8E!/p]1?orW!K(!WW3!!"\Q"s8W&u&+B]$s8E!/i!0Aa
s8E!/huiuY!rsFY#QF`*J3UgSrr3)9J%u<errIWTr;QeJ#Q4T&J-Z#P!It^YrrE*1r;Qct&,cG.!"]#-
!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrE*1r;QeJ&,cG.J.MSX!ItFQ
rrIWTr;QeJ#Q4T&^^'f;!Pes<rrM$[rVlr:huirX!lNpurVlr:n,`Lf!e^7KrVlqSp]19m!XJW'rVls1
rW%F/s8W'/rW%HJs8F,?!'gM`r#brh+92B95QAM@s8VS<s54Ffs5<qWn-B!n_>jQ5!WW0%s8W&uJ,BQN
rr[cni",he"5j.Z5Q:Zap](<lrr[c^s8RT~>

%%EndBinary
grestore
np
f
401.529 385.388 mo
410.049 385.388 li
410.049 377.468 li
401.529 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 7.92 227.465 -35.6715 ]ct
<<
/T 1
/W 71 
/H 66 
/M[71 0 0 -66 0 66 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr9*rr5Cc&-)D)#QOhn!"])0!!iQ'!!!Q0!!!9(rVup/rr<$(s8Duu&,uV0#QOc'!"])0!!iQ'!!!Q0
rW!3's82j-s8RTSrr3-%&-)[F#QF`,J.M\[i!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`*^^pJF
!T44^rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJF
i!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3,:&-)[f
!!iN'"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f
#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^
rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3.P&-)[f#QF`,J.M\[i!98]"b7-`s54.]
rrmo`s8V!^rr3-%&-)[f#QF`,!"],0n-Asm+TN&Qs6p9ns8E!/s8VQns8W&u&-)\!"98E!!"],0p]LOi
s7ehas8Virs8Vl0"98E!!WW2h^]=E7rW3'!iP5Eos8N*!s+A)e!WW1M5Q:u(!!3-"^^'WF^]4E8s6p!g
5JR7"s8Vus!.Vca5Q:Zd^]XVQs8RT~>

%%EndBinary
grestore
np
f
411.009 385.148 mo
416.769 385.148 li
416.769 377.468 li
411.009 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.76 0 0 7.68 236.945 -35.4315 ]ct
<<
/T 1
/W 48 
/H 64 
/M[48 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
@fQE<rrE)o!"\i)*rl9On,Nt!!"\"8#64`7_tX<6!"XkS!<<*1&)[He!"L+/!<7QZ5MuPA^^NHc!<:sc
J)C>,i!=hj!<:s_s6p'hhuNfP"979[s83-%huWlW&-(PgrVloV!WE$!huirX!T4(YrrM$[rVloV"9&6#
huirX!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\
!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z&huF#\rrM$_rVloV#Q=Z'i!95\!T44]rrM$_
rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'^]XQ8rrE&ur;Zj?s8;ou
+929>!?_@?!!+2ArW!!"+9-i~>

%%EndBinary
grestore
np
f
417.969 385.388 mo
425.649 385.388 li
425.649 377.348 li
417.969 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.68 0 0 8.04 243.905 -35.6715 ]ct
<<
/T 1
/W 64 
/H 67 
/M[64 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"98Dj!W2lu!!",>rr`#r!!iK&"7QQj!WE$$^jl=`J,]HNJcGb#5Q:[W#QOh>+92B?&-)[f&-)\-+92B1
#QOi%&-)\)"98Dr"98Dr!WW2p!WW2t!WW2h!<<)s!<<)g!.Y%J!<<)g!.Y%J!.Y%<!.Y%J!.Ppen,Rt<
rW%HJn,Rt<rr>:`n,Rt<rr>:`p]1<n"9:[dquQfs"9:[drWE0"!<>@]rrE*aqu6Zs5PtH]!'gA\!<>@]
rrE*ar;Qin!'gG^"5j.Z5Q:Z_rr)lt5Q:Z_i;N]V5Q:Zb!!*$!4$WcFqu@9-!'gM`n,Rt<!'gM`^]FK8
!'gM`J-Z,S!'gM`!$D7@!'gM_!'gM`!'gM]!.Y%K!'gMY!<3!$!'gMQ!WN*%!'gMA"9/<'!'gMA"9/<'
!'gM!#QF`+!'gL6#QF`+!'ft'&,uS3!'ft'&,uS3!'frQ&,uS3!'frQ+9)9C!'frQ+9):X!'frQ+92B?
!'frQ+92B?!'frQ+92B?!'frQ+92B=!'frQ+92B=!'frQ&-)\)!'ft'&-)\)J3WOR#QOhn^`VON#QOh_
^`VOn"98D]^`VP)!WW1Pi"*a#!<<'(n,ipn!'gAln,O"!!"\!#5PtL's1eU7J,TF4s6p!hs8RWKrrIW\
rVqB~>

%%EndBinary
grestore
np
f
426.249 385.388 mo
431.529 385.388 li
431.529 374.588 li
426.249 374.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.28 0 0 10.8 252.185 -35.6715 ]ct
<<
/T 1
/W 44 
/H 90 
/M[44 0 0 -90 0 90 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr;<r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;QbLr;QbLr;QbLr;QbLr;QbLr;Qa!r;Qa!r;Qa!rVlot
"9&6#rWE-!!W3&urrN$"rVlon"9&6#p]LKp!Up3irrM$[rVlo6"9&6#J-5cM!<<6$rrDuq!!,=Rr;Zg^
qu?^]qu?^]qu?g`s6p-hrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof
"9&6"n,NRhrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh
!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh#Ohiqrt#/!"+L:M&-),$s8NW0n,r^j
&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-)D,
s8EQ/p]:Eo+92*:s8F,?p]:Eo+926>s83u=quHcp5QC]_s85+]rr@QDJ,fP!56gV,s8TkVi;W`Xi!4i4
rrVZi"9/<%qu@!#rrTtXs*t~>

%%EndBinary
grestore
np
f
433.089 385.388 mo
439.689 385.388 li
439.689 377.348 li
433.089 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 259.025 -35.6715 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
446.289 385.388 mo
451.569 385.388 li
451.569 374.588 li
446.289 374.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.28 0 0 10.8 272.225 -35.6715 ]ct
<<
/T 1
/W 44 
/H 90 
/M[44 0 0 -90 0 90 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr;<r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;QbLr;QbLr;QbLr;QbLr;QbLr;Qa!r;Qa!r;Qa!rVlot
"9&6#rWE-!!W3&urrN$"rVlon"9&6#p]LKp!Up3irrM$[rVlo6"9&6#J-5cM!<<6$rrDuq!!,=Rr;Zg^
qu?^]qu?^]qu?g`s6p-hrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof
"9&6"n,NRhrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh
!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh#Ohiqrt#/!"+L:M&-),$s8NW0n,r^j
&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-)D,
s8EQ/p]:Eo+92*:s8F,?p]:Eo+926>s83u=quHcp5QC]_s85+]rr@QDJ,fP!56gV,s8TkVi;W`Xi!4i4
rrVZi"9/<%qu@!#rrTtXs*t~>

%%EndBinary
grestore
np
f
453.249 385.148 mo
461.769 385.148 li
461.769 373.148 li
453.249 373.148 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 12 279.185 -35.4315 ]ct
<<
/T 1
/W 71 
/H 100 
/M[71 0 0 -100 0 100 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr9*qu6`m!!iE$!WW3*qu6]t!!iE$!WW3*qu6]t!!iE$!WW3*qu6`s!!iB#!ItFOrrKn?qYpTS#Q"H$
i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y
!T44ZrrM$_qYpTS#Q"H$i!9,Y!8mh^qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44Zrrh6b
s6p'frrq<cs*t)6rr3/[#Q=]'&,uS4i!9#^huiuY"lKXT5PP9Yrrq<ci;`cVrr3#W#6VmDrW)rt2rFpr
s8N(Ks8V!^&-)Y05QCcA"s<mFJ3X)6hul:Es*u3ks54$0s8RTks8V!WJ,fP!+92B!!<3!%^`WUVhuNcV
"i(ZKs53qWrrp1Ks8V!Xrr3/;&-)[f"9/<(^^pJFhuiuY"i(ZKs54"Yrs$7Ls8V!Zrs/T(^^pJFi!98]
"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,
^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]#J^lMs54.^rs&M=&-)[f#QF`,
^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;
&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1K
s8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZK
s1ea9rsO>^s8N'!s8W&u!WW)u!<2rt!!3#u!<2rt!!3#u!<2rt!!3#u!r`0"!<<0!!!*#t!!!%M~>

%%EndBinary
grestore
np
f
462.969 385.388 mo
470.649 385.388 li
470.649 377.348 li
462.969 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.68 0 0 8.04 288.905 -35.6715 ]ct
<<
/T 1
/W 64 
/H 67 
/M[64 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"98Dj!W2lu!!",>rr`#r!!iK&"7QQj!WE$$^jl=`J,]HNJcGb#5Q:[W#QOh>+92B?&-)[f&-)\-+92B1
#QOi%&-)\)"98Dr"98Dr!WW2p!WW2t!WW2h!<<)s!<<)g!.Y%J!<<)g!.Y%J!.Y%<!.Y%J!.Ppen,Rt<
rW%HJn,Rt<rr>:`n,Rt<rr>:`p]1<n"9:[dquQfs"9:[drWE0"!<>@]rrE*aqu6Zs5PtH]!'gA\!<>@]
rrE*ar;Qin!'gG^"5j.Z5Q:Z_rr)lt5Q:Z_i;N]V5Q:Zb!!*$!4$WcFqu@9-!'gM`n,Rt<!'gM`^]FK8
!'gM`J-Z,S!'gM`!$D7@!'gM_!'gM`!'gM]!.Y%K!'gMY!<3!$!'gMQ!WN*%!'gMA"9/<'!'gMA"9/<'
!'gM!#QF`+!'gL6#QF`+!'ft'&,uS3!'ft'&,uS3!'frQ&,uS3!'frQ+9)9C!'frQ+9):X!'frQ+92B?
!'frQ+92B?!'frQ+92B?!'frQ+92B=!'frQ+92B=!'frQ&-)\)!'ft'&-)\)J3WOR#QOhn^`VON#QOh_
^`VOn"98D]^`VP)!WW1Pi"*a#!<<'(n,ipn!'gAln,O"!!"\!#5PtL's1eU7J,TF4s6p!hs8RWKrrIW\
rVqB~>

%%EndBinary
grestore
np
f
471.489 385.148 mo
480.009 385.148 li
480.009 377.468 li
471.489 377.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 7.68 297.425 -35.4315 ]ct
<<
/T 1
/W 71 
/H 64 
/M[71 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"onQ4s6p'gs).T3&-%.[5QC``!"]&/!"],0!!!Q)#N,^arr<$0n3?[Ks8N'!&)dKe!<<'!!"[!IrW)uu
rW!Ias8N(Ks8RT[&-)Y05QCc!%Nk`NJ3X)6i!_jMs*u3ks54<8s8RTks8V!_J,fP!+92B!#lai+^`WUV
!T3tWrrp1Ks8V!Xrr3/;&-)[f!WN*&^^pJFhuiuY"i(ZKs54"Yrrp1Ks8V!Zrr3/;&-)[f"9/<(^^pJF
i!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3,:&-)[f
!!iN'"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f
#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^
rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]
rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`-^^pJFi!98e
s8TkFs8Tk:rr3@V#QOf(!<<)u!!3,u!!*#t!!!&u!!*#t!!!&u!!*#t!!!&u!!*#t!!!&u!!*#t!!!%M
~>

%%EndBinary
grestore
np
f
486.369 385.388 mo
491.649 385.388 li
491.649 374.588 li
486.369 374.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.28 0 0 10.8 312.306 -35.6715 ]ct
<<
/T 1
/W 44 
/H 90 
/M[44 0 0 -90 0 90 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr;<r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;QbLr;QbLr;QbLr;QbLr;QbLr;Qa!r;Qa!r;Qa!rVlot
"9&6#rWE-!!W3&urrN$"rVlon"9&6#p]LKp!Up3irrM$[rVlo6"9&6#J-5cM!<<6$rrDuq!!,=Rr;Zg^
qu?^]qu?^]qu?g`s6p-hrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof
"9&6"n,NRhrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh
!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh#Ohiqrt#/!"+L:M&-),$s8NW0n,r^j
&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-)D,
s8EQ/p]:Eo+92*:s8F,?p]:Eo+926>s83u=quHcp5QC]_s85+]rr@QDJ,fP!56gV,s8TkVi;W`Xi!4i4
rrVZi"9/<%qu@!#rrTtXs*t~>

%%EndBinary
grestore
np
f
493.329 385.148 mo
501.849 385.148 li
501.849 373.148 li
493.329 373.148 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 12 319.265 -35.4315 ]ct
<<
/T 1
/W 71 
/H 100 
/M[71 0 0 -100 0 100 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr9*qu6`m!!iE$!WW3*qu6]t!!iE$!WW3*qu6]t!!iE$!WW3*qu6`s!!iB#!ItFOrrKn?qYpTS#Q"H$
i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y
!T44ZrrM$_qYpTS#Q"H$i!9,Y!8mh^qYpTS#Q"H$i!9,Y!T44ZrrM$_qYpTS#Q"H$i!9,Y!T44Zrrh6b
s6p'frrq<cs*t)6rr3/[#Q=]'&,uS4i!9#^huiuY"lKXT5PP9Yrrq<ci;`cVrr3#W#6VmDrW)rt2rFpr
s8N(Ks8V!^&-)Y05QCcA"s<mFJ3X)6hul:Es*u3ks54$0s8RTks8V!WJ,fP!+92B!!<3!%^`WUVhuNcV
"i(ZKs53qWrrp1Ks8V!Xrr3/;&-)[f"9/<(^^pJFhuiuY"i(ZKs54"Yrs$7Ls8V!Zrs/T(^^pJFi!98]
"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,
^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]#J^lMs54.^rs&M=&-)[f#QF`,
^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;
&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1K
s8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZK
s1ea9rsO>^s8N'!s8W&u!WW)u!<2rt!!3#u!<2rt!!3#u!<2rt!!3#u!r`0"!<<0!!!*#t!!!%M~>

%%EndBinary
grestore
np
f
502.809 385.388 mo
509.409 385.388 li
509.409 377.348 li
502.809 377.348 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 328.745 -35.6715 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
-67.1912 409.268 mo
-58.5512 409.268 li
-58.5512 397.028 li
-67.1912 397.028 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.64 0 0 12.24 -241.254 -59.5515 ]ct
<<
/T 1
/W 72 
/H 102 
/M[72 0 0 -102 0 102 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rVlof!;lcurVup?r;Qlg!!!9%rr^%=quQ`q!rsGC_#=9:quD6Hn:1H;"o&,us7ehXrrqlss8W!=rr3/[
&-)\!&,uS4^`WUV^^pGE"b8i;s*tXZrt5;rs8RTSs8W&uJ,fNK#QOi%!<3!#!!iQ(!W2rsrriB-s8Vip
rr3-%#QOi!!WN*&!!iQ(p]:Bo"b7-`s6p'grrmo`s8VQjrr3/;+92B1"9/<(n:1K<n,rOe!Up3frrMTk
qYpTc"8`#un,rOe!Up3frrMTkqYpQb!!E)t!Up3frrMTkqYpTc"8`#un,rOe!Up3frrMTkqYpTc"8`#u
n,rOe!Up3frrMTkrVm30s8VQjs8Vio#QOW#!=/Z$!!*?)rW)ls!=/Z$!!*?)q>^s0s8VQjs8W&u#QOhn
"9/<(J-Z,Sn,r[i"i(BCs6p-irrq<cs8VQjrr3/[#QOhn"9/<(i!9;^n,r[i"lKXcs6p-irrq<cs8VQj
rr3/[#QOhn"9/<(i!9;^n,r[i#2fads6p-j#QOh^#QOhn"9/<(i!9;^n,r[i"lKXcs6p-irrq<cs8VQj
rr3/[#QOhn"9/<(i!9;^n,r[i"lKXcs6p-irrq<cs8VQjrr3/[#QOhn"9/<(i!9;^n,r[i"lKXcs6p-i
rrq<cs8VQjrr3/[#QOhn"9/<*i!9;^n,r^j#63Tds8VQjrr3/[#QOhn"9/<(i!9;^n,r[i"lKXcs6p-i
rrq<cs8VQjrr3/[#QOhn"9/<(i!9;^n,r[i"lKXcs6p-irrq<cs8VQjrr3/[#QOhn"9/<(i!9;^n,r[i
"lKXcs6p-irrq<cs8VQjrr3/[#QOhn"9/<(i!9;^n,r[i"lKXcs6p-irrq<cs8VQjrr3/[#QOhn"9/<(
i!9;^n,r[i"lKXcs6p-irrq<cs8VQjrr3/[#QOhn"9/<(i!9;^n,r[i"lKXcs6p-irrq<cs8V!Xrr3DB
"98CO!.Y%K!!*%LrVuqJr;ZhJrW!"L!!!'#!.b%K!.XqI!.b%K!.XqI!.b%K!.XqIJ,~>

%%EndBinary
grestore
np
f
-57.4712 409.268 mo
-51.7112 409.268 li
-51.7112 401.588 li
-57.4712 401.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.76 0 0 7.68 -231.534 -59.5515 ]ct
<<
/T 1
/W 48 
/H 64 
/M[48 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
@fQE<rrE)o!"\i)*rl9On,Nt!!"\"8#64`7_tX<6!"XkS!<<*1&)[He!"L+/!<7QZ5MuPA^^NHc!<:sc
J)C>,i!=hj!<:s_s6p'hhuNfP"979[s83-%huWlW&-(PgrVloV!WE$!huirX!T4(YrrM$[rVloV"9&6#
huirX!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\
!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z&huF#\rrM$_rVloV#Q=Z'i!95\!T44]rrM$_
rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'^]XQ8rrE&ur;Zj?s8;ou
+929>!?_@?!!+2ArW!!"+9-i~>

%%EndBinary
grestore
np
f
-50.6312 409.508 mo
-45.1112 409.508 li
-45.1112 401.468 li
-50.6312 401.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.52 0 0 8.04 -224.694 -59.7915 ]ct
<<
/T 1
/W 46 
/H 67 
/M[46 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
2ZNdW&-!aOn,NIf+90+V!'DA'!.WoD+8c6@qu@i6&-)Y0+7MMps1f`7J,fQ,+5hYKs55!7rr3&h+2ImU
!r*jgrr3&p++aFk!rO,@rr3&t*s)B@!rO,@rr3&t*s)B@!ra8Arr3'!*ru<?%fROMJ,fQJ*rnP*s8F)?
"s<mFrZ?Y$rVlnK"9&6$J,k)urrTt9#QF`3^]4?Vs8V!W!!3-"nGWChJ,f<C!!48Br;HZt#QOf&!!rc-
s*t(L!WW2XrW!$"s7lQn!e:7MrW!-es8Vio!$D4?!l+dHrr3&t!"]&.!<<B'rrR]UO8f.]i!0em"TSMk
!tYD2!r)j&rr3&p!sei*!rN-*rr3&t!sei*!rN-&rr3'!!sAQ&!r`9(rr3'!!s/E$!r`9&rr3'!#6Fi(
!r`E)rr3&t#6=c'0)Q4[J,fQH%feios7dZ95QCcY*rmD_s6r5Q#QOh^IfP-$s+(+M_#OB7rr_1$'^uA-
#P\9!&-!1>!!%NK+90+Ys8RT~>

%%EndBinary
grestore
np
f
-44.0312 409.508 mo
-38.7512 409.508 li
-38.7512 398.708 li
-44.0312 398.708 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.28 0 0 10.8 -218.094 -59.7915 ]ct
<<
/T 1
/W 44 
/H 90 
/M[44 0 0 -90 0 90 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!rr;<r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;Qc7r;QbLr;QbLr;QbLr;QbLr;QbLr;Qa!r;Qa!r;Qa!rVlot
"9&6#rWE-!!W3&urrN$"rVlon"9&6#p]LKp!Up3irrM$[rVlo6"9&6#J-5cM!<<6$rrDuq!!,=Rr;Zg^
qu?^]qu?^]qu?g`s6p-hrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof
"9&6"n,NRhrrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh
!Up3irrMTkrVlof"9&6#n,rXh!Up3irrMTkrVlof"9&6#n,rXh#Ohiqrt#/!"+L:M&-),$s8NW0n,r^j
&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-),$s8NW0n,r^j&-)D,
s8EQ/p]:Eo+92*:s8F,?p]:Eo+926>s83u=quHcp5QC]_s85+]rr@QDJ,fP!56gV,s8TkVi;W`Xi!4i4
rrVZi"9/<%qu@!#rrTtXs*t~>

%%EndBinary
grestore
np
f
-37.4312 406.028 mo
-32.9912 406.028 li
-32.9912 405.068 li
-37.4312 405.068 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[4.44 0 0 .96 -211.494 -56.3115 ]ct
<<
/T 1
/W 37 
/H 8 
/M[37 0 0 -8 0 8 ]
/MD false
/BC 1 
/I true
/D[0 1 ]
/DS 
<~!!!!!#64`(!!`K(!!!6(!!!!(!!!!!#64`(!!`K(!!!6(!!!!(~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
-31.4312 409.508 mo
-23.8712 409.508 li
-23.8712 401.468 li
-31.4312 401.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.56 0 0 8.04 -205.494 -59.7915 ]ct
<<
/T 1
/W 63 
/H 67 
/M[63 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3#7#Q4T(qu?_HrVluh!!",>rr^%Yn-Apl!s&B#!WN*Qqud!!J:IV!p]pj!^d%l!n.5R!i#i"!i#i"!
n.5R!^d%l!p]pj!J:IV!qud!!!<3!$rW3&u!<3!$rW)ur!WE$#!.XnIrVls"J+s-Err@QN5PP?Zrr[d9
n,rXh"+VK_#Q=Z)^`VJ>rVlu8&)[]krr^%I^^'i<"2G/W&,lM1i!7%.rVluX#Cm?`rr_0]J.MVY"5j93
&,lM1hueK?rVluX!rrl1rr_0[!"]&."5j1[&,lM1huNfgrVluX!<<Z/rr_0[!"]&."5j1[&,lM1huNfg
rVluX!<<Z/rr_0[!"]&."5j1[&,lM1huNfgrVluX!It^Zrr_0]J.MVY"5j93&,lM1hueK?rVluX"2G0?
rr^%A^^'i<"2G/W#Q=Z)^^&d&rr3-$^^o?.rVlu8&+B]"rr[cnn,rXh"+VKg"9&6%J3Wf0rVls"5PtQ\
rrW7NrW)rt"TAE$rW)rt1&_1Qrr@QKs82ots+!?6s7c]rs1f`Vs6p9ns54Ffs54Ffs7cj!s1gl!s82ot
rr@QJrrW7NquQcr!Iu6mn,rXh"5j.Z&,lM1qu?_Hr;Qf5#QFaR~>

%%EndBinary
grestore
np
f
-22.7912 409.268 mo
-17.0312 409.268 li
-17.0312 401.588 li
-22.7912 401.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.76 0 0 7.68 -196.854 -59.5515 ]ct
<<
/T 1
/W 48 
/H 64 
/M[48 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
@fQE<rrE)o!"\i)*rl9On,Nt!!"\"8#64`7_tX<6!"XkS!<<*1&)[He!"L+/!<7QZ5MuPA^^NHc!<:sc
J)C>,i!=hj!<:s_s6p'hhuNfP"979[s83-%huWlW&-(PgrVloV!WE$!huirX!T4(YrrM$[rVloV"9&6#
huirX!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\
!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z&huF#\rrM$_rVloV#Q=Z'i!95\!T44]rrM$_
rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'^]XQ8rrE&ur;Zj?s8;ou
+929>!?_@?!!+2ArW!!"+9-i~>

%%EndBinary
grestore
np
f
-15.9512 409.508 mo
-7.55124 409.508 li
-7.55124 397.268 li
-15.9512 397.268 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.4 0 0 12.24 -190.014 -59.7915 ]ct
<<
/T 1
/W 70 
/H 102 
/M[70 0 0 -102 0 102 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
qu6]p+8c'>huFksrr`0!!$D.="8i-!+8l-@qu?^=r;Qls!!",=rr`0!!$D+<!r)a;qu6`s!$D(;!<=5<
rrIWlqYpSH+8Z!<J04Xf"+VKns8;ltJ04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9grrIWlqYpSH+8Z!<
J04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9ks8DruJ04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9grrIWl
qYpSH+8u3B^^'mi+9)9Dqu?`sJ04dj"n2Kl5CajTrrp1Kn.1$krr3T2J,T\'+92B=!WW1PJ04gkp]EAQ
s1s4-s8VQns8VS=+92B!+92B9!$D7@^`WUVqu@i=s+!?6s82j=s8N(Ks8W&u+92<?rVm!#+926=rVm!#
+92*:rVm"N+92*:rVm"N+91g2rVm"N+91g4rVm"N+917$rVm"N+917$rVm(P+90+]s8N<'s*u3k^^'i<
"FqTo^^'i<"FqToJ-Z&Q"FqToJ-Z&Q"FqToJ.MVY"FqToJ.MVY"FqTo!"]&."FqTo!"]&."FqTo!"]&.
"FqTo!"]&."FqTo!"]&."FqTo!"]&."FqTo!"]&."FqTo!"])/"oj)prr<T.rrdiorr<T.rrdiorr<T.
rrdiorr<T.rrdios*tXYrrdios*tXYrrdios*tXYrrdios*t@Qrrdios*t@Qrrdios1em<rrdios1em<
rrdios54.\rrdios54"Xrrdios54"Xrrdios6p-hrrdios7cWnrrdios7cWnrr`<Ds82lqrr`<Ds8E#t
s&/gr+92<?J,fQH!$D7@!.Y%Kqu@i=s+!?6s7cR)s8TkVs8VS=#QOh^&-)[gJ-#]Mn-B!nK7Eq(s82ot
rs+&S"98?#s83CX!!E9$J03\kJ.hnbs8V!W!.TM!"98Dr!!3+M!.Y"J"b7-`KE(t%~>

%%EndBinary
grestore
np
f
-6.47124 409.508 mo
.128769 409.508 li
.128769 401.468 li
-6.47124 401.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 -180.534 -59.7915 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
1.20877 409.268 mo
6.96877 409.268 li
6.96877 401.588 li
1.20877 401.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.76 0 0 7.68 -172.854 -59.5515 ]ct
<<
/T 1
/W 48 
/H 64 
/M[48 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
@fQE<rrE)o!"\i)*rl9On,Nt!!"\"8#64`7_tX<6!"XkS!<<*1&)[He!"L+/!<7QZ5MuPA^^NHc!<:sc
J)C>,i!=hj!<:s_s6p'hhuNfP"979[s83-%huWlW&-(PgrVloV!WE$!huirX!T4(YrrM$[rVloV"9&6#
huirX!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\
!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z&huF#\rrM$_rVloV#Q=Z'i!95\!T44]rrM$_
rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'^]XQ8rrE&ur;Zj?s8;ou
+929>!?_@?!!+2ArW!!"+9-i~>

%%EndBinary
grestore
np
f
8.88876 412.628 mo
10.9288 412.628 li
10.9288 407.468 li
8.88876 407.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[2.04 0 0 5.16 -165.174 -62.9115 ]ct
<<
/T 1
/W 17 
/H 43 
/M[17 0 0 -43 0 43 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
IdeHZi",k'#QK;Vrr<*"!!3*"!<3$!rr<'!!!%KK!.TM!J%u2:i!b,)*.S"dJ,fFrs87BHr."bEJ,f:n
s7lWoq#CBhs8Vlos7$'gnc/XJs8V-Zs5X.Z_uKbWs8RlSrt#/0+92<^s85+]r."bAJ,f$<s5F"X_uKc"
s8RT~>

%%EndBinary
grestore
np
f
18.2487 409.508 mo
25.8087 409.508 li
25.8087 401.468 li
18.2487 401.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[7.56 0 0 8.04 -155.815 -59.7915 ]ct
<<
/T 1
/W 63 
/H 67 
/M[63 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3#7#Q4T(qu?_HrVluh!!",>rr^%Yn-Apl!s&B#!WN*Qqud!!J:IV!p]pj!^d%l!n.5R!i#i"!i#i"!
n.5R!^d%l!p]pj!J:IV!qud!!!<3!$rW3&u!<3!$rW)ur!WE$#!.XnIrVls"J+s-Err@QN5PP?Zrr[d9
n,rXh"+VK_#Q=Z)^`VJ>rVlu8&)[]krr^%I^^'i<"2G/W&,lM1i!7%.rVluX#Cm?`rr_0]J.MVY"5j93
&,lM1hueK?rVluX!rrl1rr_0[!"]&."5j1[&,lM1huNfgrVluX!<<Z/rr_0[!"]&."5j1[&,lM1huNfg
rVluX!<<Z/rr_0[!"]&."5j1[&,lM1huNfgrVluX!It^Zrr_0]J.MVY"5j93&,lM1hueK?rVluX"2G0?
rr^%A^^'i<"2G/W#Q=Z)^^&d&rr3-$^^o?.rVlu8&+B]"rr[cnn,rXh"+VKg"9&6%J3Wf0rVls"5PtQ\
rrW7NrW)rt"TAE$rW)rt1&_1Qrr@QKs82ots+!?6s7c]rs1f`Vs6p9ns54Ffs54Ffs7cj!s1gl!s82ot
rr@QJrrW7NquQcr!Iu6mn,rXh"5j.Z&,lM1qu?_Hr;Qf5#QFaR~>

%%EndBinary
grestore
np
f
27.0087 409.268 mo
35.5287 409.268 li
35.5287 401.588 li
27.0087 401.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 7.68 -147.055 -59.5515 ]ct
<<
/T 1
/W 71 
/H 64 
/M[71 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"onQ4s6p'gs).T3&-%.[5QC``!"]&/!"],0!!!Q)#N,^arr<$0n3?[Ks8N'!&)dKe!<<'!!"[!IrW)uu
rW!Ias8N(Ks8RT[&-)Y05QCc!%Nk`NJ3X)6i!_jMs*u3ks54<8s8RTks8V!_J,fP!+92B!#lai+^`WUV
!T3tWrrp1Ks8V!Xrr3/;&-)[f!WN*&^^pJFhuiuY"i(ZKs54"Yrrp1Ks8V!Zrr3/;&-)[f"9/<(^^pJF
i!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3,:&-)[f
!!iN'"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f
#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^
rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]
rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`-^^pJFi!98e
s8TkFs8Tk:rr3@V#QOf(!<<)u!!3,u!!*#t!!!&u!!*#t!!!&u!!*#t!!!&u!!*#t!!!&u!!*#t!!!%M
~>

%%EndBinary
grestore
np
f
36.4887 409.508 mo
43.0887 409.508 li
43.0887 401.468 li
36.4887 401.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 -137.575 -59.7915 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
43.9287 406.028 mo
48.3687 406.028 li
48.3687 405.068 li
43.9287 405.068 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[4.44 0 0 .96 -130.135 -56.3115 ]ct
<<
/T 1
/W 37 
/H 8 
/M[37 0 0 -8 0 8 ]
/MD false
/BC 1 
/I true
/D[0 1 ]
/DS 
<~!!!!!#64`(!!`K(!!!6(!!!!(!!!!!#64`(!!`K(!!!6(!!!!(~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
50.0487 409.508 mo
55.5687 409.508 li
55.5687 401.468 li
50.0487 401.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.52 0 0 8.04 -124.015 -59.7915 ]ct
<<
/T 1
/W 46 
/H 67 
/M[46 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
2ZNdW&-!aOn,NIf+90+V!'DA'!.WoD+8c6@qu@i6&-)Y0+7MMps1f`7J,fQ,+5hYKs55!7rr3&h+2ImU
!r*jgrr3&p++aFk!rO,@rr3&t*s)B@!rO,@rr3&t*s)B@!ra8Arr3'!*ru<?%fROMJ,fQJ*rnP*s8F)?
"s<mFrZ?Y$rVlnK"9&6$J,k)urrTt9#QF`3^]4?Vs8V!W!!3-"nGWChJ,f<C!!48Br;HZt#QOf&!!rc-
s*t(L!WW2XrW!$"s7lQn!e:7MrW!-es8Vio!$D4?!l+dHrr3&t!"]&.!<<B'rrR]UO8f.]i!0em"TSMk
!tYD2!r)j&rr3&p!sei*!rN-*rr3&t!sei*!rN-&rr3'!!sAQ&!r`9(rr3'!!s/E$!r`9&rr3'!#6Fi(
!r`E)rr3&t#6=c'0)Q4[J,fQH%feios7dZ95QCcY*rmD_s6r5Q#QOh^IfP-$s+(+M_#OB7rr_1$'^uA-
#P\9!&-!1>!!%NK+90+Ys8RT~>

%%EndBinary
grestore
np
f
56.7688 409.268 mo
60.4888 409.268 li
60.4888 397.628 li
56.7688 397.628 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[3.72 0 0 11.64 -117.294 -59.5515 ]ct
<<
/T 1
/W 31 
/H 97 
/M[31 0 0 -97 0 97 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!WV*Ws"o6js8N'@s8E!/s8E!/s82j%s82j%s82j%s82j%s82j%s8E!/s8E!/s8N'@s8RU6s8V#is8)b>
#QO]%#QK;S#QK;S#QK;S#QK;S#QK;S#QOc'#QOgS#QOh>#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^
#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^E<lODi!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^^]XW:!!3-!!!!'!!!!'!!!**#!WW3$rVup!
J,~>

%%EndBinary
grestore
np
f
61.5688 409.508 mo
69.9688 409.508 li
69.9688 397.268 li
61.5688 397.268 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.4 0 0 12.24 -112.494 -59.7915 ]ct
<<
/T 1
/W 70 
/H 102 
/M[70 0 0 -102 0 102 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
qu6]p+8c'>huFksrr`0!!$D.="8i-!+8l-@qu?^=r;Qls!!",=rr`0!!$D+<!r)a;qu6`s!$D(;!<=5<
rrIWlqYpSH+8Z!<J04Xf"+VKns8;ltJ04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9grrIWlqYpSH+8Z!<
J04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9ks8DruJ04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9grrIWl
qYpSH+8u3B^^'mi+9)9Dqu?`sJ04dj"n2Kl5CajTrrp1Kn.1$krr3T2J,T\'+92B=!WW1PJ04gkp]EAQ
s1s4-s8VQns8VS=+92B!+92B9!$D7@^`WUVqu@i=s+!?6s82j=s8N(Ks8W&u+92<?rVm!#+926=rVm!#
+92*:rVm"N+92*:rVm"N+91g2rVm"N+91g4rVm"N+917$rVm"N+917$rVm(P+90+]s8N<'s*u3k^^'i<
"FqTo^^'i<"FqToJ-Z&Q"FqToJ-Z&Q"FqToJ.MVY"FqToJ.MVY"FqTo!"]&."FqTo!"]&."FqTo!"]&.
"FqTo!"]&."FqTo!"]&."FqTo!"]&."FqTo!"]&."FqTo!"])/"oj)prr<T.rrdiorr<T.rrdiorr<T.
rrdiorr<T.rrdios*tXYrrdios*tXYrrdios*tXYrrdios*t@Qrrdios*t@Qrrdios1em<rrdios1em<
rrdios54.\rrdios54"Xrrdios54"Xrrdios6p-hrrdios7cWnrrdios7cWnrr`<Ds82lqrr`<Ds8E#t
s&/gr+92<?J,fQH!$D7@!.Y%Kqu@i=s+!?6s7cR)s8TkVs8VS=#QOh^&-)[gJ-#]Mn-B!nK7Eq(s82ot
rs+&S"98?#s83CX!!E9$J03\kJ.hnbs8V!W!.TM!"98Dr!!3+M!.Y"J"b7-`KE(t%~>

%%EndBinary
grestore
np
f
71.0488 409.508 mo
77.6488 409.508 li
77.6488 401.468 li
71.0488 401.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 -103.014 -59.7915 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
78.8488 409.508 mo
87.2488 409.508 li
87.2488 397.268 li
78.8488 397.268 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.4 0 0 12.24 -95.2145 -59.7915 ]ct
<<
/T 1
/W 70 
/H 102 
/M[70 0 0 -102 0 102 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
qu6]p+8c'>huFksrr`0!!$D.="8i-!+8l-@qu?^=r;Qls!!",=rr`0!!$D+<!r)a;qu6`s!$D(;!<=5<
rrIWlqYpSH+8Z!<J04Xf"+VKns8;ltJ04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9grrIWlqYpSH+8Z!<
J04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9ks8DruJ04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9grrIWl
qYpSH+8u3B^^'mi+9)9Dqu?`sJ04dj"n2Kl5CajTrrp1Kn.1$krr3T2J,T\'+92B=!WW1PJ04gkp]EAQ
s1s4-s8VQns8VS=+92B!+92B9!$D7@^`WUVqu@i=s+!?6s82j=s8N(Ks8W&u+92<?rVm!#+926=rVm!#
+92*:rVm"N+92*:rVm"N+91g2rVm"N+91g4rVm"N+917$rVm"N+917$rVm(P+90+]s8N<'s*u3k^^'i<
"FqTo^^'i<"FqToJ-Z&Q"FqToJ-Z&Q"FqToJ.MVY"FqToJ.MVY"FqTo!"]&."FqTo!"]&."FqTo!"]&.
"FqTo!"]&."FqTo!"]&."FqTo!"]&."FqTo!"]&."FqTo!"])/"oj)prr<T.rrdiorr<T.rrdiorr<T.
rrdiorr<T.rrdios*tXYrrdios*tXYrrdios*tXYrrdios*t@Qrrdios*t@Qrrdios1em<rrdios1em<
rrdios54.\rrdios54"Xrrdios54"Xrrdios6p-hrrdios7cWnrrdios7cWnrr`<Ds82lqrr`<Ds8E#t
s&/gr+92<?J,fQH!$D7@!.Y%Kqu@i=s+!?6s7cR)s8TkVs8VS=#QOh^&-)[gJ-#]Mn-B!nK7Eq(s82ot
rs+&S"98?#s83CX!!E9$J03\kJ.hnbs8V!W!.TM!"98Dr!!3+M!.Y"J"b7-`KE(t%~>

%%EndBinary
grestore
np
f
94.0888 409.508 mo
102.489 409.508 li
102.489 397.268 li
94.0888 397.268 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.4 0 0 12.24 -79.9745 -59.7915 ]ct
<<
/T 1
/W 70 
/H 102 
/M[70 0 0 -102 0 102 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
qu6]p+8c'>huFksrr`0!!$D.="8i-!+8l-@qu?^=r;Qls!!",=rr`0!!$D+<!r)a;qu6`s!$D(;!<=5<
rrIWlqYpSH+8Z!<J04Xf"+VKns8;ltJ04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9grrIWlqYpSH+8Z!<
J04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9ks8DruJ04Xf!Iu9grrIWlqYpSH+8Z!<J04Xf!Iu9grrIWl
qYpSH+8u3B^^'mi+9)9Dqu?`sJ04dj"n2Kl5CajTrrp1Kn.1$krr3T2J,T\'+92B=!WW1PJ04gkp]EAQ
s1s4-s8VQns8VS=+92B!+92B9!$D7@^`WUVqu@i=s+!?6s82j=s8N(Ks8W&u+92<?rVm!#+926=rVm!#
+92*:rVm"N+92*:rVm"N+91g2rVm"N+91g4rVm"N+917$rVm"N+917$rVm(P+90+]s8N<'s*u3k^^'i<
"FqTo^^'i<"FqToJ-Z&Q"FqToJ-Z&Q"FqToJ.MVY"FqToJ.MVY"FqTo!"]&."FqTo!"]&."FqTo!"]&.
"FqTo!"]&."FqTo!"]&."FqTo!"]&."FqTo!"]&."FqTo!"])/"oj)prr<T.rrdiorr<T.rrdiorr<T.
rrdiorr<T.rrdios*tXYrrdios*tXYrrdios*tXYrrdios*t@Qrrdios*t@Qrrdios1em<rrdios1em<
rrdios54.\rrdios54"Xrrdios54"Xrrdios6p-hrrdios7cWnrrdios7cWnrr`<Ds82lqrr`<Ds8E#t
s&/gr+92<?J,fQH!$D7@!.Y%Kqu@i=s+!?6s7cR)s8TkVs8VS=#QOh^&-)[gJ-#]Mn-B!nK7Eq(s82ot
rs+&S"98?#s83CX!!E9$J03\kJ.hnbs8V!W!.TM!"98Dr!!3+M!.Y"J"b7-`KE(t%~>

%%EndBinary
grestore
np
f
103.569 409.268 mo
107.289 409.268 li
107.289 397.628 li
103.569 397.628 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[3.72 0 0 11.64 -70.4945 -59.5515 ]ct
<<
/T 1
/W 31 
/H 97 
/M[31 0 0 -97 0 97 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
!WV*Ws"o6js8N'@s8E!/s8E!/s82j%s82j%s82j%s82j%s82j%s8E!/s8E!/s8N'@s8RU6s8V#is8)b>
#QO]%#QK;S#QK;S#QK;S#QK;S#QK;S#QOc'#QOgS#QOh>#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^
#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^#QOh^E<lODi!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^
i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^i!9;^^]XW:!!3-!!!!'!!!!'!!!**#!WW3$rVup!
J,~>

%%EndBinary
grestore
np
f
108.129 409.268 mo
118.569 409.268 li
118.569 397.028 li
108.129 397.028 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[10.44 0 0 12.24 -65.9345 -59.5515 ]ct
<<
/T 1
/W 87 
/H 102 
/M[87 0 0 -102 0 102 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rVm&j!.Y%D"9&6)rVup/s*t*!rr35m!!!'!!!",?rs-=ArW)]op^dB(:B2L:i,Ar!#QOi%!.Y%D+<U@\
s8Vips8VQg5O\dTs6p9ns53lAhuWlXi",kf^]8lB!WW28+92@k!<:sXs8RU6s8RTLs53qXrr>:`rt9h_
s53qXrW%HJs*t.MhuWlU!<3!'J-#]>"989!rr34R"98-$s7cWors-=As83E-p]:Bo!T4(YrrMlqrr3#W
#Q=Z'n,`Og!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'
n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i
!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!8mh^rVlof"9/<$i!95\!Up3jrrM$_
rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!98]p](="s7cQp#QOQ!!=/Z"!!*?)p](F%s8VQjrr3#W
#Q=Z&n,NRirrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\
!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3j
rrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_
rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof
"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrM$_rVlof"9/<$
i!95\!Up3jrrM$_rVlof"9/<$i!95\!Up3jrrV*`s8N$!n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]
rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTkrr3#W#Q=Z'n,r[i!T44]rrMTk
rr3#W#Q=Z'n,r[i!T44]rrVZlrr`<$i!95\!Up3jrrM$_rVlof"9/<$i!95\!T4"XrrKn;rVm(P!.Y%K
!!*#u!.b%K!.XqI![%GmrVuqJr;Zm@s+((K!.XqI![%GmrVuqJr;Zm@s+((K!.XqI!?_>l~>

%%EndBinary
grestore
np
f
118.329 409.508 mo
124.929 409.508 li
124.929 401.468 li
118.329 401.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 -55.7345 -59.7915 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
126.009 409.268 mo
131.769 409.268 li
131.769 401.588 li
126.009 401.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.76 0 0 7.68 -48.0545 -59.5515 ]ct
<<
/T 1
/W 48 
/H 64 
/M[48 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
@fQE<rrE)o!"\i)*rl9On,Nt!!"\"8#64`7_tX<6!"XkS!<<*1&)[He!"L+/!<7QZ5MuPA^^NHc!<:sc
J)C>,i!=hj!<:s_s6p'hhuNfP"979[s83-%huWlW&-(PgrVloV!WE$!huirX!T4(YrrM$[rVloV"9&6#
huirX!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\
!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z&huF#\rrM$_rVloV#Q=Z'i!95\!T44]rrM$_
rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'i!95\!T44]rrM$_rVloV#Q=Z'^]XQ8rrE&ur;Zj?s8;ou
+929>!?_@?!!+2ArW!!"+9-i~>

%%EndBinary
grestore
np
f
132.729 409.508 mo
139.329 409.508 li
139.329 401.468 li
132.729 401.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 -41.3345 -59.7915 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
140.529 409.268 mo
149.049 409.268 li
149.049 401.588 li
140.529 401.588 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[8.52 0 0 7.68 -33.5345 -59.5515 ]ct
<<
/T 1
/W 71 
/H 64 
/M[71 0 0 -64 0 64 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
"onQ4s6p'gs).T3&-%.[5QC``!"]&/!"],0!!!Q)#N,^arr<$0n3?[Ks8N'!&)dKe!<<'!!"[!IrW)uu
rW!Ias8N(Ks8RT[&-)Y05QCc!%Nk`NJ3X)6i!_jMs*u3ks54<8s8RTks8V!_J,fP!+92B!#lai+^`WUV
!T3tWrrp1Ks8V!Xrr3/;&-)[f!WN*&^^pJFhuiuY"i(ZKs54"Yrrp1Ks8V!Zrr3/;&-)[f"9/<(^^pJF
i!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3,:&-)[f
!!iN'"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f
#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^
rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]
rrp1Ks8V!^rr3/;&-)[f#QF`,^^pJFi!98]"i(ZKs54.]rrp1Ks8V!^rr3/;&-)[f#QF`-^^pJFi!98e
s8TkFs8Tk:rr3@V#QOf(!<<)u!!3,u!!*#t!!!&u!!*#t!!!&u!!*#t!!!&u!!*#t!!!&u!!*#t!!!%M
~>

%%EndBinary
grestore
np
f
150.129 409.508 mo
156.609 409.508 li
156.609 401.468 li
150.129 401.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.48 0 0 8.04 -23.9345 -59.7915 ]ct
<<
/T 1
/W 54 
/H 67 
/M[54 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3"L&,lM0p](<mrr_0Z!$D4?B7M)^&-)\/!.XtMs8Vuts8RZMs7cj!s5<qWi",kfn:1JR+92B95Q?6u
s8VRQrr>:`s1f`V!.Y%KJ04ajJ,fNK&,ZG-s8E!/p]1?orW!K(!WW3!!"\Q"s8W&u&+B]$s8E!/i!0Aa
s8E!/huiuY!rsFY#QF`*J3UgSrr3)9J%u<errIWTr;QeJ#Q4T&J-Z#P!It^YrrE*1r;Qct&,cG.!"]#-
!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrE*1r;QeJ&,cG.J.MSX!ItFQ
rrIWTr;QeJ#Q4T&^^'f;!Pes<rrM$[rVlr:huirX!lNpurVlr:n,`Lf!e^7KrVlqSp]19m!XJW'rVls1
rW%F/s8W'/rW%HJs8F,?!'gM`r#brh+92B95QAM@s8VS<s54Ffs5<qWn-B!n_>jQ5!WW0%s8W&uJ,BQN
rr[cni",he"5j.Z5Q:Zap](<lrr[c^s8RT~>

%%EndBinary
grestore
np
f
157.689 409.508 mo
164.289 409.508 li
164.289 401.468 li
157.689 401.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[6.6 0 0 8.04 -16.3745 -59.7915 ]ct
<<
/T 1
/W 55 
/H 67 
/M[55 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
rr3!!+8u3@p](?nrr^%:!.Y"J2ZQ'm+92B?!<:sfs8Virs7c]rs6p9nquQiti#i!u!<<)7+92?@J,b$`
s8RV!rr@QKs+!?5!<3!#^`WISrr3)9+8c0=rr_0ip]:Bo"5j^b!WN*$i!8`Rrr3)i#N,^`rrVZphuElY
rr_`mi!98]"7QE.#QF`*p]J;:rr3)q"2G0@rr`#uJ-Z)R"8DnI&,uS2p]5mUrr3)q!It^[rr`#s!"])/
"8Dls&,uS0p]:6l!!2rs!!2rs!W`93r;Qct&,cG.!"]#-!<<Z.rrE*1r;Qct&,cG.!"]#-!<<Z.rrIW\
r;QeJ&,cG.J-Z#P!ItFQrrKn?r;Qf5#Q4T&^^'f;!T4(YrrV0;"9&6$iU?sJrrV0K"9&6$_>"'0rrU+9
!WE$"KDY`Jrr\&U!<<&u!sei+J,]Hs&-%/Es8W'/s1gl!s83u=i#i"!pcnfJ&-)\!J,f9Gs8V$Ws82ot
s+11L!s!iM"9/<&J.LQKrr3)Y!!#7_rrW)u!;uj!^^'o>J,~>

%%EndBinary
grestore
np
f
165.489 409.508 mo
171.009 409.508 li
171.009 401.468 li
165.489 401.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[5.52 0 0 8.04 -8.57446 -59.7915 ]ct
<<
/T 1
/W 46 
/H 67 
/M[46 0 0 -67 0 67 ]
/BC 1 
/I true
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
2ZNdW&-!aOn,NIf+90+V!'DA'!.WoD+8c6@qu@i6&-)Y0+7MMps1f`7J,fQ,+5hYKs55!7rr3&h+2ImU
!r*jgrr3&p++aFk!rO,@rr3&t*s)B@!rO,@rr3&t*s)B@!ra8Arr3'!*ru<?%fROMJ,fQJ*rnP*s8F)?
"s<mFrZ?Y$rVlnK"9&6$J,k)urrTt9#QF`3^]4?Vs8V!W!!3-"nGWChJ,f<C!!48Br;HZt#QOf&!!rc-
s*t(L!WW2XrW!$"s7lQn!e:7MrW!-es8Vio!$D4?!l+dHrr3&t!"]&.!<<B'rrR]UO8f.]i!0em"TSMk
!tYD2!r)j&rr3&p!sei*!rN-*rr3&t!sei*!rN-&rr3'!!sAQ&!r`9(rr3'!!s/E$!r`9&rr3'!#6Fi(
!r`E)rr3&t#6=c'0)Q4[J,fQH%feios7dZ95QCcY*rmD_s6r5Q#QOh^IfP-$s+(+M_#OB7rr_1$'^uA-
#P\9!&-!1>!!%NK+90+Ys8RT~>

%%EndBinary
grestore
np
f
173.169 409.268 mo
174.969 409.268 li
174.969 407.468 li
173.169 407.468 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 174.063 349.716 ]ct
[1.8 0 0 1.8 -.89447 -59.5515 ]ct
<<
/T 1
/W 15 
/H 15 
/M[15 0 0 -15 0 15 ]
/MD false
/BC 1 
/I true
/D[0 1 ]
/DS 
<~pcm[I^^#AlJ-,cP!!*'#!!*'#J-1<(^^&d.pce~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/DZCZBK+Helvetica*1 uf/DZCZBK+Helvetica uf/JXRAAA+Helvetica uf/DZCZBJ+Courier-Oblique-Identity-H uf/DZCZBJ+Courier-Oblique /CIDFont ur/DZCZBI+Courier-Oblique*1 uf/DZCZBI+Courier-Oblique uf/SBVPMX+Courier-Oblique ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
